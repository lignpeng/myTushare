{"version":3,"sources":["webpack://ClChart/webpack/universalModuleDefinition","webpack://ClChart/webpack/bootstrap","webpack://ClChart/./src/util/cl.tool.js","webpack://ClChart/./src/data/cl.data.tools.js","webpack://ClChart/./src/cl.data.def.js","webpack://ClChart/./src/formula/cl.formula.js","webpack://ClChart/./src/util/cl.draw.js","webpack://ClChart/./src/chart/cl.chart.tools.js","webpack://ClChart/./src/chart/cl.chart.init.js","webpack://ClChart/./src/chart/cl.draw.kbar.js","webpack://ClChart/./src/chart/cl.draw.line.js","webpack://ClChart/./src/chart/cl.draw.right.js","webpack://ClChart/./src/chart/cl.draw.vbar.js","webpack://ClChart/./src/chart/cl.draw.vline.js","webpack://ClChart/./src/cl.chart.def.js","webpack://ClChart/./src/chart/cl.chart.button.js","webpack://ClChart/./src/chart/cl.chart.scroll.js","webpack://ClChart/./src/chart/cl.draw.axisX.js","webpack://ClChart/./src/chart/cl.draw.axisY.js","webpack://ClChart/./src/chart/cl.draw.cursor.js","webpack://ClChart/./src/chart/cl.draw.grid.js","webpack://ClChart/./src/chart/cl.draw.info.js","webpack://ClChart/./src/chart/cl.chart.line.js","webpack://ClChart/./src/chart/cl.chart.order.js","webpack://ClChart/./src/chart/cl.chart.js","webpack://ClChart/./src/event/cl.event.handler.js","webpack://ClChart/./src/event/cl.event.js","webpack://ClChart/./src/data/cl.data.js","webpack://ClChart/./src/plugins/cl.seer.js","webpack://ClChart/./src/plugins/cl.register.js","webpack://ClChart/./src/plugins/cl.seer.def.js","webpack://ClChart/./src/util/cl.ev.js","webpack://ClChart/./src/cl.api.js"],"names":["root","factory","exports","module","define","amd","ClChart","window","t","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","addPreZero","v","slice","getMTime","ttime","mtime","seconds","Date","parseInt","isNaN","getDate","getFullYear","getMonth","getMinute","getHours","getMinutes","getDayWeek","day","Math","floor","getDay","getDayMon","_dayToTTime","getDayGap","beginDay","endDay","fromTTimeToStr","format","ttimePre","getSeconds","getMinuteGap","beginMin","endMin","getMinuteOffset","minute","offset","mincount","copyArrayOfDeep","obj","out","Array","isArray","len","length","copyJsonOfDeep","updateJsonOfDeep","source","isEmptyArray","offsetRect","rect","left","top","width","height","right","bottom","inRect","point","x","y","inRangeX","xx","inRangeY","yy","inArray","arr","indexOf","intersectArray","a","b","result","ai","bi","push","formatVolume","unit","parseFloat","toFixed","String","formatPrice","coinunit","limit","isopen","substr","formatShowTime","toString","formatInfo","volzoom","middle","zero","abs","__webpack_exports__","_util_cl_tool__WEBPACK_IMPORTED_MODULE_1__","getValue","_ref","label","fields","index","arguments","val","idx","pow","vol","money","error","_getExrightPara","rightdata","exrightGs","exrightPg","exrightPx","_cl_data_def__WEBPACK_IMPORTED_MODULE_0__","FIELD_RIGHT","accrual","sendstock","allotstock","allotprice","gs","pg","px","_getExrightPrice","price","rightpara","getExrightPriceRange","start","stop","rights","j","_transExright","days","end","FIELD_DAY","open","high","low","close","_isRight","dateBegin","dateEnd","rightdate","transExrightDay","time","transExrightMin","h","findIndexInMin","status","lastIndex","findDateInDay","today","finded","getSize","checkZero","checkDayZero","checkDay5","tradeDate","tradetime","maxDays","FIELD_DAY5","count","curDate","splice","daymins","getMinuteCount","fromTradeTimeToIndex","allvol","allmoney","updateStatic","coinzoom","stktype","volunit","before","stophigh","stoplow","matchDayToWeek","daydata","zipday","field","isBegin","k","week","matchDayToMon","month","begin","nowmin","fromIndexToTradeTime","tindex","f","u","g","FIELD_TRADE","STOCK_TYPE_INDEX","STOCK_TYPE_A","STOCK_TYPE_B","STOCK_TYPE_OTHER","STOCK_TRADETIME","FIELD_MIN","FIELD_TICK","FIELD_LINE","FIELD_ILINE","FIELD_NOW","buy1","buyvol1","sell1","sellvol1","buy2","buyvol2","sell2","sellvol2","buy3","buyvol3","sell3","sellvol3","buy4","buyvol4","sell4","sellvol4","buy5","buyvol5","sell5","sellvol5","FIELD_ENOW","FIELD_NOW_IDX","ups","upvol","downs","downvol","mids","midvol","FIELD_INFO","marker","code","search","type","FIELD_FINANCE","flow","total","earnings","info","ClFormula","_data_cl_data_tools__WEBPACK_IMPORTED_MODULE_0__","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iterator","from","_classCallCheck","_defineProperties","configurable","writable","_createClass","this","data","minIndex","maxIndex","nowIndex","offIndex","runSingleStock","formula","eval","singleValue","matchData","match","funcName","argStr","replace","split","apply","command","concat","period","off","$","Q","tt","et","nt","at","st","ot","ht","rt","_setLineWidth","context","lineWidth","_drawVline","yy1","yy2","moveTo","lineTo","_drawHline","xx1","xx2","_drawmoveTo","_drawlineTo","_drawRect","ww","hh","strokeRect","_fillRect","fillclr","fillStyle","fillRect","_drawBegin","clr","beginPath","strokeStyle","_drawEnd","stroke","_drawDashLine","x1","y1","x2","y2","dashLen","beveling","sqrt","num","_setFontSize","font","pixel","_drawTxt","txt","pos","textBaseline","textAlign","fillText","getTxtWith","charMap","fontSize","scale","allWidth","element","_getTxtWidth","measureText","__getTxtRect","config","spaceX","spaceY","_drawTxtRect","xxx","yyy","tr","bakclr","_drawCircle","arc","PI","_drawCircleAndFilled","fill","_drawLineAlone","oldclr","_drawSignCircle","Arc1","Arc2","Arc3","_drawSignHLine","item","linew","display","set","maxR","minR","_drawKBar","unitX","xxm","yyh","round","maxmin","max","unitY","yyl","min","filled","_drawVBar","_setTransColor","scolor","trans","style","sColor","toLowerCase","test","sColorNew","sColorChange","join","findNearTimeToIndex","findvalue","direction","cl_data_tools","setFixedLineFlags","showMode","fixed","maxCount","size","COLOR_WHITE","sys","line","back","baktxt","axis","grid","red","green","white","button","colume","box","COLOR_BLACK","_systemInfo","runPlatform","axisPlatform","eventPlatform","standard","sysColor","0","1","2","3","4","5","6","7","8","9",".",",","%",":"," ","K","V","O","L","-","[","]","mainCanvas","cursorCanvas","cl_chart_init_setColor","syscolor","color","cl_tool","setScale","canvas","clientWidth","clientHeight","initSystem","cfg","initCommonInfo","chart","father","checkLayout","layout","margin","title","axisX","scroll","digit","symbol","changeCursorStyle","cursor","getLineColor","cl_draw_kbar_ClDrawKBar","ClDrawKBar","rectMain","linkInfo","hotKey","getData","codeInfo","cl_draw_line_ClDrawLine","ClDrawLine","labelX","labelY","colorIndex","showSort","skips","cl_draw_right_ClDrawRight","ClDrawRight","rightData","rightMode","G","U","cl_draw_vbar_ClDrawVBar","ClDrawVBar","cl_draw_vline_ClDrawVLine","ClDrawVLine","CHART_LAYOUT","CHART_BUTTONS","CHART_ORDER","ZOOM_INFO_DEF","list","CHART_KBAR","zoomInfo","lines","axisY","className","extremum","method","maxvalue","minvalue","CHART_VBAR","CHART_NOW","CHART_NOWVOL","CHART_DAY5","CHART_DAY5VOL","CHART_NORMAL","DEFAULT_BUTTON","shape","hotIdx","visible","translucent","cl_chart_button_ClChartButton","ClChartButton","callback","map","checkConfig","event","onPaint","self","break","center","DEFAULT_SCROLL","direct","range","select","cl_chart_scroll_ClChartScroll","ClChartScroll","setPublicRect","rectChart","rectMin","rectMax","rectMid","drawClear","drawGridline","drawButton","iscall","xpos","who","undefined","mousePos","findMouseIndex","checkMin","onChange","curIndex","head","tail","dt","xt","cl_draw_axisX_ClDrawAxisX","ClDrawAxisX","text","tradeTime","dataLayer","gt","cl_draw_axisY_ClDrawAxisY","ClDrawAxisY","align","static","hideInfo","posX","offX","offy","bt","cl_draw_cursor_ClDrawCursor","ClDrawCursor","rectFather","axisXInfo","axisYInfo","clearRect","valueX","valueY","_beforePaint","onClear","q","th","_afterPaint","cl_draw_grid_ClDrawGrid","ClDrawGrid","offx","cl_draw_info_ClDrawInfo","ClDrawInfo","rectMess","titleInfo","message","cl_chart_line_ClChartLine","ClChartLine","buttons","childCharts","childDraws","setChildDraw","childLines","setChildLines","setButtons","setScroll","setZoomInfo","axisInfo","rectTitle","rectGridLine","rectAxisYLeft","rectAxisYRight","rectAxisX","rectScroll","ClassName","getLineDataKey","draw","CURSOR","TITLE","AXISY_LEFT","AXISY_RIGHT","AXISX","GRID","init","_this","hasButton","createButton","fastDrawEnd","zoomin","setStatus","zoomout","focused","beforeLocation","getMoveData","drawTitleInfo","moveIndex","locationData","readyData","drawChildDraw","readyDraw","drawChildLines","drawChildCharts","mm","getMiddle","maxrate","minrate","cl_data_def","HSCROLL","readyScroll","newdata","getDataRange","calcMaxMin","showCursorLine","eventLayer","boardEvent","reDraw","newIndex","step","deltaY","keyCode","mouseIndex","getMouseMoveData","cl_chart_order_ClChartOrder","ClChartOrder","txtLen","timeLen","volLen","closeLen","isIndex","orderData","tickData","drawReady","drawIndex","drawOrder","drawTick","rectOrder","rectTick","inow","ticklen","drawGridLine","mmpCount","getColor","maxlines","recs","beginIndex","str","strint","DEFAULT_LINKINFO","locked","hotIndex","cl_chart_ClChart","syscfg","setDataLayer","setEventLayer","fastDraw","clearData","layer","bindChart","initData","JSON","parse","setData","fastBuffer","makeLineData","usercfg","fastDrawBegin","isHideInfo","setColor","_getDistance","xLen","yLen","_getTouchInfo","mouseInfo","offsetX","offsetY","srcRect","getBoundingClientRect","pageX","pageY","_getEventInfo","ClEventHandler","eventBuild","isTouch","eventCanvas","addEventListener","preventDefault","addHandler","touchstart","touchend","touchmove","mousemove","mouseout","mousewheel","mouseup","mousedown","keyup","keydown","click","clearHandler","eventName","handler","attachEvent","removeEventListener","deattachEvent","emitEvent","__timestamp","touches","startX","startY","clearTimeout","longTapTimeout","startTime","now","point2","touchDistance","touchVector","setTimeout","target","previousTouchPoint","previousTouchTime","changedTouches","timestamp","moveX","moveY","previousPinchScale","pinchScale","mouseinfo","vector","angle","vector1","vector2","mr","acos","deltaX","buildMinaTouchEvent","eventObj","cl_event_ClEvent","ClEvent","eventCfg","document","eventSource","bindEvent","firstChart","HotWin","clearEvent","getMousePos","chartPath","findEventPath","ignore","path","cl_data_ClData","ClData","decimal","cl_formula","InData","OutData","flushNowData","nowdata","TICK","MIN","checked","flushTick","flushMin","DAY","mergeDay","NOW","WEEK","mergeWeek","MON","mergeMon","DAY5","mergeDay5","makeMinute","updateMinute","RIGHT","rightmode","outkey","mergeNowMinToMin","curMin","sumVol","sumMoney","hasData","stopIdx","FIELD_SEER","buy","stoploss","uid","cl_register","CHART_SEER","ClDrawSeer","nowprice","no","sourceSeer","startPrice","startTxt","surplus","paceY","drawTransRect","xxRight","infos","yl","stopOffset","stopX","nos","uids","date","hotSeer","lastDate","lastval","showSeer","filterSeer","_loop","showPrice","setHotButton","seerPos","getSeerPos","acrR","drawHotSeer","EV","handlers","_len","args","_key","forEach","scope","_len2","_key2","on","onetimeCallback","removeListener","createMulChart","DEF_CHART","cl_chart_def_namespaceObject","DEF_DATA","PLUGINS","util","createSingleChart","sysInfo","initChart","chartList","charts"],"mappings":"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","file":"clchart.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ClChart\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ClChart\"] = factory();\n\telse\n\t\troot[\"ClChart\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n//   时间处理函数\n\n/** @module ClTool */\n\n/**\n * add prefix with 0\n * @export\n * @param {Number} v\n * @param {Number} n\n * @return {String}\n */\nexport function addPreZero (v, n) { // n表示总共几位  (9,2) ---09\n  n = n > 9 ? 9 : n\n  const s = '000000000' + v\n  return s.slice(-1 * n)\n}\n\n/**\n * get time's millseconds\n * @export\n * @param {any} ttime\n * @return {Number}\n */\nexport function getMTime (ttime) { // 得到1970-1-1开始的毫秒数\n  let mtime, seconds\n  if (ttime === undefined) {\n    mtime = new Date()\n  } else {\n    if (typeof ttime === 'string') {\n      seconds = parseInt(ttime)\n    } else {\n      seconds = ttime\n    }\n    if (!isNaN(seconds)) {\n      mtime = new Date(seconds * 1000)\n    } else {\n      mtime = new Date()\n    }\n  }\n  return mtime\n}\n\n// time_t转换成20180101格式\n/**\n * format time_t to 20180101\n *\n * @export\n * @param {any} ttime\n * @return {Number}\n */\nexport function getDate (ttime) {\n  const mtime = getMTime(ttime)\n  return mtime.getFullYear() * 10000 + (mtime.getMonth() + 1) * 100 + mtime.getDate()\n}\n// time_t提取其中的分钟 1030\nexport function getMinute (ttime) {\n  const mtime = getMTime(ttime)\n  return mtime.getHours() * 100 + mtime.getMinutes()\n}\n// 求星期几 0-周日 6-周六\nexport function getDayWeek (day) {\n  const mtime = new Date(Math.floor(day / 10000), Math.floor((day % 10000) / 100) - 1, day % 100)\n  return mtime.getDay()\n}\n// 求星期几 0-周日 6-周六\nexport function getDayMon (day) {\n  const mtime = new Date(Math.floor(day / 10000), Math.floor((day % 10000) / 100) - 1, day % 100)\n  return mtime.getMonth() + 1\n}\n// 日期转换成time_t\nfunction _dayToTTime (day) {\n  const mtime = new Date(Math.floor(day / 10000), Math.floor((day % 10000) / 100) - 1, day % 100)\n  return mtime / 1000\n}\n// 得到两个日期间隔的天数\nexport function getDayGap (beginDay, endDay) {\n  return Math.floor((_dayToTTime(endDay) - _dayToTTime(beginDay)) / (24 * 3600))\n}\n// 格式化time_t为指定字符串\nexport function fromTTimeToStr (ttime, format, ttimePre) {\n  const mtime = getMTime(ttime)\n  switch (format) {\n    case 'minute':\n      if (ttimePre === undefined) {\n        return mtime.getHours() + ':' + addPreZero(mtime.getMinutes(), 2)\n      } else {\n        if (getMinute(ttime) === getMinute(ttimePre)) {\n          return ':' + addPreZero(mtime.getSeconds(), 2)\n        } else {\n          return mtime.getHours() + ':' + addPreZero(mtime.getMinutes(), 2)\n        }\n      }\n    case 'datetime':\n      return mtime.getFullYear() * 10000 + (mtime.getMonth() + 1) * 100 + mtime.getDate() +\n      '-' + mtime.getHours() + ':' + addPreZero(mtime.getMinutes(), 2)\n    default:\n      return ''\n  }\n}\n// 分钟转字符串 1500 -- 15:00\nexport function fromMinuteToStr (minute) {\n  return addPreZero(Math.floor(minute / 100), 2).toString() + ':' + addPreZero(minute % 100, 2).toString()\n}\n// 得到间隔分钟数\nexport function getMinuteGap (beginMin, endMin) {\n  return (Math.floor(endMin / 100) - Math.floor(beginMin / 100)) * 60 + endMin % 100 - beginMin % 100\n}\n\n// 偏移分钟数，offset 为分钟数\nexport function getMinuteOffset (minute, offset) {\n  const mincount = Math.floor(minute / 100) * 60 + minute % 100 + offset\n  return Math.floor(mincount / 60) * 100 + mincount % 60\n}\n\n// 公用无关性的函数集合\n\nexport function copyArrayOfDeep (obj) {\n  let out\n  if (Array.isArray(obj)) {\n    out = []\n    const len = obj.length\n    for (let i = 0; i < len; i++) {\n      out[i] = copyArrayOfDeep(obj[i])\n    }\n  } else {\n    out = obj\n  }\n  return out\n}\nexport function copyJsonOfDeep (obj) {\n  let out\n  if (obj instanceof Object) { // 数组和文档都为真\n    if (Array.isArray(obj)) { // 只有数组为真\n      out = copyArrayOfDeep(obj)\n    } else {\n      out = {}\n      for (const key in obj) {\n        out[key] = copyJsonOfDeep(obj[key])\n      }\n    }\n  } else {\n    out = obj\n  }\n  return out\n}\n// obj为子集，生成新的对象，仅仅替换source中存在的对应元素\n// 例如 obj = {a:[111],b:2} source = {a:[1,2,3]}\n// out = {a:[111,2,3]}\nexport function updateJsonOfDeep (obj, source) {\n  let out\n  if (source instanceof Object) {\n    if (Array.isArray(source)) {\n      out = []\n      for (const key in source) {\n        out[key] = obj && obj[key]\n          ? updateJsonOfDeep(obj[key], source[key])\n          : copyArrayOfDeep(source[key])\n      }\n    } else {\n      out = {}\n      for (const key in source) {\n        out[key] = obj && obj[key]\n          ? updateJsonOfDeep(obj[key], source[key])\n          : copyJsonOfDeep(source[key])\n      }\n    }\n  } else {\n    out = obj || source\n  }\n  return out\n}\n// // obj为原始集，不生成新的对象，用source中存在的对应元素替换obj的数据\n// // 例如 obj = {a:[111],b:2} source = {a:[1,2,3]}\n// // out = {a:[111,2,3],b:2}\nexport function mergeJsonOfDeep (obj, source) {\n  const out = updateJsonOfDeep(obj, source)\n\n  for (const key in obj) {\n    if (out[key] !== undefined) continue\n    if (obj[key] instanceof Object) {\n      if (Array.isArray(obj[key])) {\n        out[key] = copyArrayOfDeep(obj[key])\n      } else {\n        out[key] = copyJsonOfDeep(obj[key])\n      }\n    } else {\n      out[key] = obj[key]\n    }\n  }\n  return out\n}\n// 数组是否为空\nexport function isEmptyArray (obj) {\n  if (obj !== undefined && Array.isArray(obj)) {\n    if (obj.length > 0) return false\n  }\n  return true\n}\n// 根据offset返回一个新的矩形\n// rect:{left,top,width,height}\n// offset:{left,top,right,bottom}\nexport function offsetRect (rect, offset) {\n  if (rect === undefined) return { left: 0, top: 0, width: 0, height: 0 }\n  if (offset === undefined) return rect\n  return {\n    left: rect.left + offset.left,\n    top: rect.top + offset.top,\n    width: rect.width - (offset.left + offset.right),\n    height: rect.height - (offset.top + offset.bottom)\n  }\n}\n// 判断点是否在矩形内\nexport function inRect (rect, point) {\n  if (rect === undefined || point === undefined) return false\n  if (point.x >= rect.left && point.y >= rect.top &&\n    point.x < (rect.left + rect.width) &&\n    point.y < (rect.top + rect.height)) {\n    return true\n  }\n  return false\n}\n// 判断X是否在矩形宽度范围内\nexport function inRangeX (rect, xx) {\n  if (rect === undefined || xx === undefined) return false\n  if (xx >= rect.left &&\n    xx < (rect.left + rect.width)) {\n    return true\n  }\n  return false\n}\n// 判断Y是否在矩形高度范围内\nexport function inRangeY (rect, yy) {\n  if (rect === undefined || yy === undefined) return false\n  if (yy >= rect.top &&\n    yy < (rect.top + rect.height)) {\n    return true\n  }\n  return false\n}\n// 判断 v 是否在数组arr中, 比in准确\nexport function inArray (v, arr) {\n  if (arr.indexOf(v) < 0) return false\n  return true\n}\n// 求数组a和b的交集\nexport function intersectArray (a, b) {\n  const result = []\n  for (let ai = 0; ai < a.length; ai++) {\n    for (let bi = 0; bi < b.length; bi++) {\n      if (a[ai] === b[bi]) {\n        result.push(a[ai])\n        break\n      }\n    }\n  }\n  return result\n}\n// 求数组a和b的并集,去掉重复的元素\nexport function mergeArray (a, b) {\n  const result = []\n  for (let ai = 0; ai < a.length; ai++) {\n    result.push(a[ai])\n  }\n  for (let bi = 0; bi < b.length; bi++) {\n    if (!inArray(b[bi], result)) {\n      result.push(b[bi])\n    }\n  }\n  return result\n}\n// 格式化百分比\nexport function formatRate (value, zero) {\n  if (value === undefined || isNaN(value) || zero === undefined) return '--'\n  if (typeof value === 'string') value = parseFloat(value)\n\n  let result = Math.abs((value - zero) / zero * 100)\n  result = result.toFixed(2) + '%'\n  return result // 10.20%\n}\n// 格式化成交量\nexport function formatVolume (value, unit) {\n  if (value === undefined || isNaN(value)) return '--'\n  if (typeof value === 'string') value = parseFloat(value)\n\n  if (unit === undefined) unit = 100\n  let result = value / unit\n\n  if (result > 100000000000) result = (result / 100000000).toFixed(0) + '亿'\n  else if (result > 10000000000) result = (result / 100000000).toFixed(1) + '亿'\n  else if (result > 1000000000) result = (result / 100000000).toFixed(2) + '亿'\n  else if (result > 100000000) result = (result / 100000000).toFixed(3) + '亿'\n  else if (result > 10000000) result = (result / 10000).toFixed(0) + '万'\n  else if (result > 1000000) result = (result / 10000).toFixed(1) + '万'\n  else if (result > -0.000000001 && result < 0.000000001) result = '--'\n  else result = result.toFixed(0)\n  return String(result)\n}\n// 格式化价格 decimal为小数点，limit为最大长度[4,10]，\nexport function formatPrice (value, coinunit, limit, isopen) {\n  if (value === undefined || isNaN(value)) return '--'\n  // if (typeof value === 'string') value = parseFloat(value);\n\n  let result = value\n  if (coinunit === undefined || coinunit < 0 || coinunit > 10) coinunit = 0\n\n  if (value > -0.000000001 && value < 0.000000001 && !isopen) {\n    return '--'\n  }\n  result = result.toFixed(coinunit)\n\n  if (limit === undefined || limit < 4) return result\n  return result.substr(0, limit)\n}\n// 格式化时间\nexport function formatShowTime (key, value, minute) {\n  let out = value\n  switch (key) {\n    case 'M5':\n    case 'M15':\n    case 'M30':\n    case 'M60':\n      out = fromTTimeToStr(value, 'datetime')\n      break\n    case 'MIN':\n      if (minute === undefined) {\n        out = fromTTimeToStr(value, 'minute')\n      } else {\n        out = fromMinuteToStr(minute)\n      }\n      break\n    case 'DAY5':\n      out = fromTTimeToStr(value, 'minute')\n      break\n  }\n  return out\n}\n\nexport function formatInfo (value, format, coinunit, volzoom, middle) {\n  let out\n  if (format === 'rate') {\n    out = formatRate(value, middle)\n  } else {\n    if (format === 'price') {\n      if (coinunit === undefined) coinunit = 2\n      out = formatPrice(value, coinunit, 7)\n    } else {\n      if (volzoom === undefined) volzoom = 100\n      out = formatVolume(value, volzoom)\n    }\n  }\n  return out\n}\n\n// 数据转换函数集合\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport {\n  FIELD_DAY,\n  FIELD_TICK,\n  FIELD_RIGHT,\n  FIELD_DAY5\n} from '../cl.data.def'\n\nimport {\n  copyArrayOfDeep,\n  isEmptyArray,\n  getDate,\n  getDayWeek,\n  getDayGap,\n  getDayMon,\n  getMinuteGap,\n  getMinute,\n  getMinuteOffset\n} from '../util/cl.tool'\n\n/** @module GetValue */\n\n// 按fields定义从数组value中获取，第index条标记为label的数据\n/**\n * get value\n * @export\n * @param {Object} {\n *   fields,\n *   value,\n * }\n * @param {String} label\n * @param {Number} [index=0]\n * @return {Number}\n */\nexport default function getValue ({\n  fields,\n  value\n}, label, index = 0) {\n  let val = 0\n  try {\n    // 支持二维数组和一维数组，判断如果是二维数组就取对应的值\n    let source = value\n    if (Array.isArray(value[0])) {\n      source = value[index]\n    }\n    switch (label) {\n      case 'idx':\n        // 序列，now 0-239，day5 0-5*239\n        // 非常重要，利用这里可以统一MIN和D5的画图\n        if (fields.idx === undefined) val = index\n        else val = source[fields.idx]\n        break\n      case 'coinzoom':\n        val = Math.pow(10, getValue({\n          fields,\n          value\n        }, 'coinzoom', 0))\n        break\n      case 'volzoom':\n        val = Math.pow(10, getValue({\n          fields,\n          value\n        }, 'volunit', 0))\n        break\n      // case 'before':\n      // case 'open':\n      // case 'high':\n      // case 'low':\n      // case 'close':\n      // case 'stophigh':\n      // case 'stoplow':\n      // case 'buy1':\n      // case 'buy2':\n      // case 'buy3':\n      // case 'buy4':\n      // case 'buy5':\n      // case 'sell1':\n      // case 'sell2':\n      // case 'sell3':\n      // case 'sell4':\n      // case 'sell5':\n      //   val = source[fields[label]]\n      //   break\n      case 'flow':\n      case 'total':\n        val = source[fields[label]] * 100\n        break\n      case 'decvol':\n        if (index === 0) {\n          val = source[fields.vol]\n        } else {\n          val = source[fields.vol] - getValue({\n            fields,\n            value\n          }, 'vol', index - 1)\n        }\n        break\n      case 'decmoney':\n        if (index === 0) {\n          val = source[fields.money]\n        } else {\n          val = source[fields.money] - getValue({\n            fields,\n            value\n          }, 'money', index - 1)\n        }\n        break\n      default:\n        if (source[fields[label]]) {\n          val = source[fields[label]]\n        }\n    }\n  } catch (error) {\n    val = 0\n  }\n  return val\n}\n\n// export function getTimeIndex(data, label, value) {\n//   let idx = -1;\n//   for (let i = data.value.length - 1; i >= 0; i--) {\n//     if (getValue(data, label, i) > value) continue;\n//     idx = i;\n//     break;\n//   }\n//   return idx;\n// }\n\n/**\n * get max value\n * @export\n * @param {Array} data\n * @param {String} label\n * @param {Number} value\n * @return {Number}\n */\nexport function getValueMax (data, label, value) {\n  let out = value\n  if (!Array.isArray(data.value)) return out\n  for (let k = 0; k < data.value.length; k++) {\n    const v = getValue(data, label, k)\n    if (v > out) out = v\n  }\n  return out\n}\n/**\n * get min value\n * @export\n * @param {Array} data\n * @param {String} label\n * @param {Number} value\n * @return {Number}\n */\nexport function getValueMin (data, label, value) {\n  let out = value\n  if (!Array.isArray(data.value)) return out\n  for (let k = 0; k < data.value.length; k++) {\n    const v = getValue(data, label, k)\n    if (v < out) out = v\n  }\n  return out\n}\n\n// 日线除权的函数集合\n\n/**\n * get exright para\n * @param {String} rightdata\n * @return {Object}\n */\nfunction _getExrightPara (rightdata) {\n  let exrightGs = 1000 // 送股数\n  let exrightPg = 0 // 配股数\n  let exrightPx = 0 // 利息\n  if (rightdata[FIELD_RIGHT.accrual]) exrightPx = rightdata[FIELD_RIGHT.accrual] / 10\n  if (rightdata[FIELD_RIGHT.sendstock] > 0 || rightdata[FIELD_RIGHT.allotstock] > 0) {\n    exrightGs = 1000 + rightdata[FIELD_RIGHT.sendstock] / 10 + rightdata[FIELD_RIGHT.allotstock] / 10\n    exrightPg = -rightdata[FIELD_RIGHT.allotprice] * rightdata[FIELD_RIGHT.allotstock] / 10000\n  }\n  return {\n    gs: exrightGs,\n    pg: exrightPg,\n    px: exrightPx\n  }\n}\n\n/**\n * @param {Number} price\n * @param {Object} rightpara\n * @param {String} mode\n * @return {Number}\n */\nfunction _getExrightPrice (price, rightpara, mode) {\n  if (mode === 'forword') {\n    price = (price * 1000 - rightpara.pg - rightpara.px) * 1000 / rightpara.gs\n  } else {\n    price = price * 1000 * rightpara.gs / 1000 + rightpara.pg + rightpara.px\n  }\n  return price / 1000\n}\n// 得到某个价格的除权价\n/**\n * Get an exemption price for a price\n * @export\n * @param {Number} start\n * @param {Number} stop\n * @param {Number} price\n  * @param {Array} rights\n * @return {Number}\n */\nexport function getExrightPriceRange (start, stop, price, rights) {\n  if (rights === undefined || rights.length < 1) return price\n  let rightpara\n  for (let j = 0; j < rights.length; j++) {\n    if (rights[j][0] > start && rights[j][0] <= stop) {\n      rightpara = _getExrightPara(rights[j])\n      price = _getExrightPrice(price, rightpara, 'forword')\n      break\n    }\n  }\n  return price\n}\n/**\n * transfer exright\n * @private\n * @param {Array} days\n * @param {Array} rightdata\n * @param {String} mode\n * @param {Number} start\n * @param {Number} end\n */\nfunction _transExright (days, rightdata, mode, start, end) {\n  const rightpara = _getExrightPara(rightdata)\n  if (mode === 'forword') {\n    for (let i = start; i < end; i++) {\n      days[i][FIELD_DAY.open] = _getExrightPrice(days[i][FIELD_DAY.open], rightpara, mode) // open\n      days[i][FIELD_DAY.high] = _getExrightPrice(days[i][FIELD_DAY.high], rightpara, mode) // high\n      days[i][FIELD_DAY.low] = _getExrightPrice(days[i][FIELD_DAY.low], rightpara, mode) // low\n      days[i][FIELD_DAY.close] = _getExrightPrice(days[i][FIELD_DAY.close], rightpara, mode) // new\n      days[i][FIELD_DAY.vol] = days[i][FIELD_DAY.vol] * rightpara.gs / 1000\n    }\n  }\n}\n\n// 判断是否有除权\n/**\n * check is right\n * @param {Date} dateBegin\n * @param {Date} dateEnd\n * @param {Date} rightdate\n * @return {Boolean}\n */\nfunction _isRight (dateBegin, dateEnd, rightdate) {\n  if (rightdate > dateBegin && rightdate <= dateEnd) {\n    return true\n  } else return false\n}\n// 对日线进行除权，周年线不能除权，,days传入时就是一个可修改的数组\n/**\n *\n *\n * @export\n * @param {Array} days\n * @param {Array} rights\n * @param {String} mode\n * @param {Number} start\n * @param {Number} end\n * @return {Array}\n */\nexport function transExrightDay (days, rights, mode, start, end) {\n  if (rights.length < 1 || days.length < 1) return days\n  if (mode === undefined) mode = 'forword' // 以最近的价格为基准,修正以前的价格;\n  if (start === undefined || start < 0 || start > days.length - 1) start = 0\n  if (end === undefined || end < 0) end = days.length - 1\n\n  if (mode === 'forword') {\n    for (let i = start; i <= end; i++) {\n      for (let j = 0; j < rights.length; j++) {\n        if (i < 1) continue\n        if (_isRight(days[i - 1][FIELD_DAY.time], days[i][FIELD_DAY.time], rights[j][FIELD_RIGHT.time])) {\n          _transExright(days, rights[j], mode, start, i)\n          break\n        }\n      }\n    }\n  } else if (mode === 'backword') {}\n  return days\n}\n\n// 对分钟线除权,days传入时就是一个可修改的数组\n/**\n * transfer exrigth min data\n * @export\n * @param {Array} days\n * @param {Array} rights\n * @param {String} mode\n * @param {Number} start\n * @param {Number} end\n * @return {Array}\n */\nexport function transExrightMin (days, rights, mode, start, end) {\n  if (rights.length < 1 || days.length < 1) return days\n  if (mode === undefined) mode = 'forword' // 以最近的价格为基准,修正以前的价格;\n  if (start === undefined || start < 0 || start > days.length - 1) start = 0\n  if (end === undefined || end < 0) end = days.length - 1\n\n  if (mode === 'forword') {\n    for (let i = start; i <= end; i++) {\n      for (let j = 0; j < rights.length; j++) {\n        if (i < 1) continue\n        if (_isRight(\n          getDate(days[i - 1][FIELD_DAY.time]),\n          getDate(days[i][FIELD_DAY.time]),\n          rights[j][FIELD_RIGHT.time])) {\n          _transExright(days, rights[j], mode, start, i)\n          break\n        }\n      }\n    }\n  } else if (mode === 'backword') {}\n  return days\n}\n\n// 检索数据函数集\n\n// 从分钟线查找对应记录\n/**\n * find index in min\n * @export\n * @param {Object} source\n * @param {Number} index\n * @return {Object}\n */\nexport function findIndexInMin (source, index) {\n  if (source.value.length < 1) {\n    return {\n      status: 'new',\n      index: -1\n    }\n  }\n  const lastIndex = source.value[source.value.length - 1][source.fields.time]\n  if (lastIndex === index) {\n    return {\n      status: 'old',\n      index: source.value.length - 1\n    }\n  } else if (lastIndex > index) {\n    return {\n      status: 'error',\n      index: source.value.length - 1\n    }\n  } else {\n    return {\n      status: 'new',\n      index: source.value.length - 1\n    }\n  }\n}\n// 从日线查找对应记录\n/**\n * find date in day\n * @export\n * @param {Object} source\n * @param {Number} today\n * @return {Object}\n */\nexport function findDateInDay (source, today) {\n  if (source === undefined || source.value === undefined || source.value.length < 1) {\n    return {\n      finded: false,\n      index: -1\n    }\n  }\n  const lastDate = source.value[source.value.length - 1][source.fields.time]\n  if (today === lastDate) {\n    return {\n      finded: true,\n      index: source.value.length - 1\n    }\n  }\n  return {\n    finded: false,\n    index: -1\n  }\n}\n// export function findDateInDay(source, today) {\n//   if (source === undefined || source.value === undefined || source.value.length < 1)\n//   {\n//     return {\n//       finded: false,\n//       index: -1\n//     };\n//   }\n//   const fields = source.fields;\n//   for (let i = source.value.length - 1; i >= 0; i--) {\n//     if (source.key === 'WEEK') {\n//       const curDay = source.value[i][fields.time];\n//       if (getDayGap(curDay, today) + getDayWeek(curDay) > 7) {\n//         return {\n//           finded: false,\n//           index: -1\n//         };\n//       } else {\n//         return {\n//           finded: true,\n//           index: i\n//         };\n//       }\n//     }\n//     if (source.key === 'MON') {\n//       const curMon = Math.floor(source.value[i][fields.time] / 100);\n//       const todayMon = Math.floor(today / 100);\n//       if (curMon !== todayMon) {\n//         return {\n//           finded: false,\n//           index: -1\n//         };\n//       } else {\n//         return {\n//           finded: true,\n//           index: i\n//         };\n//       }\n//     }\n//     if (source.key === 'DAY') {\n//       if (source.value[i][fields.time] === today) {\n//         return {\n//           finded: true,\n//           index: i\n//         };\n//       }\n//     }\n//   }\n//   return {\n//     finded: false,\n//     index: source.value.length - 1\n//   };\n// }\n\n// 检查数据完整性\n\n/**\n * get size\n * @export\n * @param {Object} source\n * @return {Boolean}\n */\nexport function getSize (source) {\n  if (source === undefined || isEmptyArray(source.value)) {\n    return 0\n  }\n  return source.value.length\n}\n/**\n * check zero\n * @export\n * @param {Array} value\n * @param {Object} fields\n * @return {Boolean}\n */\nexport function checkZero (value, fields) {\n  if (Array.isArray(value) &&\n    value[fields.open] > 0 &&\n    value[fields.high] > 0 &&\n    value[fields.low] > 0 &&\n    value[fields.close] > 0 &&\n    value[fields.vol] > 0 &&\n    value[fields.money] > 0) {\n    return false\n  } else {\n    return true\n  }\n}\n/**\n * check day zero\n * @export\n * @param {Object} source\n * @return {Array}\n */\nexport function checkDayZero (source) {\n  const out = []\n  if (!Array.isArray(source)) return out\n\n  for (let i = 0; i < source.length; i++) {\n    if (!checkZero(source[i], FIELD_DAY)) {\n      out.push(source[i])\n    }\n  }\n  return out\n}\n/**\n * check 5 day\n * @export\n * @param {Object} source\n * @param {Number} tradeDate\n * @param {Number} tradetime\n * @return {Array}\n */\nexport function checkDay5 (source, tradeDate, tradetime) {\n  const out = []\n  if (source.length < 1) return out\n\n  const lastDate = getDate(source[source.length - 1][FIELD_DAY5.time])\n  // 判断是否已经有收盘数据了\n  let maxDays = 5\n  if (!lastDate === tradeDate) maxDays = 4\n\n  let idx\n  let count = 0\n  let curDate = 0\n  for (idx = source.length - 1; idx >= 0; idx--) {\n    if (curDate !== getDate(source[idx][FIELD_DAY5.time])) {\n      curDate = getDate(source[idx][FIELD_DAY5.time])\n      count++\n      if (count > maxDays) {\n        idx++\n        break\n      }\n    }\n    out.splice(0, 0, [source[idx][FIELD_DAY5.time], source[idx][FIELD_DAY5.close], source[idx][FIELD_DAY5.vol]])\n  }\n\n  count = 0\n  curDate = 0\n  let vol = 0\n  let money = 0\n  const daymins = getMinuteCount(tradetime)\n  for (idx = 0; idx < out.length; idx++) {\n    if (curDate !== getDate(out[idx][FIELD_DAY5.time])) { // 增加记录\n      curDate = getDate(out[idx][FIELD_DAY5.time])\n      count++\n      vol = 0\n      money = 0\n    }\n    vol += out[idx][FIELD_DAY5.vol]\n    money += out[idx][FIELD_DAY5.close] * out[idx][FIELD_DAY5.vol]\n    let index = fromTradeTimeToIndex(out[idx][FIELD_DAY5.time], tradetime)\n    index += (count - 1) * daymins\n    out[idx][FIELD_DAY5.idx] = index\n    out[idx][FIELD_DAY5.allvol] = vol\n    out[idx][FIELD_DAY5.allmoney] = money\n  }\n  return out\n}\n/**\n * update static\n * @export\n * @param {Object} fields\n * @param {Array} value\n * @return {Array}\n */\nexport function updateStatic (fields, value) {\n  const coinzoom = getValue({\n    fields,\n    value\n  }, 'coinzoom')\n  const volzoom = getValue({\n    fields,\n    value\n  }, 'volzoom')\n  const out = {\n    stktype: getValue({\n      fields,\n      value\n    }, 'type'),\n    volzoom,\n    volunit: getValue({\n      fields,\n      value\n    }, 'volunit'),\n    coinzoom,\n    coinunit: getValue({\n      fields,\n      value\n    }, 'coinunit'),\n    before: getValue({\n      fields,\n      value\n    }, 'before'),\n    stophigh: getValue({\n      fields,\n      value\n    }, 'stophigh'),\n    stoplow: getValue({\n      fields,\n      value\n    }, 'stoplow')\n  }\n  return out\n}\n\n// 对数据进行周期性合并\n\n// export function matchMinToMinute(source, outkey) {\n//   switch (outkey) {\n//     case 'M15': out = matchMin5ToMinute(out, outkey, 15);\n//       break;\n//     case 'M30': out = matchMin5ToMinute(out, outkey, 30);\n//       break;\n//     case 'M60': out = matchMin5ToMinute(out, outkey, 60);\n//       break;\n//   }\n// export function mergeMin(daydata, rate) {\n// this.match_minute_line = function(srcfields, srcvalue, minfields, minvalue, period) {\n//   const out = copyArrayOfDeep(srcvalue);\n//   const cur_min = [];\n//   let base_vol = 0;\n//   let base_money = 0;\n\n//   let hasData = false;\n//   let stopIdx = 4;\n//   for (let k = 0; k < minvalue.length; k++) {\n//     const nowmin = minvalue[k][minfields.idx];\n//     if (nowmin < 0) continue;\n//     if (nowmin > stopIdx) {\n//       if (hasData) {\n//         cur_min[minfields.vol] = minvalue[k][minfields.vol] - base_vol;\n//         cur_min[minfields.money] = minvalue[k][minfields.money] - base_money;\n//         base_vol = minvalue[k][minfields.vol];\n//         base_money = minvalue[k][minfields.money];\n\n//         cur_min[minfields.time] = fromIndexToTradeTime(stopIdx, this.tradetime, this.tradeDate);\n//         out.push(copyArrayOfDeep(cur_min));\n//       }\n//       stopIdx = (Math.floor(nowmin / offset) + 1) * offset - 1;\n//       cur_min[minfields.open] = minvalue[k][minfields.open];\n//       cur_min[minfields.high] = minvalue[k][minfields.high];\n//       cur_min[minfields.low] = minvalue[k][minfields.low];\n//       cur_min[minfields.close] = minvalue[k][minfields.close];\n//       hasData = true;\n//     } else { // nowmin 在0-5之间\n//       if (hasData) {\n//         cur_min[minfields.high] = cur_min[minfields.high] > minvalue[k][minfields.high] ? cur_min[minfields.high] : minvalue[k][minfields.high];\n//         cur_min[minfields.low] = cur_min[minfields.low] < minvalue[k][minfields.low] || minvalue[k][minfields.low] === 0 ?\n//                                   cur_min[minfields.low] : minvalue[k][minfields.low];\n//         cur_min[minfields.close] = minvalue[k][minfields.close];\n//       } else {\n//         cur_min[minfields.open] = minvalue[k][minfields.open];\n//         cur_min[minfields.high] = minvalue[k][minfields.high];\n//         cur_min[minfields.low] = minvalue[k][minfields.low];\n//         cur_min[minfields.close] = minvalue[k][minfields.close];\n//         hasData = true;\n//       }\n//     }\n//   } // for i\n//   if (hasData) {\n//     cur_min[minfields.vol] = minvalue[minvalue.length - 1][minfields.vol] - base_vol;\n//     cur_min[minfields.money] = minvalue[minvalue.length - 1][minfields.money] - base_money;\n//     cur_min[minfields.time] = fromIndexToTradeTime(stopIdx, this.tradetime, this.tradeDate);\n//     out.push(copyArrayOfDeep(cur_min));\n//     // alert('4:'+out.toString());\n//   }\n//   return out;\n// }\n\n// 按rate率压缩日线和分钟数据，因为界面显示原因，可能会存在2日...7日等合并的线\n/**\n * get zip day\n * @export\n * @param {Array} daydata\n * @param {Number} rate\n * @return {Array}\n */\nexport function getZipDay (daydata, rate) {\n  if (rate < 1) return daydata\n  const out = []\n  const zipday = []\n\n  let count = 0\n  const field = FIELD_DAY\n  for (let k = 0; k < daydata.length; k++) {\n    if (count === 0) {\n      zipday[field.open] = daydata[k][field.open]\n      zipday[field.high] = daydata[k][field.high]\n      zipday[field.low] = daydata[k][field.low]\n      zipday[field.close] = daydata[k][field.close]\n      zipday[field.vol] = daydata[k][field.vol]\n      zipday[field.money] = daydata[k][field.money]\n      count = 1\n    } else {\n      zipday[field.high] = zipday[field.high] > daydata[k][field.high]\n        ? zipday[field.high] : daydata[k][field.high]\n      zipday[field.low] = zipday[field.low] < daydata[k][field.low] || daydata[k][field.low] === 0\n        ? zipday[field.low] : daydata[k][field.low]\n      zipday[field.close] = daydata[k][field.close]\n      zipday[field.vol] += daydata[k][field.vol]\n      zipday[field.money] += daydata[k][field.money]\n      count++\n      if (count >= rate) {\n        zipday[field.time] = daydata[k][field.time]\n        out.push(copyArrayOfDeep(zipday))\n        count = 0\n      }\n    }\n  } // for i\n  if (count > 0) {\n    zipday[field.time] = daydata[daydata.length - 1][field.time]\n    out.push(copyArrayOfDeep(zipday))\n  }\n  return out\n}\n// 日线到周线\n/**\n * convert day data to week data\n * @export\n * @param {Array} daydata\n * @return {Array}\n */\nexport function matchDayToWeek (daydata) {\n  const out = []\n  const zipday = []\n\n  const field = FIELD_DAY\n  let isBegin = true\n  for (let k = 0; k < daydata.length; k++) {\n    if (isBegin) {\n      zipday[field.open] = daydata[k][field.open]\n      zipday[field.high] = daydata[k][field.high]\n      zipday[field.low] = daydata[k][field.low]\n      isBegin = false\n    } else {\n      zipday[field.high] = zipday[field.high] > daydata[k][field.high]\n        ? zipday[field.high] : daydata[k][field.high]\n      zipday[field.low] = zipday[field.low] < daydata[k][field.low] || daydata[k][field.low] === 0\n        ? zipday[field.low] : daydata[k][field.low]\n    }\n    zipday[field.close] = daydata[k][field.close]\n    zipday[field.vol] = daydata[k][field.vol]\n    zipday[field.money] = daydata[k][field.money]\n\n    // 周五 or 下一个日期跨越一周\n    const week = getDayWeek(daydata[k][field.time])\n    if (k >= daydata.length - 1 || week === 5 ||\n      (getDayGap(daydata[k][field.time], daydata[k + 1][field.time]) + week > 7)) {\n      zipday[field.time] = daydata[k][field.time]\n      out.push(copyArrayOfDeep(zipday))\n      isBegin = true\n    }\n  } // for i\n  if (!isBegin) {\n    zipday[field.time] = daydata[daydata.length - 1][field.time]\n    out.push(copyArrayOfDeep(zipday))\n  }\n  return out\n}\n\n// 日线到月线\n/**\n * convert day data to month data\n * @export\n * @param {Array} daydata\n * @return {Array}\n */\nexport function matchDayToMon (daydata) {\n  let month\n  const out = []\n  const zipday = []\n\n  const field = FIELD_DAY\n  let isBegin = true\n  for (let k = 0; k < daydata.length; k++) {\n    if (isBegin) {\n      zipday[field.open] = daydata[k][field.open]\n      zipday[field.high] = daydata[k][field.high]\n      zipday[field.low] = daydata[k][field.low]\n      month = getDayMon(daydata[k][field.time])\n      isBegin = false\n    } else {\n      zipday[field.high] = zipday[field.high] > daydata[k][field.high]\n        ? zipday[field.high] : daydata[k][field.high]\n      zipday[field.low] = zipday[field.low] < daydata[k][field.low] || daydata[k][field.low] === 0\n        ? zipday[field.low] : daydata[k][field.low]\n    }\n    zipday[field.close] = daydata[k][field.close]\n    zipday[field.vol] = daydata[k][field.vol]\n    zipday[field.money] = daydata[k][field.money]\n\n    if (k >= daydata.length - 1 || getDayMon(daydata[k + 1][field.time]) !== month) {\n      zipday[field.time] = daydata[k][field.time]\n      out.push(copyArrayOfDeep(zipday))\n      isBegin = true\n    }\n  } // for i\n  if (!isBegin) {\n    zipday[field.time] = daydata[daydata.length - 1][field.time]\n    out.push(copyArrayOfDeep(zipday))\n  }\n  return out\n}\n\n// 求交易时间的总共分钟数 [{begin:930,end:1130},{...}]\n/**\n * get minute count\n * @export\n * @param {Number} tradetime\n * @return {Number}\n */\nexport function getMinuteCount (tradetime) { // time_t\n  let mincount = 0\n  for (let i = 0; i < tradetime.length; i++) {\n    mincount += getMinuteGap(tradetime[i].begin, tradetime[i].end)\n  }\n  return mincount\n}\n\n// 根据交易时间把time_t返回一个顺序值 time_t --> 0..239 -1表示没有非交易时间\n/**\n * convert time t to trade time\n * @export\n * @param {Number} ttime\n * @param {Number} tradetime\n * @return {Number}\n */\nexport function fromTradeTimeToIndex (ttime, tradetime) { // time_t 返回０－２３９\n  const minute = getMinute(ttime)\n\n  let nowmin = 0\n  let index = -1\n  for (let i = 0; i < tradetime.length; i++) {\n    // 9:31:00--11:29:59  13:01:00--14:59:59\n    if (minute > tradetime[i].begin && minute < tradetime[i].end) {\n      index = nowmin + getMinuteGap(tradetime[i].begin, minute)\n      break\n    }\n    if (minute <= tradetime[i].begin && i === 0) { // 8:00:00---9:30:59秒前都=0\n      return 0\n    }\n    if (minute <= tradetime[i].begin && (minute > getMinuteOffset(tradetime[i].begin, -5))) { // 12:55:59--13:00:59秒\n      return nowmin\n    }\n\n    nowmin += getMinuteGap(tradetime[i].begin, tradetime[i].end)\n\n    if (minute >= tradetime[i].end && i === tradetime.length - 1) { // 15:00:00秒后\n      return nowmin - 1\n    }\n    if (minute >= tradetime[i].end && (minute < getMinuteOffset(tradetime[i].end, 5))) { // 11:30:00--11:34:59秒\n      return nowmin - 1\n    }\n  }\n  return index\n}\n\n// 根据交易时间把0..239 转换为 time_t;  0 表示没有非交易时间\n/**\n * convert index to trade time\n * @export\n * @param {Number} tindex\n * @param {Number} tradetime\n * @param {Number} tradeDate\n * @return {Number}\n */\nexport function fromIndexToTradeTime (tindex, tradetime, tradeDate) {\n  let index = tindex\n  let offset = 0\n  let nowmin = 0\n  for (let i = 0; i < tradetime.length; i++) {\n    nowmin = getMinuteGap(tradetime[i].begin, tradetime[i].end)\n    if (index < nowmin) {\n      offset = getMinuteOffset(tradetime[i].begin, index + 1)\n      const ttime = new Date(Math.floor(tradeDate / 10000), Math.floor(tradeDate % 10000 / 100) - 1, tradeDate % 100,\n        Math.floor(offset / 100), offset % 100, 0)\n      return Math.floor(ttime / 1000)\n    }\n    index -= nowmin\n  }\n  return 0\n}\n/**\n * out put 5 day\n *\n * @export\n * @param {Object} source\n * @param {Number} tradetime\n * @return {Array}\n */\nexport function outputDay5 (source, tradetime) {\n  const out = {\n    key: 'DAY5',\n    fields: FIELD_DAY5,\n    value: []\n  }\n  if (source.length < 1) return out\n\n  let idx\n  let count = 0\n  let vol = 0\n  let money = 0\n  let curDate = 0\n  const daymins = getMinuteCount(tradetime)\n  for (idx = 0; idx < source.length; idx++) {\n    if (curDate !== getDate(source[idx][FIELD_TICK.time])) {\n      curDate = getDate(source[idx][FIELD_TICK.time])\n      count++\n      vol = 0\n      money = 0\n    }\n    vol += source[idx][FIELD_TICK.vol]\n    money += source[idx][FIELD_TICK.close] * source[idx][FIELD_TICK.vol]\n    let index = fromTradeTimeToIndex(source[idx][FIELD_TICK.time], tradetime)\n    index += (count - 1) * daymins\n    out.value.push([index, source[idx][FIELD_TICK.close], source[idx][FIELD_TICK.vol], money / vol])\n  }\n  return out\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 数据类型和数据名称分开；根据数据类型生成\n// 在comm中定义几个函数，用户可以自己定义数据类型，自己定义按钮，自己定义画线的方式，\n// 只要用户产生的类支持通用的接口onpaint等函数，并成功注册进来，就可以被chart拿来画图了\n// 这样扩展起来才方便\n// 而chart.line只画基础的一些图形，其他非标的图形由用户自行定义，包括数据生成的算法\n\nexport const STOCK_TYPE_INDEX = 0\nexport const STOCK_TYPE_A = 1\nexport const STOCK_TYPE_B = 4\nexport const STOCK_TYPE_OTHER = 5\n\nexport const STOCK_TRADETIME = [{\n  begin: 930,\n  end: 1130\n},\n{\n  begin: 1300,\n  end: 1500\n}\n]\n\n// 基本日线定义，历史分钟线，\nexport const FIELD_DAY = {\n  time: 0,\n  open: 1,\n  high: 2,\n  low: 3,\n  close: 4,\n  vol: 5,\n  money: 6\n}\nexport const FIELD_MIN = {\n  idx: 0,\n  open: 1,\n  high: 2,\n  low: 3,\n  close: 4,\n  vol: 5,\n  money: 6,\n  allvol: 5, // 增补\n  allmoney: 6 // 增补\n}\n\nexport const FIELD_TICK = {\n  time: 0,\n  close: 1,\n  vol: 2\n}\nexport const FIELD_DAY5 = {\n  time: 0,\n  close: 1,\n  vol: 2,\n  idx: 3, // 增补\n  allvol: 4, // 增补\n  allmoney: 5 // 增补\n}\n\n// 两种单线的定义\nexport const FIELD_LINE = {\n  time: 0,\n  value: 1\n}\nexport const FIELD_ILINE = {\n  idx: 0,\n  value: 1\n}\n\n// 标准5档实时行情\nexport const FIELD_NOW = {\n  time: 0,\n  open: 1,\n  high: 2,\n  low: 3,\n  close: 4,\n  vol: 5,\n  money: 6,\n  buy1: 7,\n  buyvol1: 8,\n  sell1: 9,\n  sellvol1: 10,\n  buy2: 11,\n  buyvol2: 12,\n  sell2: 13,\n  sellvol2: 14,\n  buy3: 15,\n  buyvol3: 16,\n  sell3: 17,\n  sellvol3: 18,\n  buy4: 19,\n  buyvol4: 20,\n  sell4: 21,\n  sellvol4: 22,\n  buy5: 23,\n  buyvol5: 24,\n  sell5: 25,\n  sellvol5: 26\n}\n// 简易一档实时行情\nexport const FIELD_ENOW = {\n  time: 0,\n  open: 1,\n  high: 2,\n  low: 3,\n  close: 4,\n  vol: 5,\n  money: 6,\n  buy1: 7,\n  buyvol1: 8,\n  sell1: 9,\n  sellvol1: 10\n}\n// 指数实时行情\nexport const FIELD_NOW_IDX = {\n  time: 0,\n  open: 1,\n  high: 2,\n  low: 3,\n  close: 4,\n  vol: 5,\n  money: 6,\n  ups: 7,\n  upvol: 8,\n  downs: 9,\n  downvol: 10,\n  mids: 11,\n  midvol: 12\n}\n\n// 股票信息定义\nexport const FIELD_INFO = {\n  marker: 0,\n  code: 1,\n  name: 2, // 股票名称\n  search: 3,\n  type: 4, // 股票类型\n  coinunit: 5, // 保留小数点\n  volunit: 6, // 成交量单位\n  before: 7, // 前收盘\n  stophigh: 8, // 涨停价\n  stoplow: 9 // 跌停价\n}\n\n// 除权字段定义\nexport const FIELD_RIGHT = {\n  time: 0,\n  sendstock: 1, // 10送股 放大1000倍\n  accrual: 2, // 10送红利 放大1000倍\n  allotstock: 3, // 10配股数 放大1000倍\n  allotprice: 4 // 配股价 放大1000倍\n}\n// 财务信息定义\nexport const FIELD_FINANCE = {\n  code: 0,\n  time: 1,\n  flow: 2, // 流通股\n  total: 3, // 总股本\n  earnings: 4 // 每股收益\n}\n\n// 以上为系统默认定义，用户定义数据类型可以放在下面\n\nexport const FIELD_TRADE = {\n  time: 0, // 交易时间\n  code: 1, // 股票代码\n  type: 2, // B S 买卖标志\n  price: 3, // 交易价格\n  vol: 4, // 成交量\n  money: 5, // 成交金额\n  info: 6 // 交易参数\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 预先定义好的公式，比如MA等，可在这里扩展公式定义\n// 用户可以自定义公式注册到ClData层，便于系统调用\n\nimport getValue from '../data/cl.data.tools'\n\n/**\n * Class representing ClFormula\n * @export\n * @class ClFormula\n */\nexport class ClFormula {\n  /**\n   * Creates an instance of ClFormula.\n   * @constructor\n   */\n  constructor () {\n    this.source = {\n      data: {},\n      minIndex: 0,\n      maxIndex: 0,\n      nowIndex: 0\n    }\n  }\n  /**\n   * get value from data layer\n   * @param {String} label\n   * @param {Number} offIndex\n   * @return {Array}\n   * @memberof ClFormula\n   */\n  getValue (label, offIndex) { // offIndex 向前偏移offIndex条记录\n    if (label === undefined) return 0\n    if (this.source.data === undefined || this.source.data.value === undefined) return 0\n\n    if (this.source.nowIndex === undefined) this.source.nowIndex = this.source.minIndex\n    const index = this.source.nowIndex - offIndex\n\n    return getValue(this.source.data, label, index)\n  }\n  /**\n   * calculate single stock data by formula\n   * @param {Object} source\n   * @param {String} formula\n   * @return {Array}\n   * @memberof ClFormula\n   */\n  runSingleStock (source, formula) {\n    // fix for Wechat mina do not support eval\n    if (!eval) {\n      const singleValue = []\n      const matchData = formula.match(/\\.(\\w+)(\\(.+)/)\n      const funcName = matchData[1]\n      if (typeof this[funcName] !== 'function') {\n        return singleValue\n      }\n      let argStr = matchData[2] || ''\n      argStr = argStr.replace(/\\(|\\)/g, '').split(',')\n      this.source = source\n      for (this.source.nowIndex = this.source.minIndex; this.source.nowIndex <= this.source.maxIndex; this.source.nowIndex++) {\n        const out = this[funcName](...argStr)\n        singleValue.push([this.getValue('idx', 0), out])\n      }\n      return singleValue\n    }\n    const singleValue = []\n    this.source = source\n    const command = `\n    for (this.source.nowIndex = this.source.minIndex;this.source.nowIndex <= this.source.maxIndex;this.source.nowIndex++) {\n          const ${formula}\n          singleValue.push([this.getValue('idx', 0), out]);\n    }`\n    eval(command)\n    return singleValue\n  }\n\n  //  自定义公式\n\n  /**\n   * calculate move averge data\n   * @param {String} label\n   * @param {Number} period\n   * @return {Array}\n   * @memberof ClFormula\n   */\n  MA (label, period) {\n    let off = 0\n    let value = 0\n    for (let m = 0; m < period; m++) {\n      const v = this.getValue(label, m)\n      if (v !== 0) {\n        off++\n        value += v\n      }\n    }\n    return off === 0 ? 0 : value / off\n  }\n  AVGPRC () {\n    let value = 0\n    value = this.getValue('allmoney', 0) / this.getValue('allvol', 0)\n    return value\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/** @module DrawUtils */\n\n/**\n * get image data\n * @export\n * @param {Object} context canvas's context\n * @param {Number} xx\n * @param {Number} yy\n * @param {Number} ww\n * @param {Number} hh\n * @return {Object}\n */\nexport function _getImageData (context, xx, yy, ww, hh) {\n  if (context.getImageData) {\n    return context.getImageData(xx, yy, ww, hh)\n  }\n  return undefined\n}\n/**\n * put image data\n * @export\n * @param {Object} context canvas's context\n * @param {Object} img\n * @param {Number} xx\n * @param {Number} yy\n */\nexport function _putImageData (context, img, xx, yy) {\n  if (context.putImageData) {\n    context.putImageData(img, xx, yy)\n  }\n}\n\n/**\n * set line width\n * @export\n * @param {Object} context canvas's context\n * @param {Number} l line width\n */\nexport function _setLineWidth (context, l) {\n  context.lineWidth = l\n}\n\n/**\n * get line width\n * @export\n * @param {Object} context canvas's context\n * @return {Number} line width\n */\nexport function _getLineWidth (context) {\n  return context.lineWidth\n}\n\n// 画竖线\n/**\n * draw vertical line\n * @export\n * @param {Object} context canvas's context\n * @param {Number} xx\n * @param {Number} yy1\n * @param {Number} yy2\n */\nexport function _drawVline (context, xx, yy1, yy2) {\n  context.moveTo(xx, yy1)\n  context.lineTo(xx, yy2)\n}\n// 画横线\n/**\n * draw horizontal line\n * @export\n * @param {Object} context canvas's context\n * @param {Number} xx1\n * @param {Number} xx2\n * @param {Number} yy\n */\nexport function _drawHline (context, xx1, xx2, yy) {\n  context.moveTo(xx1, yy)\n  context.lineTo(xx2, yy)\n}\n// 画斜线\n/**\n * draw line\n * @export\n * @param {Object} context canvas's context\n * @param {Number} xx1\n * @param {Number} yy1\n * @param {Number} xx2\n * @param {Number} yy2\n */\nexport function _drawline (context, xx1, yy1, xx2, yy2) {\n  context.moveTo(xx1, yy1)\n  context.lineTo(xx2, yy2)\n}\n\n/**\n * move to position\n * @export\n * @param {Object} context canvas's context\n * @param {Number} xx\n * @param {Number} yy\n */\nexport function _drawmoveTo (context, xx, yy) {\n  context.moveTo(xx, yy)\n}\n\n/**\n * draw line to\n * @export\n * @param {Object} context canvas's context\n * @param {Number} xx\n * @param {Number} yy\n */\nexport function _drawlineTo (context, xx, yy) {\n  context.lineTo(xx, yy)\n}\n\n// 画空心长方形\n/**\n * draw empty rect\n * @export\n * @param {Object} context canvas's context\n * @param {Number} xx\n * @param {Number} yy\n * @param {Number} ww\n * @param {Number} hh\n */\nexport function _drawRect (context, xx, yy, ww, hh) {\n  context.strokeRect(xx, yy, ww, hh) // 这里的宽度是指不算xx的起始点的宽度，所以你写宽5，实际出来图形是6个像素，\n}\n// 画实心长方形\n/**\n * draw fill rect\n * @export\n * @param {Object} context canvas's context\n * @param {Number} xx\n * @param {Number} yy\n * @param {Number} ww\n * @param {Number} hh\n * @param {String} fillclr\n */\nexport function _fillRect (context, xx, yy, ww, hh, fillclr) {\n  context.fillStyle = fillclr || context.fillStyle\n  context.fillRect(xx, yy, ww, hh)\n}\n/**\n * clear rect\n * @export\n * @param {Object} context canvas's context\n * @param {Number} xx\n * @param {Number} yy\n * @param {Number} ww\n * @param {Number} hh\n */\nexport function _clearRect (context, xx, yy, ww, hh) {\n  context.clearRect(xx, yy, ww, hh)\n}\n// 画实心长方形\n/**\n * fill by color\n * @export\n * @param {Object} context canvas's context\n * @param {String} fillclr\n */\nexport function _fill (context, fillclr) {\n  context.fillStyle = fillclr\n  context.fill()\n}\n// 开始画线\n/**\n * start draw line\n * @export\n * @param {Object} context canvas's context\n * @param {String} clr\n */\nexport function _drawBegin (context, clr) {\n  context.beginPath()\n  context.strokeStyle = clr || context.strokeStyle\n}\n\n// 结束画线\n/**\n * end draw\n * @export\n * @param {Object} context canvas's context\n */\nexport function _drawEnd (context) {\n  context.stroke()\n}\n\n/**\n * get beveling\n * @private\n * @param {Number} x\n * @param {Number} y\n * @return {Number}\n */\nfunction __getBeveling (x, y) {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2))\n}\n/**\n * draw dash line\n * @export\n * @param {Object} context canvas's context\n * @param {Number} x1\n * @param {Number} y1\n * @param {Number} x2\n * @param {Number} y2\n * @param {Number} dashLen\n */\nexport function _drawDashLine (context, x1, y1, x2, y2, dashLen) {\n  dashLen = dashLen === undefined ? 5 : dashLen\n  // 得到斜边的总长度\n  const beveling = __getBeveling(x2 - x1, y2 - y1)\n  // 计算有多少个线段\n  const num = Math.floor(beveling / dashLen)\n\n  for (let i = 0; i < num; i++) {\n    context[i % 2 === 0 ? 'moveTo' : 'lineTo'](x1 + (x2 - x1) / num * i, y1 + (y2 - y1) / num * i)\n  }\n  // context.stroke();\n}\n\n// 以下显示文字\n\n/**\n * set font size\n * @export\n * @param {Object} context canvas's context\n * @param {String} font\n * @param {Number} pixel\n */\nexport function _setFontSize (context, font, pixel) {\n  context.font = pixel + 'px ' + font\n}\n/**\n * draw text\n * @export\n * @param {Object} context canvas's context\n * @param {Number} xx\n * @param {Number} yy\n * @param {String} txt\n * @param {String} font\n * @param {Number} pixel\n * @param {String} clr\n * @param {Object} pos\n */\nexport function _drawTxt (context, xx, yy, txt, font, pixel, clr, pos) {\n  _setFontSize(context, font, pixel)\n  context.fillStyle = clr || context.fillStyle\n  context.textBaseline = pos ? pos.y || 'top' : 'top' // top（默认）；middle bottom\n  context.textAlign = pos ? pos.x || 'start' : 'start' // start（默认）;center end\n  // 需要将txt转为string类型，不然gcanvas会报错\n  context.fillText(txt.toString(), xx, yy)\n}\n\n/**\n * get text width from charmap by fontsize\n * @param {Object} charMap\n * @param {String} txt\n * @param {Number} fontSize\n * @return {Number}\n */\nfunction getTxtWith (charMap, txt, fontSize) {\n  const scale = fontSize / 12\n  let allWidth = 0\n  for (let i = 0; i < txt.length; i++) {\n    const element = txt[i].toString()\n    if (charMap && charMap[element]) {\n      allWidth += charMap[element].width\n    } else {\n      allWidth += 12\n    }\n  }\n  return allWidth * scale\n}\n/**\n * get text width\n * @export\n * @param {Object} context canvas's context\n * @param {String} txt\n * @param {String} font\n * @param {Number} pixel\n * @return {Number} string width\n */\nexport function _getTxtWidth (context, txt, font, pixel) {\n  _setFontSize(context, font, pixel)\n  let width\n  if (context.measureText) {\n    try {\n      width = context.measureText(txt).width\n    } catch (error) {\n      width = getTxtWith(context.charMap, txt, pixel)\n    }\n    // 简单的计算尺寸返回，这样子计算存在误差，特别是存在中英文的时候\n  } else {\n    width = getTxtWith(context.charMap, txt, pixel)\n  }\n  return width\n}\n// export function _getTxtWidth (context, txt, font, pixel) {\n//   _setFontSize(context, font, pixel)\n//   let width\n//   if (context.measureText) {\n//     try {\n//       width = context.measureText(txt).width\n//     } catch (error) {\n//       // 简单的计算尺寸返回，这样子计算存在误差，特别是存在中英文的时候\n//       width = pixel * txt.length\n//     }\n//   }\n//   return width\n// }\n\n// 获取文字显示的最适合的Rect\n/**\n * get text bound rect\n * @param {Object} context canvas's context\n * @param {String} txt\n * @param {Object} config\n * @return {Object}\n */\nfunction __getTxtRect (context, txt, config) {\n  const spaceX = config.spaceX || 2\n  const spaceY = config.spaceY || 2\n  const len = _getTxtWidth(context, txt, config.font, config.pixel)\n  return { width: len + 2 * spaceX, height: config.pixel + spaceY * 2 }\n}\n// 把文本画在矩形内\n/**\n * draw text rect\n * @export\n * @param {Object} context canvas's context\n * @param {Number} xx\n * @param {Number} yy\n * @param {String} txt\n * @param {Object} config\n */\nexport function _drawTxtRect (context, xx, yy, txt, config) {\n  const spaceX = config.spaceX || 2\n  const spaceY = config.spaceY || 2\n  const tr = __getTxtRect(context, txt, config)\n\n  let xxx, yyy\n  yyy = yy // top\n  xxx = xx // start\n  if (config.y === 'middle') yyy = yy - Math.floor(tr.height / 2) // middle\n  if (config.x === 'end') xxx = xx - tr.width\n  if (config.x === 'center') xxx = xx - Math.floor(tr.width / 2)\n  _fillRect(context, xxx, yyy, tr.width, tr.height, config.bakclr)\n\n  _drawBegin(context, config.clr)\n  _drawRect(context, xxx, yyy, tr.width, tr.height)\n  xxx = xx\n  yyy = yy\n  if (config.x === 'start') xxx = xx + spaceX // ||config.x==='center'\n  if (config.x === 'end') xxx = xx - spaceX\n  if (config.y === 'top') yyy = yy - spaceY\n  _drawTxt(context, xxx, yyy, txt, config.font, config.pixel, config.clr, {\n    x: config.x,\n    y: config.y\n  })\n  _drawEnd(context)\n}\n\n// 画空心圆\n/**\n * draw circle\n * @export\n * @param {Object} context canvas's context\n * @param {Number} x\n * @param {Number} y\n * @param {Number} r\n */\nexport function _drawCircle (context, x, y, r) {\n  context.moveTo(x + r, y)\n  context.arc(x, y, r, 0, Math.PI * 2, true)\n}\n\n// 画实心圆\n/**\n * draw circle center point\n * @param {Object} context canvas's context\n * @param {Number} x\n * @param {Number} y\n * @param {Number} r\n * @param {String} clr\n */\nfunction _drawCircleAndFilled (context, x, y, r, clr) {\n  context.moveTo(x + r, y)\n  context.arc(x, y, r, 0, Math.PI * 2, true)\n  context.fillStyle = clr\n  context.fill()\n}\n\n// 画一根独立的线，不影响后面的画线颜色\n/**\n * draw a alone lien\n * @export\n * @param {Object} context canvas's context\n * @param {Number} xx\n * @param {Number} yy\n * @param {Number} xx1\n * @param {Number} yy1\n * @param {String} clr\n */\nexport function _drawLineAlone (context, xx, yy, xx1, yy1, clr) {\n  const oldclr = context.strokeStyle\n  _drawBegin(context, clr)\n  context.moveTo(xx, yy)\n  context.lineTo(xx1, yy1)\n  _drawEnd(context)\n  context.strokeStyle = oldclr\n}\n\n// 画一个椭圆\n/**\n * draw a ellipse\n * @export\n * @param {Object} context canvas's context\n * @param {Number} x\n * @param {Number} y\n * @param {Number} a\n * @param {Number} b\n * @param {Number} h\n */\nexport function _BezierEllipse (context, x, y, a, b, h) {\n  const k = 0.5522848\n  const ox = a * k // 水平控制点偏移量\n  const oy = b * k // 垂直控制点偏移量\n\n  context.beginPath()\n  // 从椭圆的左端点开始顺时针绘制四条三次贝塞尔曲线\n  if (!h) {\n    context.moveTo(x - a, y)\n    context.bezierCurveTo(x - a, y - oy, x - ox, y - b, x, y - b)\n    context.bezierCurveTo(x + ox, y - b, x + a, y - oy, x + a, y)\n    context.bezierCurveTo(x + a, y + oy, x + ox, y + b, x, y + b)\n    context.bezierCurveTo(x - ox, y + b, x - a, y + oy, x - a, y)\n    context.closePath()\n  } else {\n    context.moveTo(x, y - b)\n    context.bezierCurveTo(x + ox, y - b, x + a, y - oy, x + a, y)\n    context.bezierCurveTo(x + a, y + oy, x + ox, y + b, x, y + b)\n  }\n  context.stroke()\n}\n\n// 画一个LOGO\n/**\n * draw logo\n * @export\n * @param {any} context\n * @param {any} xx\n * @param {any} yy\n * @param {any} size\n */\nexport function _drawLogo (context, xx, yy, size) {\n  context.beginPath()\n  const lw = size\n\n  context.lineWidth = lw\n  context.strokeStyle = '#efefef'\n\n  context.moveTo(xx - 0.5 * lw, yy) // 创建开始点\n  context.lineTo(xx + 5.5 * lw, yy) // 创建水平线\n  context.moveTo(xx, yy) // 创建开始点\n  context.lineTo(xx, yy + 13 * lw) // 创建水平线\n  context.moveTo(xx - 3 * lw, yy + 13 * lw) // 创建开始点\n  context.lineTo(xx + 5.5 * lw, yy + 13 * lw) // 创建水平线\n\n  context.moveTo(xx + 10 * lw, yy + 3.5 * lw)\n  context.lineTo(xx + 13.5 * lw, yy + 3.5 * lw) // 创建水平线\n  context.moveTo(xx + 10 * lw, yy + 9.5 * lw)\n  context.lineTo(xx + 13.5 * lw, yy + 9.5 * lw) // 创建水平线\n  context.stroke()\n\n  _BezierEllipse(context, xx + 5.5 * lw, yy + 6.5 * lw, 5 * lw, 6.5 * lw, true)\n  _BezierEllipse(context, xx + 9 * lw, yy + 6.5 * lw, 5 * lw, 6.5 * lw)\n  context.fillStyle = '#000'\n  context.fillRect(xx + 8.5 * lw, yy + 4 * lw, 6 * lw, 5 * lw)\n}\n\n// 以下函数只能调用上面的函数,不能直接画图\n\n// data {o,h,l,c}\n/**\n * draw sign plot\n * @export\n * @param {Object} context canvas's context\n * @param {Number} x\n * @param {Number} y\n * @param {Object} Arc1\n * @param {Object} Arc2\n */\nexport function _drawSignPlot (context, x, y, Arc1, Arc2) {\n  if (Arc1 !== undefined && Arc1.r > 0) {\n    _drawBegin(context, Arc1.clr)\n    _drawmoveTo(context, x - Arc1.r, y)\n    _drawlineTo(context, x + Arc1.r, y)\n    _drawlineTo(context, x, y + 2 * Arc1.r)\n    _drawlineTo(context, x - Arc1.r, y)\n    _fill(context, Arc1.clr)\n    _drawCircleAndFilled(context, x, y, Arc1.r, Arc1.clr)\n    _drawEnd(context)\n  }\n  if (Arc2 !== undefined && Arc2.r > 0) {\n    _drawBegin(context, Arc2.clr)\n    _drawCircleAndFilled(context, x, y, Arc2.r, Arc2.clr)\n    _drawEnd(context)\n  }\n}\n/**\n * draw sign circle\n * @export\n * @param {Object} context canvas's context\n * @param {Number} x\n * @param {Number} y\n * @param {Object} Arc1\n * @param {Object} Arc2\n * @param {Object} Arc3\n */\nexport function _drawSignCircle (context, x, y, Arc1, Arc2, Arc3) {\n  if (Arc1 !== undefined && Arc1.r > 0) {\n    _drawBegin(context, Arc1.clr)\n    _drawCircleAndFilled(context, x, y, Arc1.r, Arc1.clr)\n    _drawEnd(context)\n  }\n  if (Arc2 !== undefined && Arc2.r > 0) {\n    _drawBegin(context, Arc2.clr)\n    _drawCircleAndFilled(context, x, y, Arc2.r, Arc2.clr)\n    _drawEnd(context)\n  }\n  if (Arc3 !== undefined && Arc3.r > 0) {\n    _drawBegin(context, Arc3.clr)\n    _drawCircleAndFilled(context, x, y, Arc3.r, Arc3.clr)\n    _drawEnd(context)\n  }\n}\n/**\n * draw sing horizontal line\n * @export\n * @param {Object} context canvas's context\n * @param {Object} config\n * @param {Object} item\n */\nexport function _drawSignHLine (context, config, item) {\n  _drawBegin(context, config.clr)\n  _drawDashLine(context, config.xx, config.yy, config.right - config.pixel / 2, config.yy, 7)\n  _drawEnd(context)\n\n  const spaceX = config.spaceX || config.linew * 2\n  const spaceY = config.spaceY || config.linew\n\n  config.width = config.right - config.xx\n  for (let i = 0; i < item.length; i++) {\n    if (item[i].display === 'false') continue\n    let xx = config.xx + config.width * item[i].set / 100\n    if (item[i].txt === 'arc') {\n      if ((xx + item[i].maxR) > config.right) xx = config.right - item[i].maxR\n      _drawSignCircle(context, xx, config.yy,\n        { r: item[i].maxR, clr: config.clr },\n        { r: item[i].minR, clr: config.bakclr }\n      )\n    } else {\n      const tr = __getTxtRect(context, item[i].txt, {\n        font: config.font, pixel: config.pixel, spaceX, spaceY\n      })\n      if ((xx + tr.width) > config.right) xx = config.right - tr.width\n      let yy = config.yy\n      if (config.top && yy < config.top + tr.height / 2) {\n        yy = config.top + tr.height / 2\n      }\n      if (config.bottom && yy > config.bottom - tr.height / 2) {\n        yy = config.bottom - tr.height / 2\n      }\n      _drawTxtRect(context, xx, yy, item[i].txt, {\n        font: config.font,\n        pixel: config.pixel,\n        clr: config.clr,\n        bakclr: config.bakclr,\n        x: 'start',\n        y: config.y,\n        spaceX,\n        spaceY\n      })\n    }\n  }\n}\n/**\n * draw sign vertical line\n * @export\n * @param {Object} context canvas's context\n * @param {Object} config\n * @param {Object} item\n */\nexport function _drawSignVLine (context, config, item) {\n  _drawBegin(context, config.clr)\n  _drawDashLine(context, config.xx, config.yy, config.xx, config.bottom - config.pixel / 2, 7)\n  _drawEnd(context)\n\n  const spaceX = config.spaceX || config.linew * 2\n  const spaceY = config.spaceY || config.linew\n  config.height = config.bottom - config.yy\n  for (let i = 0; i < item.length; i++) {\n    if (item[i].display === 'false') continue\n    let yy = config.yy + config.height * item[i].set / 100\n\n    if (item[i].txt === 'arc') {\n      if ((yy + item[i].maxR) > config.bottom) yy = config.bottom - item[i].maxR\n      _drawSignCircle(context, config.xx, yy,\n        { r: item[i].maxR, clr: config.clr },\n        { r: item[i].minR, clr: config.bakclr }\n      )\n    } else {\n      const tr = __getTxtRect(context, item[i].txt, {\n        font: config.font, pixel: config.pixel, spaceX, spaceY\n      })\n      if ((yy + tr.height) > config.bottom) yy = config.bottom - tr.height\n      let xx = config.xx\n      if (config.left && xx < config.left + tr.width / 2) {\n        xx = config.left + tr.width / 2\n      }\n      _drawTxtRect(context, xx, yy, item[i].txt, {\n        font: config.font,\n        pixel: config.pixel,\n        clr: config.clr,\n        bakclr: config.bakclr,\n        x: 'center',\n        y: 'middle',\n        spaceX,\n        spaceY\n      })\n    }\n  }\n}\n// { index:k, unitX: unitX, spaceX:spaceX, unitY:unitY,maxmin:mm},\n// data {o,h,l,c}\n/**\n * draw kbar\n * @export\n * @param {Object} context canvas's context\n * @param {Object} config\n * @param {Object} item\n */\nexport function _drawKBar (context, config, item) {\n  const xx = config.rect.left + config.index * (config.unitX + config.spaceX)\n  const xxm = xx + Math.floor(config.unitX / 2)\n  const yyh = config.rect.top + Math.round((config.maxmin.max - item[1]) * config.unitY)\n  const yyl = config.rect.top + config.rect.height - Math.round((item[2] - config.maxmin.min) * config.unitY)\n  let hh\n\n  const yy = config.rect.top + Math.round((config.maxmin.max - item[0]) * config.unitY)\n\n  if (item[0] === item[3]) {\n    hh = 0\n    _drawHline(context, xx, xx + config.unitX, yy)\n    if (item[1] > item[2]) {\n      _drawVline(context, xxm, yyh, yyl)\n    }\n  } else {\n    hh = Math.round((item[0] - item[3]) * config.unitY)\n    _drawVline(context, xxm, yyh, yy)\n    if (config.filled) {\n      _fillRect(context, xx, yy, config.unitX, hh, config.fillclr)\n    } else {\n      _drawRect(context, xx, yy, config.unitX, hh)\n    }\n    _drawVline(context, xxm, yy + hh, yyl)\n  }\n}\n// data {o,h,l,c}\n/**\n * draw volume bar\n * @export\n * @param {Object} context canvas's context\n * @param {Object} config\n * @param {Object} value\n */\nexport function _drawVBar (context, config, value) {\n  const xx = config.rect.left + config.index * (config.unitX + config.spaceX)\n  const yy = config.rect.top + Math.round((config.maxmin.max - value) * config.unitY)\n  const hh = config.rect.top + config.rect.height - yy\n  if (config.filled) {\n    _fillRect(context, xx, yy, config.unitX, hh, config.fillclr)\n  } else {\n    _drawRect(context, xx, yy, config.unitX, hh)\n  }\n}\n\n// 以下函数为辅助画图的工具函数\n// Adjust 灰度\n\n// 为传入的16进制颜色增加透明度 ‘#1F1F2F’ -> rgba(...)\n/**\n * transfer color to rgba\n * @export\n * @param {String} scolor\n * @param {Number} trans\n * @param {String} style\n * @return {String}\n */\nexport function _setTransColor (scolor, trans, style) {\n  const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/\n  let sColor = scolor.toLowerCase()\n  if (sColor && reg.test(sColor)) {\n    if (sColor.length === 4) {\n      let sColorNew = '#'\n      for (let i = 1; i < 4; i += 1) {\n        sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1))\n      }\n      sColor = sColorNew\n    }\n    // 处理六位的颜色值\n    const sColorChange = []\n    for (let i = 1; i < 7; i += 2) {\n      sColorChange.push(parseInt('0x' + sColor.slice(i, i + 2)))\n    }\n    // 效果处理\n    switch (style) {\n      case 'adjust':\n        const r = sColorChange[0]\n        const g = sColorChange[1]\n        const b = sColorChange[2]\n        sColorChange[0] = (r * 0.272) + (g * 0.534) + (b * 0.131)\n        sColorChange[1] = (r * 0.349) + (g * 0.686) + (b * 0.168)\n        sColorChange[2] = (r * 0.393) + (g * 0.769) + (b * 0.189)\n        break\n    }\n    sColor = sColorChange.join(',')\n    trans = trans || 1\n    return 'rgba(' + sColor + ',' + trans + ')'\n  } else {\n    return sColor\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport getValue from '../data/cl.data.tools'\n\n// 和定位相关基本函数\n\n/** @module ChartTools */\n\n/**\n * According to the label in the data to find a matching record number\n * @export\n * @param {Object} data\n * @param {Number} findvalue\n * @param {String} label\n * @return {Number}\n */\nexport function findLabelToIndex (data, findvalue, label) {\n  for (let idx = 0; idx <= data.value.length - 1; idx++) {\n    if (findvalue === getValue(data, label, idx)) {\n      return idx\n    }\n  }\n  return -1\n}\n// 查找最匹配time的记录号，direction为forword的时候表示从后面向前开始寻找，\n/**\n * Find the record number that matches the time. When the direction is forword, it means to start looking from behind.\n * @export\n * @param {Object} data\n * @param {Number} findvalue\n * @param {String} label\n * @param {String} direction\n * @return {Number}\n */\nexport function findNearTimeToIndex (data, findvalue, label, direction) {\n  if (label === undefined) label = 'time'\n  if (direction && direction === 'forword') {\n    for (let idx = data.value.length - 1; idx >= 0; idx--) {\n      if (getValue(data, label, idx) > findvalue) continue\n      return idx\n    }\n  } else {\n    for (let idx = 0; idx <= data.value.length - 1; idx++) {\n      if (getValue(data, label, idx) < findvalue) continue\n      return idx\n    }\n  }\n  return -1\n}\n/**\n * Specifically dealing with the time-sharing map and the 5-day map all this data will be smaller than the interface, in this case elementW is generally only one pixel\n * @export\n * @param {Object} info\n * @param {Object} config\n */\nexport function setFixedLineFlags (info, config) {\n  info.showMode = 'fixed'\n  info.fixed = {\n    min: 0,\n    max: config.maxCount - 1,\n    left: 0,\n    right: 0\n  }\n  info.minIndex = 0\n  info.maxIndex = config.size - 1\n  // 5日线时 spaceX初始值设为0\n  info.maxCount = config.maxCount > 1 ? config.maxCount : 2\n  info.unitX = config.scale\n  info.spaceX = config.width / info.maxCount - info.unitX\n}\n/**\n * In this case spaceX requires a minimum of one pixel\n * @export\n * @param {Object} info\n * @param {Object} config\n */\nexport function setMoveLineFlags (info, config) {\n  const spaceX = info.unitX / 4\n  info.spaceX = spaceX < config.scale ? config.scale : spaceX\n  info.maxCount = Math.floor(config.width / (info.unitX + info.spaceX)) // 整个图形区域最大显示记录数\n  const offset = info.maxCount > config.size ? config.size : info.maxCount\n\n  switch (info.showMode) {\n    case 'fixed':\n    // 要根据fixed的最大最小值，合并数据\n      info.maxIndex = config.size - 1\n      info.minIndex = config.size - offset\n      break\n    case 'locked':\n      // info.locked.index = config.index ? config.index : info.locked.index;\n      // 把需要锁定的记录初始化，如果没有值就取当前画面中间的值\n      // info.locked.set = config.set ? config.set : info.locked.set;\n      break\n    case 'move':\n      break\n    default: // case 'last':\n      info.maxIndex = config.size - 1\n      info.minIndex = config.size - offset\n      break\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/** @module SystemConfig */\n\nimport {\n  copyJsonOfDeep\n} from '../util/cl.tool'\n\nimport * as drawClass from '../util/cl.draw'\n\n/**\n * @constant\n */\nexport const COLOR_WHITE = {\n  sys: 'white',\n  line: ['#4048cc', '#dd8d2d', '#168ee0', '#ad7eac', '#ff8290', '#ba1215'],\n  back: '#fafafa',\n  txt: '#2f2f2f',\n  baktxt: '#2f2f2f',\n  axis: '#7f7f7f',\n  grid: '#cccccc',\n  red: '#ff6a6c',\n  green: '#32cb47',\n  white: '#7e7e7e',\n  vol: '#dd8d2d',\n  button: '#888888',\n  colume: '#41bfd0',\n  box: '#ddf4df',\n  code: '#3f3f3f'\n}\n/**\n * @constant\n */\nexport const COLOR_BLACK = {\n  sys: 'black',\n  line: ['#efefef', '#fdc104', '#5bbccf', '#ad7eac', '#bf2f2f', '#cfcfcf'],\n  back: '#232323',\n  txt: '#bfbfbf',\n  baktxt: '#2f2f2f',\n  axis: '#afafaf',\n  grid: '#373737',\n  red: '#ff6a6c',\n  green: '#6ad36d',\n  white: '#9f9f9f',\n  vol: '#fdc104',\n  button: '#9d9d9d',\n  colume: '#41bfd0',\n  box: '#373737',\n  code: '#41bfd0'\n}\n/**\n * @constant\n */\nexport const CHART_WIDTH_MAP = {\n  '0': {\n    'width': 7.1999969482421875\n  },\n  '1': {\n    'width': 4.8119964599609375\n  },\n  '2': {\n    'width': 7.1999969482421875\n  },\n  '3': {\n    'width': 7.1999969482421875\n  },\n  '4': {\n    'width': 7.1999969482421875\n  },\n  '5': {\n    'width': 7.1999969482421875\n  },\n  '6': {\n    'width': 7.1999969482421875\n  },\n  '7': {\n    'width': 6.563995361328125\n  },\n  '8': {\n    'width': 7.1999969482421875\n  },\n  '9': {\n    'width': 7.1999969482421875\n  },\n  '.': {\n    'width': 3.167999267578125\n  },\n  ',': {\n    'width': 3.167999267578125\n  },\n  '%': {\n    'width': 11.639999389648438\n  },\n  ':': {\n    'width': 3.167999267578125\n  },\n  ' ': {\n    'width': 3.9959869384765625\n  },\n  'K': {\n    'width': 8.279998779296875\n  },\n  'V': {\n    'width': 7.667999267578125\n  },\n  'O': {\n    'width': 9.203994750976562\n  },\n  'L': {\n    'width': 7.055999755859375\n  },\n  '-': {\n    'width': 7.2599945068359375\n  },\n  '[': {\n    'width': 3.9959869384765625\n  },\n  ']': {\n    'width': 3.9959869384765625\n  }\n}\n\n/**\n * The following several variables must be established when the system is established, which is a common configuration for everyone.\n */\nconst _systemInfo = {\n  runPlatform: 'normal', // 'react-native' | 'mina' | 'web'\n  axisPlatform: 'web', // 'web' | 'phone'\n  eventPlatform: 'web', // 'react-native' | 'mina' | 'web'\n  scale: 1, // Set the zoom ratio according to the dpi of different display devices\n  standard: 'china', // 'usa' | 'china' Drawing standards to support the United States and China\n  sysColor: 'black', // 'white' | 'black'\n  charMap: CHART_WIDTH_MAP, // Used to help degrade font width calculations for some platforms that do not support context measures\n  mainCanvas: {}, // Main canvas\n  cursorCanvas: {} // Cursor canvas\n}\n/**\n * set paint standard\n * @export\n * @param {any} standard\n */\nexport function setStandard (standard) {\n  _systemInfo.standard = standard || 'china'\n}\n/**\n * set system color\n * @export\n * @param {String} syscolor drawing theme\n * @returns system color\n */\nexport function setColor (syscolor) {\n  let color = {}\n  if (syscolor === 'white') {\n    color = copyJsonOfDeep(COLOR_WHITE)\n  } else {\n    color = copyJsonOfDeep(COLOR_BLACK)\n  }\n  // The contrast between the rise and fall of the US market and the Chinese market is opposite\n  if (_systemInfo.standard === 'usa') {\n    const clr = color.red\n    color.red = color.green\n    color.green = clr\n  }\n  // Update the current system color\n  _systemInfo.color = color\n  return color\n}\n/**\n * Used to help those platforms that don't support measureText, degraded calculation font span\n * @export\n * @param {Object} context canvas context\n * @param {String} txt text\n * @param {String} font font family\n * @param {Number} pixel font size\n * @return {Number} text width\n */\nexport function _getOtherTxtWidth (context, txt, font, pixel) {\n  const ww = _systemInfo.other.width\n  const hh = _systemInfo.other.height\n  drawClass._fillRect(0, 0, ww, hh, '#000')\n  drawClass._drawTxt(_systemInfo.other.context, 0, 0, txt, font, pixel, '#fff')\n  const imgData = _systemInfo.other.context.getImageData(0, 0, ww, hh).data\n  let width = 0\n  for (let i = 0; i < imgData.length; /* i += 4 */) {\n    if (imgData.data[i + 0] !== 0 || imgData.data[i + 1] !== 0 ||\n      imgData.data[i + 2] !== 0 || imgData.data[i + 3] !== 255) {\n      i += 4\n      width++\n    } else {\n      i += 4 * ww\n    }\n  }\n  return width\n}\n/**\n * set system scale\n * @export\n * @param {Object} canvas\n * @param {Number} scale\n * @return {Object}\n */\nexport function setScale (canvas, scale) {\n  canvas.width = canvas.clientWidth * scale\n  canvas.height = canvas.clientHeight * scale\n  return {\n    width: canvas.width,\n    height: canvas.height\n  }\n}\n/**\n * init system\n * @export\n * @param {Object} cfg system config\n * @return {Object} all system config\n */\nexport function initSystem (cfg) {\n  if (cfg === undefined) return\n  for (const key in _systemInfo) {\n    _systemInfo[key] = cfg[key] || _systemInfo[key]\n  }\n  _systemInfo.mainCanvas.canvas = cfg.mainCanvas.canvas\n  _systemInfo.mainCanvas.context = cfg.mainCanvas.context\n  _systemInfo.mainCanvas.context.charMap = _systemInfo.charMap\n  _systemInfo.cursorCanvas.canvas = cfg.cursorCanvas.canvas\n  _systemInfo.cursorCanvas.context = cfg.cursorCanvas.context\n  _systemInfo.cursorCanvas.context.charMap = _systemInfo.charMap\n\n  _systemInfo.color = setColor(_systemInfo.sysColor)\n\n  if (_systemInfo.runPlatform === 'normal') {\n    if (_systemInfo.mainCanvas.canvas !== undefined && _systemInfo.scale !== 1) {\n      setScale(_systemInfo.mainCanvas.canvas, _systemInfo.scale)\n      setScale(_systemInfo.cursorCanvas.canvas, _systemInfo.scale)\n    }\n  }\n  return _systemInfo\n}\n\n/**\n * Bind some basic properties when some chart objects are initialized\n * @export\n * @param {Object} chart\n * @param {Object} father\n */\nexport function initCommonInfo (chart, father) {\n  chart.father = father\n  chart.context = father.context\n  chart.scale = _systemInfo.scale\n  chart.color = _systemInfo.color\n  chart.axisPlatform = _systemInfo.axisPlatform\n  chart.eventPlatform = _systemInfo.eventPlatform\n}\n/**\n * checkout layout\n * @export\n * @param {Object} layout\n */\nexport function checkLayout (layout) {\n  const scale = _systemInfo.scale\n  layout.margin.top *= scale\n  layout.margin.left *= scale\n  layout.margin.bottom *= scale\n  layout.margin.right *= scale\n\n  layout.offset.top *= scale\n  layout.offset.left *= scale\n  layout.offset.bottom *= scale\n  layout.offset.right *= scale\n\n  layout.title.pixel *= scale\n  layout.title.height *= scale\n  layout.title.spaceX *= scale\n  layout.title.spaceY *= scale\n\n  if (layout.title.height < (layout.title.pixel + layout.title.spaceY + 2 * scale)) {\n    layout.title.height = layout.title.pixel + layout.title.spaceY + 2 * scale\n  }\n\n  layout.axisX.pixel *= scale\n  layout.axisX.width *= scale\n  layout.axisX.height *= scale\n  layout.axisX.spaceX *= scale\n\n  layout.scroll.pixel *= scale\n  layout.scroll.size *= scale\n  layout.scroll.spaceX *= scale\n\n  layout.digit.pixel *= scale\n  layout.digit.height *= scale\n  layout.digit.spaceX *= scale\n\n  if (layout.digit.height < (layout.digit.pixel + 2 * scale)) {\n    layout.digit.height = layout.digit.pixel + 2 * scale\n  }\n\n  layout.symbol.size *= scale\n  layout.symbol.spaceX *= scale\n  layout.symbol.spaceY *= scale\n}\n/**\n * Change mouse style\n * @export\n * @param {String} style\n */\nexport function changeCursorStyle (style) {\n  if (_systemInfo.eventPlatform === 'html5') {\n    _systemInfo.mainCanvas.canvas.style.cursor = style\n    _systemInfo.cursorCanvas.canvas.style.cursor = style\n  }\n}\n/**\n * Get system line color\n * @export\n * @param {Number} index\n * @return {String}\n */\nexport function getLineColor (index) {\n  if (index === undefined) index = 0\n  return _systemInfo.color.line[index % _systemInfo.color.line.length]\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 以下是 ClLineKBar 的实体定义\n\nimport {\n  _drawBegin,\n  _drawEnd,\n  // _setTransColor,\n  _drawKBar\n} from '../util/cl.draw'\nimport getValue from '../data/cl.data.tools'\nimport {\n  initCommonInfo\n} from '../chart/cl.chart.init'\n\n// 创建时必须带入父类，后面的运算定位都会基于父节点进行；\n// 这个类仅仅是画图, 因此需要把可以控制的rect传入进来\n/**\n * Class representing ClDrawKBar\n * @export\n * @class ClDrawKBar\n */\nexport default class ClDrawKBar {\n  /**\n\n   * Creates an instance of ClDrawKBar.\n   * @param {Object} father\n   * @param {Object} rectMain\n   */\n  constructor (father, rectMain) {\n    initCommonInfo(this, father)\n    this.rectMain = rectMain\n\n    this.linkInfo = father.father.linkInfo\n    this.source = father.father\n    this.maxmin = father.maxmin\n  }\n  /**\n   * paint\n   * @param {String} key\n   * @memberof ClDrawKBar\n   */\n  onPaint (key) {\n    if (key !== undefined) this.hotKey = key\n    this.data = this.source.getData(this.hotKey)\n    this.codeInfo = this.source.getData('INFO')\n\n    let clr = this.color.red\n    // clr = _setTransColor(clr, 1, 'adjust')\n    // clr = _setTransColor(clr, 0.7)\n    _drawBegin(this.context, clr)\n    let open, close\n    let before = getValue(this.codeInfo, 'before', 0)\n    for (let k = 0, idx = this.linkInfo.minIndex; idx <= this.linkInfo.maxIndex; k++, idx++) {\n      if (idx > 0) before = getValue(this.data, 'close', idx - 1)\n      open = getValue(this.data, 'open', idx)\n      close = getValue(this.data, 'close', idx)\n      if (open < close || (open === close && close >= before)) {\n      // getValue(this.data, 'high', idx),\n      // getValue(this.data, 'low', idx));\n        _drawKBar(this.context, {\n          filled: this.color.sys === 'white',\n          index: k,\n          spaceX: this.linkInfo.spaceX,\n          unitX: this.linkInfo.unitX,\n          unitY: this.maxmin.unitY,\n          maxmin: this.maxmin,\n          rect: this.rectMain,\n          fillclr: clr\n        },\n        [close,\n          getValue(this.data, 'high', idx),\n          getValue(this.data, 'low', idx),\n          open\n        ])\n      }\n    }\n    _drawEnd(this.context)\n    clr = this.color.green\n    // clr = _setTransColor(clr, 1, 'adjust')\n    // clr = _setTransColor(clr, 0.7)\n    _drawBegin(this.context, clr)\n    for (let k = 0, idx = this.linkInfo.minIndex; idx <= this.linkInfo.maxIndex; k++, idx++) {\n      if (idx > 0) before = getValue(this.data, 'close', idx - 1)\n      open = getValue(this.data, 'open', idx)\n      close = getValue(this.data, 'close', idx)\n      if (open > close || (open === close && close < before)) {\n        // getValue(this.data, 'high', idx),\n        // getValue(this.data, 'low', idx));\n        _drawKBar(this.context, {\n          filled: true,\n          index: k,\n          spaceX: this.linkInfo.spaceX,\n          unitX: this.linkInfo.unitX,\n          unitY: this.maxmin.unitY,\n          maxmin: this.maxmin,\n          rect: this.rectMain,\n          fillclr: clr\n        },\n        [open,\n          getValue(this.data, 'high', idx),\n          getValue(this.data, 'low', idx),\n          close\n        ])\n      }\n    }\n    _drawEnd(this.context)\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 以下是 ClLineKBar 的实体定义\n\nimport {\n  _drawBegin,\n  _drawEnd,\n  _drawmoveTo,\n  _drawlineTo\n} from '../util/cl.draw'\nimport getValue from '../data/cl.data.tools'\nimport {\n  initCommonInfo,\n  getLineColor\n} from '../chart/cl.chart.init'\nimport {\n  inRect\n} from '../util/cl.tool'\n\n/**\n * Class representing ClDrawLine\n * @export\n * @class ClDrawLine\n */\nexport default class ClDrawLine {\n  /**\n\n   * Creates an instance of ClDrawLine.\n   * @param {Object} father\n   * @param {Object} rectMain\n   */\n  constructor (father, rectMain) {\n    initCommonInfo(this, father)\n    this.rectMain = rectMain\n\n    this.linkInfo = father.father.linkInfo\n    this.source = father.father\n\n    this.maxmin = father.maxmin\n  }\n  /**\n   * paint\n   * @param {String} key\n   * @memberof ClDrawLine\n   */\n  onPaint (key) {\n    if (key !== undefined) this.hotKey = key\n    this.data = this.source.getData(this.hotKey)\n\n    if (this.info.labelX === undefined) this.info.labelX = 'idx'\n    if (this.info.labelY === undefined) this.info.labelY = 'value'\n    // 分钟线为‘close’\n\n    let xx, yy\n    let isBegin = false\n    let idx\n    let count = 0\n    let clr\n    if (this.info.color === undefined) {\n      clr = getLineColor(this.info.colorIndex)\n    } else {\n      clr = this.color[this.info.color]\n    }\n\n    _drawBegin(this.context, clr)\n    for (let k = this.linkInfo.minIndex, index = 0; k <= this.linkInfo.maxIndex; k++, index++) {\n      if (this.info.showSort === undefined) {\n        idx = index\n      } else {\n        idx = getValue(this.data, this.info.showSort, index)\n      }\n      // if (getValue(this.data, this.info.labelX, index) < 0) continue;\n      xx = this.rectMain.left + idx * (this.linkInfo.unitX + this.linkInfo.spaceX)\n      yy = this.rectMain.top + Math.round((this.maxmin.max - getValue(this.data, this.info.labelY, index)) * this.maxmin.unitY)\n      if (Math.floor(idx / this.info.skips) > count) {\n        count = Math.floor(idx / this.info.skips)\n        isBegin = false\n      }\n      if (!isBegin) {\n        isBegin = inRect(this.rectMain, { x: xx, y: yy })\n        if (isBegin) _drawmoveTo(this.context, xx, yy)\n        continue\n      }\n      _drawlineTo(this.context, xx, yy)\n    }\n    _drawEnd(this.context)\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 以下是 ClLineRight 的实体定义\n\nimport {\n  _getTxtWidth,\n  _drawTxt\n} from '../util/cl.draw'\nimport {\n  findNearTimeToIndex\n} from './cl.chart.tools'\nimport getValue, {\n  getSize\n} from '../data/cl.data.tools'\nimport {\n  initCommonInfo\n} from '../chart/cl.chart.init'\n// 创建时必须带入父类，后面的运算定位都会基于父节点进行；\n// 这个类仅仅是画图, 因此需要把可以控制的rect传入进来\n/**\n * Class representing ClDrawRight\n * @export\n * @class ClDrawRight\n */\nexport default class ClDrawRight {\n  /**\n\n   * Creates an instance of ClDrawRight.\n   * @param {Object} father\n   * @param {Object} rectMain\n   */\n  constructor (father, rectMain) {\n    initCommonInfo(this, father)\n    this.rectMain = rectMain\n\n    this.linkInfo = father.father.linkInfo\n    this.source = father.father\n    this.symbol = father.layout.symbol\n  }\n  /**\n   * paint\n   * @param {String} key\n   * @memberof ClDrawRight\n   */\n  onPaint (key) {\n    if (key !== undefined) this.hotKey = key\n    this.data = this.source.getData(this.hotKey)\n    this.rightData = this.source.getData('RIGHT')\n    if (getSize(this.rightData) < 1) return\n\n    const len = _getTxtWidth(this.context, '▲', this.symbol.font, this.symbol.pixel)\n    for (let i = 0; i < this.rightData.value.length; i++) {\n      const idx = findNearTimeToIndex(this.data, getValue(this.rightData, 'time', i))\n      const offset = idx - this.linkInfo.minIndex\n      const xx = this.rectMain.left + offset * (this.linkInfo.unitX + this.linkInfo.spaceX) + Math.floor(this.linkInfo.unitX / 2)\n      if (xx < this.rectMain.left) {\n        continue\n      }\n      let clr = this.color.button\n      if (this.linkInfo.rightMode !== 'no') clr = this.color.vol\n      _drawTxt(this.context, xx - Math.floor(len / 2), this.rectMain.top + this.rectMain.height - this.symbol.pixel - this.symbol.spaceY,\n        '▲', this.symbol.font, this.symbol.pixel, clr, { y: 'top' })\n    }\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 以下是 ClLineVBar 的实体定义\n\nimport {\n  _drawBegin,\n  _drawEnd,\n  _drawVBar\n} from '../util/cl.draw'\nimport getValue from '../data/cl.data.tools'\nimport {\n  initCommonInfo\n} from '../chart/cl.chart.init'\n\n// 创建时必须带入父类，后面的运算定位都会基于父节点进行；\n// 这个类仅仅是画图, 因此需要把可以控制的rect传入进来\n/**\n * Class representing ClDrawVBar\n * @export\n * @class ClDrawVBar\n */\nexport default class ClDrawVBar {\n  /**\n\n   * Creates an instance of ClDrawVBar.\n   * @param {Object} father\n   * @param {Object} rectMain\n   */\n  constructor (father, rectMain) {\n    initCommonInfo(this, father)\n    this.rectMain = rectMain\n\n    this.linkInfo = father.father.linkInfo\n    this.source = father.father\n\n    this.maxmin = father.maxmin\n  }\n  /**\n   * paint\n   * @param {String} key\n   * @memberof ClDrawVBar\n   */\n  onPaint (key) {\n    if (key !== undefined) this.hotKey = key\n    this.data = this.source.getData(this.hotKey)\n\n    _drawBegin(this.context, this.color.red)\n    for (let k = 0, idx = this.linkInfo.minIndex; idx <= this.linkInfo.maxIndex; k++, idx++) {\n      if (parseFloat(getValue(this.data, 'open', idx)) <= parseFloat(getValue(this.data, 'close', idx))) {\n        _drawVBar(this.context, {\n          filled: this.color.sys === 'white',\n          index: k,\n          spaceX: this.linkInfo.spaceX,\n          unitX: this.linkInfo.unitX,\n          unitY: this.maxmin.unitY,\n          maxmin: this.maxmin,\n          rect: this.rectMain,\n          fillclr: this.color.red\n        },\n        getValue(this.data, 'vol', idx))\n      }\n    }\n    _drawEnd(this.context)\n    _drawBegin(this.context, this.color.green)\n    for (let k = 0, idx = this.linkInfo.minIndex; idx <= this.linkInfo.maxIndex; k++, idx++) {\n      if (parseFloat(getValue(this.data, 'open', idx)) > parseFloat(getValue(this.data, 'close', idx))) {\n        _drawVBar(this.context, {\n          filled: true,\n          index: k,\n          spaceX: this.linkInfo.spaceX,\n          unitX: this.linkInfo.unitX,\n          unitY: this.maxmin.unitY,\n          maxmin: this.maxmin,\n          rect: this.rectMain,\n          fillclr: this.color.green\n        },\n        getValue(this.data, 'vol', idx))\n      }\n    }\n    _drawEnd(this.context)\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 以下是 ClLineKBar 的实体定义\n\nimport {\n  _drawBegin,\n  _drawEnd,\n  _drawLineAlone,\n  _drawmoveTo,\n  _drawlineTo\n} from '../util/cl.draw'\nimport getValue from '../data/cl.data.tools'\nimport {\n  initCommonInfo,\n  getLineColor\n} from '../chart/cl.chart.init'\n/**\n * Class representing ClDrawVLine\n * @export\n * @class ClDrawVLine\n */\nexport default class ClDrawVLine {\n  /**\n\n   * Creates an instance of ClDrawVLine.\n   * @param {Object} father\n   * @param {Object} rectMain\n   */\n  constructor (father, rectMain) {\n    initCommonInfo(this, father)\n    this.rectMain = rectMain\n    // this.rectMain = {\n    //   left:rectMain.left,\n    //   top:rectMain.top,\n    //   width:rectMain.width,\n    //   height:rectMain.height\n    // };\n    this.linkInfo = father.father.linkInfo\n    this.source = father.father\n    this.maxmin = father.maxmin\n  }\n  /**\n   * paint\n   * @param {String} key\n   * @memberof ClDrawVLine\n   */\n  onPaint (key) {\n    if (key !== undefined) this.hotKey = key\n    this.data = this.source.getData(this.hotKey)\n\n    if (this.info.labelX === undefined) this.info.labelX = 'time'\n    if (this.info.labelY === undefined) this.info.labelY = 'vol'\n\n    let xx, yy, value\n    let idx\n    let clr\n    if (this.info.color === undefined) {\n      clr = getLineColor(this.info.colorIndex)\n    } else {\n      clr = this.color[this.info.color]\n    }\n\n    _drawBegin(this.context, clr)\n    for (let k = this.linkInfo.minIndex, index = 0; k <= this.linkInfo.maxIndex; k++, index++) {\n      if (this.info.showSort === undefined) {\n        idx = index\n      } else {\n        idx = getValue(this.data, this.info.showSort, index)\n      }\n      // if (getValue(this.data, this.info.labelX, index) < 0) continue;\n      xx = this.rectMain.left + Math.floor(idx * (this.linkInfo.spaceX + this.linkInfo.unitX))\n      value = getValue(this.data, this.info.labelY, k)\n      if (value < 0) continue\n      yy = this.rectMain.top + Math.round((this.maxmin.max - value) * this.maxmin.unitY)\n      if (yy < this.rectMain.top) {\n        yy = this.rectMain.top + 1\n        _drawLineAlone(this.context, xx, this.rectMain.top + this.rectMain.height - 1, xx, yy, this.color.white)\n        continue\n      }\n      _drawmoveTo(this.context, xx, this.rectMain.top + this.rectMain.height - 1)\n      _drawlineTo(this.context, xx, yy)\n    }\n    _drawEnd(this.context)\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport ClDrawKBar from './chart/cl.draw.kbar'\nimport ClDrawLine from './chart/cl.draw.line'\nimport ClDrawRight from './chart/cl.draw.right'\nimport ClDrawVBar from './chart/cl.draw.vbar'\nimport ClDrawVLine from './chart/cl.draw.vline'\n\n/** @module ClChartDef */\n\n/**\n * chart main layout config\n */\nexport const CHART_LAYOUT = {\n  margin: {\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0\n  },\n  offset: {\n    left: 2,\n    top: 2,\n    right: 2,\n    bottom: 0\n  },\n  title: {\n    pixel: 12,\n    height: 18,\n    spaceX: 10,\n    spaceY: 2,\n    font: 'sans-serif'\n  },\n  axisX: {\n    pixel: 12,\n    height: 18,\n    width: 50,\n    spaceX: 2,\n    font: 'sans-serif'\n  },\n  scroll: {\n    pixel: 12,\n    size: 15,\n    spaceX: 10,\n    font: 'sans-serif'\n  },\n  digit: {\n    pixel: 12,\n    height: 16,\n    spaceX: 3,\n    font: 'sans-serif'\n  },\n  symbol: {\n    pixel: 10,\n    size: 18,\n    spaceX: 3,\n    font: 'sans-serif'\n  }\n}\n\n/**\n * chart buttons config\n */\nexport const CHART_BUTTONS = [\n  { key: 'zoomin' },\n  { key: 'zoomout' },\n  { key: 'exright' }\n]\n\n/**\n * chart order config\n */\nexport const CHART_ORDER = {\n  style: 'normal', // 'tiny' only shows buy one sell one 'normal' 5 orders\n  title: {\n    display: 'text' // 'text' or 'none','none' does not display btn button text\n  }\n}\n\nconst ZOOM_INFO_DEF = {\n  index: 3,\n  list: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n}\n\n/**\n * chart kbar layout config\n */\nexport const CHART_KBAR = {\n  // buttons: ['zoomin', 'exright', 'zoomout'],\n  // title: { display: 'none' },\n  // scroll: {display: 'none'},\n  zoomInfo: ZOOM_INFO_DEF,\n  scroll: {\n    display: 'none' // 'none' does not show\n  },\n  title: {\n    display: 'text', // none does not show btn button text\n    label: 'K线' // label information to be displayed\n  },\n  axisX: {\n    lines: 0,\n    display: 'none', // 'none' | 'both' | 'block', 'none' does not show, 'both': show both, 'block': displays a value for each block based on lines = display coordinates\n    type: 'normal', // 'normal' | 'day1' | 'day5'\n    format: 'date' // date time datetime normal tradetime(9:30)\n  },\n  axisY: {\n    lines: 3,\n    left: {\n      display: 'both', // none不显示, both, noupper 不显示最上面, nofoot不显示最下面 = 显示坐标\n      middle: 'none', // 是否有中间值 'before'=前收盘 ‘zero’ 0为中间值\n      format: 'price' // 输出数据的格式 rate, price 保留一定小数位 vol 没有小数\n    },\n    right: {\n      display: 'both', // none不显示，noupper 不显示最上面, nofoot不显示最下面 = 显示坐标\n      middle: 'none', // 是否有中间值 'before'=前收盘 ‘zero’ 0为中间值\n      format: 'price' // rate, price vol\n    }\n  },\n  lines: [{\n    // type: 'l_kbar',\n    className: ClDrawKBar,\n    extremum: { // 如何取极值\n      method: 'normal', // fixedLeft fixedRight 上下固定,此时需要取axisY.middle的定义\n      maxvalue: ['high'], // 参与计算最大值的标签\n      minvalue: ['low'] // 参与计算最小值的标签\n    }\n    // 第一根线默认的key是跟随chart的hotKey变化而变化的，其他线要么自己有数据，要么根据hotKey加上公式计算出自己的key\n  },\n  {\n    className: ClDrawRight\n  },\n  {\n    className: ClDrawLine,\n    info: { // 输出在信息栏目的数据\n      txt: '5:',\n      labelY: 'value', // 从key中获取对应的数据标签 用于显示信息用\n      format: 'price'\n    },\n    formula: { // 数据生成方式，都需要基于基本数据，没有formula表示取绑定的数据\n      key: 'DAYM1', // 生成和获取数据的key，\n      command: `out = this.MA('close',5)` // 公式只能输出值到out中\n    }\n  },\n  {\n    className: ClDrawLine,\n    info: {\n      txt: '10:',\n      labelY: 'value',\n      format: 'price'\n    },\n    formula: {\n      key: 'DAYM2', // 获取数据的key，\n      command: `out = this.MA('close',10)` // 公式只能输出值到out中\n    }\n  },\n  {\n    className: ClDrawLine,\n    info: {\n      txt: '20:',\n      labelY: 'value',\n      format: 'price'\n    },\n    formula: {\n      key: 'DAYM3', // 获取数据的key，\n      command: `out = this.MA('close',20)` // 公式只能输出值到out中\n    }\n  },\n  {\n    className: ClDrawLine,\n    info: {\n      txt: '60:',\n      labelY: 'value',\n      format: 'price'\n    },\n    formula: {\n      key: 'DAYM4', // 获取数据的key，\n      command: `out = this.MA('close',60)` // 公式只能输出值到out中\n    }\n  }]\n}\n\n/**\n * chart vbar layout config\n */\nexport const CHART_VBAR = {\n  zoomInfo: ZOOM_INFO_DEF,\n  title: {\n    display: 'text', // none 不显示 btn 按钮 text 文字\n    label: 'VOL' // 需要显示的文字信息\n  },\n  axisX: {\n    lines: 0,\n    display: 'both', // 左右两边显示\n    type: 'normal', // 有 day1 day5 和 normal 三种模式\n    format: 'date' // date time datetime normal tradetime：根据交易时间此时label无用 = 显示的信息方式\n  },\n  axisY: {\n    lines: 1,\n    left: {\n      display: 'nofoot',\n      middle: 'none',\n      format: 'vol'\n    },\n    right: {\n      display: 'nofoot',\n      middle: 'none',\n      format: 'vol'\n    }\n  },\n  lines: [{\n    className: ClDrawVBar,\n    extremum: { // 如何取极值\n      method: 'normal', // fixedLeft fixedRight 上下固定,此时需要取axisY.middle的定义\n      maxvalue: ['vol'], // 参与计算最大值的标签\n      minvalue: [0] // 参与计算最小值的标签\n    },\n    info: {\n      labelY: 'vol', // 需要显示的变量，从key中获取对应的数据标签\n      format: 'vol'\n    }\n  },\n  {\n    className: ClDrawLine,\n    info: {\n      txt: '5:',\n      labelY: 'value', // 需要显示的变量，从key中获取对应的数据标签\n      format: 'vol'\n    },\n    formula: {\n      key: 'MVOL1', // 获取数据的key，\n      command: `out = this.MA('vol',5)` // 公式只能输出值到out中\n    }\n  },\n  {\n    className: ClDrawLine,\n    info: {\n      txt: '10:',\n      labelY: 'value', // 需要显示的变量，从key中获取对应的数据标签\n      format: 'vol'\n    },\n    formula: {\n      key: 'MVOL2', // 获取数据的key，\n      command: `out = this.MA('vol',10)` // 公式只能输出值到out中\n    }\n  },\n  {\n    className: ClDrawLine,\n    info: {\n      txt: '20:',\n      labelY: 'value', // 需要显示的变量，从key中获取对应的数据标签\n      format: 'vol'\n    },\n    formula: {\n      key: 'MVOL3', // 获取数据的key，\n      command: `out = this.MA('vol',20)` // 公式只能输出值到out中\n    }\n  }]\n}\n\n/**\n * chart now config\n */\nexport const CHART_NOW = {\n  title: {\n    display: 'none' // none 不显示 btn 按钮 text 文字\n  },\n  axisX: {\n    lines: 3,\n    display: 'none', // none不显示，sides：两边各一个值, block：根据块大小每个块显示一个值 = 显示坐标\n    type: 'day1', // 有 day1 day5 和 normal 三种模式\n    format: 'tradetime'\n  },\n  axisY: {\n    lines: 3,\n    left: {\n      display: 'both', // none不显示，all, noupper不显示最上面, nofoot不显示最下面 = 显示坐标\n      middle: 'before', // 是否有中间值 'before'=前收盘 ‘zero’ 0为中间值\n      format: 'price' // 输出数据的格式 rate, price, vol\n    },\n    right: {\n      display: 'both', // none不显示，noupper不显示最上面, nofoot不显示最下面 = 显示坐标\n      middle: 'before', // 是否有中间值 'before'=前收盘 ‘zero’ 0为中间值\n      format: 'rate' // rate, price vol\n    }\n  },\n  lines: [{\n    className: ClDrawLine,\n    extremum: { // 如何取极值\n      method: 'fixedLeft', // fixedLeft fixedRight 上下固定,此时需要取axisY.middle的定义\n      maxvalue: ['high'], // 参与计算最大值的标签\n      minvalue: ['low'] // 参与计算最小值的标签\n    },\n    info: {\n      labelX: 'idx',\n      labelY: 'close',\n      showSort: 'idx'\n    }\n  },\n  {\n    className: ClDrawLine,\n    info: {\n      showSort: 'idx'\n    },\n    formula: {\n      key: 'NOWM1', // 获取数据的key，\n      command: `out = this.AVGPRC()` // 均价,要根据股票类型做变化\n    }\n  }]\n}\n\n/**\n * min chart volume config\n */\nexport const CHART_NOWVOL = {\n  title: {\n    display: 'none' // none 不显示 btn 按钮 text 文字\n  },\n  axisX: {\n    lines: 3,\n    display: 'both', // 左右两边显示\n    type: 'day1', // 有 day1 day5 和 normal 三种模式\n    format: 'tradetime'\n  },\n  axisY: {\n    lines: 1,\n    left: {\n      display: 'nofoot',\n      middle: 'none',\n      format: 'vol'\n    },\n    right: {\n      display: 'nofoot',\n      middle: 'none',\n      format: 'vol'\n    }\n  },\n  lines: [{\n    className: ClDrawVLine,\n    extremum: { // 如何取极值\n      method: 'normal', // fixedLeft fixedRight 上下固定,此时需要取axisY.middle的定义\n      maxvalue: ['decvol'], // 参与计算最大值的标签\n      minvalue: [0] // 参与计算最小值的标签\n    },\n    info: {\n      showSort: 'idx',\n      labelX: 'idx',\n      labelY: 'decvol',\n      color: 'vol'\n    }\n  }]\n}\n/**\n * 5day chart config\n */\nexport const CHART_DAY5 = {\n  title: {\n    display: 'none' // none 不显示 btn 按钮 text 文字\n  },\n  axisX: {\n    lines: 4,\n    display: 'none', // none不显示，both 边各一个值, block 根据块大小每个块显示一个值 = 显示坐标\n    type: 'day5', // 有 day1 day5 和 normal 三种模式\n    format: 'date' // date time datetime normal tradetime：根据交易时间此时label无用 = 显示的信息方式\n  },\n  axisY: {\n    lines: 3,\n    left: {\n      display: 'both', // none不显示，all, noupper不显示最上面, nofoot不显示最下面 = 显示坐标\n      middle: 'before',\n      format: 'price' // 输出数据的格式 rate, price, vol\n    },\n    right: {\n      display: 'both', // none不显示，noupper不显示最上面, nofoot不显示最下面 = 显示坐标\n      middle: 'before',\n      format: 'rate' // rate, price vol\n    }\n  },\n  lines: [{\n    className: ClDrawLine,\n    extremum: { // 如何取极值\n      method: 'fixedLeft', // fixedLeft fixedRight 上下固定,此时需要取axisY.middle的定义\n      maxvalue: ['close'], // 参与计算最大值的标签\n      minvalue: ['close'] // 参与计算最小值的标签\n    },\n    info: {\n      showSort: 'idx',\n      labelX: 'time',\n      labelY: 'close'\n    }\n  },\n  {\n    className: ClDrawLine,\n    info: {\n      showSort: 'idx'\n    },\n    formula: {\n      key: 'NOWDAY5', // 获取数据的key，\n      command: `out = this.AVGPRC()` // 均价,要根据股票类型做变化\n    }\n  }]\n}\n\n/**\n * 5 days chart volume config\n */\nexport const CHART_DAY5VOL = {\n  title: {\n    display: 'none' // none 不显示 btn 按钮 text 文字\n  },\n  axisX: {\n    lines: 4,\n    display: 'block',\n    type: 'day5', // 有 day1 day5 和 normal 三种模式\n    format: 'date' // date time datetime normal 显示的x轴信息方式\n  },\n  axisY: {\n    lines: 1,\n    left: {\n      display: 'nofoot', // none不显示，all, noupper不显示最上面, nofoot不显示最下面 = 显示坐标\n      middle: 'none',\n      format: 'vol' // 输出数据的格式 rate, price, vol\n    },\n    right: {\n      display: 'nofoot', // none不显示，noupper不显示最上面, nofoot不显示最下面 = 显示坐标\n      middle: 'none',\n      format: 'vol' // rate, price vol\n    }\n  },\n  lines: [{\n    className: ClDrawVLine,\n    extremum: { // 如何取极值\n      method: 'normal', // fixedLeft fixedRight 上下固定,此时需要取axisY.middle的定义\n      maxvalue: ['vol'], // 参与计算最大值的标签\n      minvalue: [0] // 参与计算最小值的标签\n    },\n    info: {\n      showSort: 'idx',\n      labelX: 'time',\n      labelY: 'vol',\n      color: 'vol'\n    }\n  }]\n}\n\nexport const CHART_NORMAL = {\n  title: {\n    display: 'text', // none 不显示 btn 按钮 text 文字\n    label: 'NORMAL'\n  },\n  axisX: {\n    lines: 0,\n    display: 'none',\n    type: 'normal', // 有 day1 day5 和 normal 三种模式\n    format: 'date' // date time datetime normal 显示的x轴信息方式\n  },\n  axisY: {\n    lines: 1,\n    left: {\n      display: 'both',\n      middle: 'none',\n      format: 'price'\n    },\n    right: {\n      display: 'both',\n      middle: 'none',\n      format: 'price'\n    }\n  },\n  lines: [{\n    className: ClDrawLine\n  }]\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport {\n  _drawRect,\n  _drawVline,\n  _drawHline,\n  _drawCircle,\n  _setLineWidth,\n  _drawTxt,\n  _fillRect,\n  _drawBegin,\n  _drawSignCircle,\n  _drawSignPlot,\n  _setTransColor,\n  _drawEnd\n} from '../util/cl.draw'\nimport {\n  initCommonInfo,\n  checkLayout\n} from '../chart/cl.chart.init'\nimport { CHART_LAYOUT } from '../cl.chart.def'\nimport { updateJsonOfDeep } from '../util/cl.tool'\n\nconst DEFAULT_BUTTON = {\n  shape: 'arc', // box range radio checkbox set(位置)\n  hotIdx: 0,\n  visible: true,\n  translucent: true, // 是否透明\n  status: 'enabled' // disable focused : 热点\n}\n\n// ▲▼※★☆○●◎☉√↑←→↓↖↗↘↙‰℃∧∨△□▽♂♀﹡\n/**\n * Class representing ClChartButton\n * @export\n * @class ClChartButton\n */\nexport default class ClChartButton {\n  /**\n\n   * Creates an instance of ClChartButton.\n   * @param {Object} father\n   */\n  constructor (father) {\n    initCommonInfo(this, father)\n  }\n  init (cfg, callback) {\n    this.callback = callback\n    this.rectMain = cfg.rectMain || {\n      left: 0,\n      top: 0,\n      width: 25,\n      height: 25\n    }\n    this.layout = updateJsonOfDeep(cfg.layout, CHART_LAYOUT)\n    this.config = updateJsonOfDeep(cfg.config, DEFAULT_BUTTON)\n\n    // If it is not below '+' '-' 'left' 'right', it means to directly display the string\n    this.info = cfg.info || [{\n      map: '+'\n    }]\n\n    // Make some checks on the configuration\n    this.checkConfig()\n  }\n  /**\n   * Check for conflicting configuration changes\n   * @memberof ClChartButton\n   */\n  checkConfig () {\n    checkLayout(this.layout)\n  }\n  setStatus (status) {\n    if (this.config.status !== status) {\n      this.config.status = status\n    }\n  }\n  /**\n   * handle click event\n   *\n   * @param {Object} event\n   * @memberof ClChartButton\n   */\n  onClick (event) {\n    if (!this.config.visible) return\n    // if (this.config.status === 'disabled') return\n    if (this.info.length > 1) {\n      this.config.hotIdx++\n      this.config.hotIdx %= this.info.length\n      this.onPaint()\n    }\n    if (this.config.hotIdx >= 0 && this.config.hotIdx < this.info.length) {\n      this.callback({\n        self: this,\n        info: this.info[this.config.hotIdx]\n      })\n    } else {\n      this.callback({\n        self: this\n      })\n    }\n    event.break = true\n  }\n  /**\n   * paint buttons\n   * @memberof ClChartButton\n   */\n  onPaint () {\n    if (!this.config.visible) return\n    _setLineWidth(this.context, this.scale)\n\n    let clr = this.color.button\n    if (this.config.status === 'disabled') clr = this.color.grid\n\n    _drawBegin(this.context, clr)\n    const center = {\n      xx: Math.floor(this.rectMain.width / 2),\n      yy: Math.floor(this.rectMain.height / 2),\n      offset: 4 * this.scale\n    }\n\n    const info = this.info[this.config.hotIdx]\n    switch (this.config.shape) {\n      case 'set':\n        if (this.config.status === 'focused') {\n          clr = this.color.red\n          if (this.config.translucent) clr = _setTransColor(clr, 0.95)\n          _drawSignPlot(this.context, this.rectMain.left + center.xx,\n            this.rectMain.top + center.xx, {\n              r: Math.round(this.layout.symbol.size / 2),\n              clr\n            }\n          )\n          center.yy = center.xx\n        } else {\n          clr = this.color.vol\n          if (this.config.translucent) clr = _setTransColor(clr, 0.85)\n          _drawSignCircle(this.context, this.rectMain.left + center.xx, this.rectMain.top + center.xx, {\n            r: Math.round(this.layout.symbol.size / 2),\n            clr\n          })\n        }\n        break\n      case 'arc':\n        _drawCircle(this.context, this.rectMain.left + center.xx, this.rectMain.top + center.xx, center.xx)\n        break\n      case 'box':\n        _fillRect(this.context, this.rectMain.left, this.rectMain.top, this.rectMain.width, this.rectMain.height, this.color.back)\n        _drawRect(this.context, this.rectMain.left, this.rectMain.top, this.rectMain.width, this.rectMain.height)\n        break\n      case 'range':\n        _drawCircle(this.context, this.rectMain.left + center.xx, this.rectMain.top + center.xx, center.xx)\n        break\n      case 'radio':\n        _drawCircle(this.context, this.rectMain.left + center.xx, this.rectMain.top + center.xx, center.xx)\n        break\n      case 'checkbox':\n        _drawCircle(this.context, this.rectMain.left + center.xx, this.rectMain.top + center.xx, center.xx)\n        break\n      default:\n    }\n    _drawEnd(this.context)\n    if (this.config.status === 'disabled') _drawBegin(this.context, this.color.grid)\n    else _drawBegin(this.context, this.color.button)\n    switch (info.map) {\n      case '+':\n        _drawVline(this.context, this.rectMain.left + center.xx, this.rectMain.top + center.offset,\n          this.rectMain.top + this.rectMain.height - center.offset)\n        _drawHline(this.context, this.rectMain.left + center.offset,\n          this.rectMain.left + this.rectMain.width - center.offset, this.rectMain.top + center.yy)\n        break\n      case '-':\n        _drawHline(this.context, this.rectMain.left + center.offset,\n          this.rectMain.left + this.rectMain.width - center.offset, this.rectMain.top + center.yy)\n        break\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        _drawTxt(this.context, this.rectMain.left + center.xx, this.rectMain.top + center.yy, info.map,\n          this.layout.title.font, this.layout.title.pixel, this.color.baktxt, {\n            x: 'center',\n            y: 'middle'\n          })\n        break\n      case '*':\n        _drawTxt(this.context, this.rectMain.left + center.xx, this.rectMain.top + center.yy - 2 * this.scale, '...',\n          this.layout.title.font, this.layout.title.pixel, this.color.baktxt, {\n            x: 'center',\n            y: 'middle'\n          })\n        break\n      case 'left':\n      case 'right':\n        break\n      default:\n        _drawTxt(this.context, this.rectMain.left + center.xx, this.rectMain.top + center.yy, info.map,\n          this.layout.title.font, this.layout.title.pixel, this.color.button, {\n            x: 'center',\n            y: 'middle'\n          })\n        break\n    }\n    _drawEnd(this.context)\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 可以拖动的滑动块定义\n// 支持锁定模式和自由模式，锁定模式滑动块固定大小，和传统滑动块类似，自由模式可左右选择范围，并返回值域，\n// 通常定义最大最小值，当前选定的最大最小值，并在鼠标放开后返回当前值域\n\nimport {\n  _getTxtWidth,\n  _setLineWidth,\n  _drawTxt,\n  _fillRect,\n  _drawRect,\n  _drawBegin,\n  _drawEnd\n} from '../util/cl.draw'\nimport {\n  changeCursorStyle,\n  initCommonInfo,\n  checkLayout\n} from '../chart/cl.chart.init'\nimport { CHART_LAYOUT } from '../cl.chart.def'\nimport {\n  updateJsonOfDeep,\n  offsetRect,\n  inRect\n} from '../util/cl.tool'\n\nconst DEFAULT_SCROLL = {\n  // display: 'none', // true\n  shape: 'fixed', // fixed 为固定宽度 free有边界\n  direct: 'horizontal', // ver 竖立 和横\n  range: 100,\n  select: { min: 40, max: 60 }, // min == beginIdx max = pageCount\n  status: 'enabled',\n  txt: {}\n}\n/**\n * Class representing ClChartScroll\n * @export\n * @class ClChartScroll\n */\nexport default class ClChartScroll {\n  /**\n\n   * Creates an instance of ClChartScroll.\n   * @param {Object} father order chart's parent context\n   */\n  constructor (father) {\n    initCommonInfo(this, father)\n  }\n  /**\n   * init\n   * @param {Object} cfg\n   * @param {any} callback initialized callback\n   * @memberof ClChartScroll\n   */\n  init (cfg, callback) {\n    this.callback = callback\n    this.rectMain = cfg.rectMain || { left: 0, top: 0, width: 200, height: 25 }\n    this.layout = updateJsonOfDeep(cfg.layout, CHART_LAYOUT)\n    this.config = updateJsonOfDeep(cfg.config, DEFAULT_SCROLL)\n\n    // 下面对配置做一定的校验\n    this.checkConfig()\n    // 再做一些初始化运算，下面的运算范围是初始化设置后基本不变的数据\n    this.setPublicRect()\n  }\n  /**\n   * check config\n   * @memberof ClChartScroll\n   */\n  checkConfig () {\n    checkLayout(this.layout)\n  }\n  /**\n   * Calculate all rectangular areas\n   * @memberof ClChartScroll\n   */\n  setPublicRect () { // 计算所有矩形区域\n    const count = this.config.range\n    let spaceX\n\n    this.rectChart = offsetRect(this.rectMain, this.layout.margin)\n\n    let start, stop, spaceY\n    if (this.config.direct === 'horizontal') {\n      spaceX = this.rectMain.width / (count - 1)\n      spaceY = this.rectMain.height - this.scale * 2\n      start = this.rectMain.left + spaceX * this.config.select.min\n      stop = this.rectMain.left + spaceX * this.config.select.max\n      if (this.config.shape === 'free') {\n        this.rectMin = {\n          left: start - this.layout.scroll.size / 2,\n          top: this.rectMain.top + this.scale,\n          width: this.layout.scroll.size,\n          height: spaceY\n        }\n        this.rectMax = {\n          left: stop - this.layout.scroll.size / 2,\n          top: this.rectMain.top + this.scale,\n          width: this.layout.scroll.size,\n          height: spaceY\n        }\n        this.rectMid = {\n          left: start + this.layout.scroll.size / 2,\n          top: this.rectMain.top + this.scale,\n          width: stop - start - this.layout.scroll.size,\n          height: spaceY\n        }\n      } else {\n        this.rectMid = {\n          left: start,\n          top: this.rectMain.top + this.scale,\n          width: stop - start,\n          height: spaceY\n        }\n      }\n    } else {\n      // spaceX = this.rectMain.height / (count - 1);\n      // spaceY = this.rectMain.width - this.scale * 2;\n      // start = this.rectMain.top + spaceX * this.config.select;\n      // stop = this.rectMain.top + spaceX * this.config.select;\n    }\n  }\n  /**\n   * paint scroll chart\n   * @memberof ClChartScroll\n   */\n  onPaint () {\n    _setLineWidth(this.context, this.scale)\n\n    this.drawClear()\n    this.drawGridline() // 先画线格\n    this.setPublicRect()\n    this.drawButton()\n  }\n  /**\n   * handle change info\n   * @param {Object} info\n   * @memberof ClChartScroll\n   */\n  onChange (info) {\n    this.config = updateJsonOfDeep(info, this.config)\n    if (this.config.select.max > this.config.range) this.config.select.max = this.config.range - 1\n    if (info.iscall) {\n      this.callback({ self: this, minIndex: this.config.select.min })\n    }\n  }\n  /**\n   * find mouse index\n   * @param {Number} xpos\n   * @return {Number} index\n   * @memberof ClChartScroll\n   */\n  findMouseIndex (xpos) {\n    const count = this.config.range\n    const spaceX = this.rectMain.width / (count - 1)\n    const idx = Math.round((xpos - this.rectMain.left) / spaceX)\n    return idx\n  }\n  /**\n   * check min\n   * @param {Number} min\n   * @return {Number}\n   * @memberof ClChartScroll\n   */\n  checkMin (min) {\n    if (min < 0) return 0\n    if (min > this.config.range - (this.config.select.max - this.config.select.min + 1)) {\n      return this.config.range - (this.config.select.max - this.config.select.min + 1)\n    }\n    return min\n  }\n  /**\n   * on init\n   * @memberof ClChartScroll\n   */\n  onInit () {\n    changeCursorStyle('default')\n    this.who = undefined\n  }\n  /**\n   * handle mouse out\n   * @memberof ClChartScroll\n   */\n  onMouseOut () {\n    changeCursorStyle('default')\n    this.who = undefined\n  }\n  /**\n   * hanlde mouse down\n   * @param {Object} event\n   * @memberof ClChartScroll\n   */\n  onMouseDown (event) {\n    const mousePos = event.mousePos\n    if (inRect(this.rectMin, mousePos)) {\n      this.who = 'min'\n    } else if (inRect(this.rectMax, mousePos)) {\n      this.who = 'max'\n    } else if (inRect(this.rectMid, mousePos)) {\n      this.who = 'mid'\n      this.index = this.findMouseIndex(mousePos.x)\n    } else {\n      this.who = undefined\n    }\n  }\n  /**\n   * handle mouse up\n   * @param {Object} event\n   * @memberof ClChartScroll\n   */\n  onMouseUp (event) {\n    if (this.config.shape !== 'free' && this.who === undefined) {\n      const mousePos = event.mousePos\n      const curIndex = this.findMouseIndex(mousePos.x)\n      let min = curIndex - Math.floor((this.config.select.max - this.config.select.min) / 2)\n      min = this.checkMin(min)\n      this.onChange({ min, iscall: true })\n    }\n    this.who = undefined\n  }\n  /**\n   * handle mouse move\n   * @param {Object} event\n   * @memberof ClChartScroll\n   */\n  onMouseMove (event) {\n    const mousePos = event.mousePos\n    if (inRect(this.rectMin, mousePos) || inRect(this.rectMax, mousePos)) {\n      changeCursorStyle('col-resize')\n    } else if (inRect(this.rectMid, mousePos)) {\n      changeCursorStyle('move')\n    } else {\n      changeCursorStyle('default')\n    }\n    if (this.who !== undefined) {\n      let min, max\n      const curIndex = this.findMouseIndex(mousePos.x)\n      if (this.config.shape === 'free') {\n        if (curIndex < this.config.select.max) {\n          if (this.who === 'max') {\n            max = curIndex\n          } else if (this.who === 'min') {\n            min = curIndex\n          }\n        } else if (curIndex >= this.config.select.max) {\n          if (this.who === 'min') {\n            min = this.config.select.max\n            max = curIndex\n            this.who = 'max'\n          } else if (this.who === 'max') {\n            max = curIndex\n          }\n        }\n        this.onChange({ min, max, iscall: true })\n      } else {\n        min = this.config.select.min + curIndex - this.index\n        this.index = curIndex\n        min = this.checkMin(min)\n        this.onChange({ min, iscall: true })\n      }\n    }\n  }\n  /**\n   * clear chart\n   * @memberof ClChartScroll\n   */\n  drawClear () {\n    _fillRect(this.context, this.rectMain.left, this.rectMain.top, this.rectMain.width, this.rectMain.height, this.color.back)\n  }\n  /**\n   * draw grid line\n   * @memberof ClChartScroll\n   */\n  drawGridline () {\n    _drawBegin(this.context, this.color.grid)\n    _drawRect(this.context, this.rectMain.left, this.rectMain.top, this.rectMain.width + this.scale / 2, this.rectMain.height)\n    _drawEnd(this.context)\n  }\n  drawButton () {\n    if (this.config.direct === 'horizontal') {\n      const spaceY = (this.rectChart.height - this.layout.scroll.height) / 2\n      if (this.config.txt.head !== undefined) {\n        _drawTxt(this.context, this.rectChart.left + this.scale, this.rectChart.top + spaceY,\n          this.config.txt.head,\n          this.layout.scroll.font, this.layout.scroll.pixel, this.color.axis)\n      }\n      if (this.config.txt.tail !== undefined) {\n        _drawTxt(this.context, this.rectChart.left + this.rectChart.width - this.scale,\n          this.rectChart.top + spaceY, this.config.txt.tail,\n          this.layout.scroll.font, this.layout.scroll.pixel, this.color.axis, { x: 'end' })\n      }\n\n      _drawBegin(this.context, this.color.colume)\n      _drawRect(this.context, this.rectMid.left, this.rectMid.top,\n        this.rectMid.width, this.rectMid.height)\n      _fillRect(this.context, this.rectMid.left, this.rectMid.top,\n        this.rectMid.width, this.rectMid.height, this.color.box)\n      if (this.config.shape === 'free') {\n        _fillRect(this.context, this.rectMin.left, this.rectMin.top,\n          this.rectMin.width, this.rectMin.height, this.color.colume)\n        _fillRect(this.context, this.rectMax.left, this.rectMax.top,\n          this.rectMax.width, this.rectMax.height, this.color.colume)\n      }\n      _drawEnd(this.context)\n      const len = _getTxtWidth(this.context, this.config.txt.left, this.layout.scroll.font, this.layout.scroll.pixel) + 2 * this.scale\n      if (this.config.txt.left !== undefined && this.rectMid.width > len) {\n        _drawTxt(this.context, this.rectMid.left + this.scale, this.rectMid.top + spaceY,\n          this.config.txt.left,\n          this.layout.scroll.font, this.layout.scroll.pixel, this.color.axis)\n      }\n      if (this.config.txt.right !== undefined && this.rectMid.width > 2 * len) {\n        _drawTxt(this.context, this.rectMid.left + this.rectMid.width - this.scale,\n          this.rectMid.top + spaceY, this.config.txt.right,\n          this.layout.scroll.font, this.layout.scroll.pixel, this.color.axis, { x: 'end' })\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 以下是 ClLineAxisX 的实体定义\n\nimport {\n  // _drawLineAlone,\n  _drawTxt\n} from '../util/cl.draw'\nimport getValue from '../data/cl.data.tools'\nimport {\n  getDate,\n  formatShowTime\n} from '../util/cl.tool'\nimport {\n  initCommonInfo\n} from '../chart/cl.chart.init'\n\n// 创建时必须带入父类，后面的运算定位都会基于父节点进行；\n// 这个类仅仅是画图, 因此需要把可以控制的rect传入进来\n/**\n * Class representing ClDrawAxisX\n * @export\n * @class ClDrawAxisX\n */\nexport default class ClDrawAxisX {\n  /**\n\n   * Creates an instance of ClDrawAxisX.\n   * @param {Object} father\n   * @param {Object} rectMain\n   */\n  constructor (father, rectMain) {\n    initCommonInfo(this, father)\n    this.rectMain = rectMain\n    this.linkInfo = father.father.linkInfo\n    this.axisX = father.config.axisX\n    this.maxmin = father.maxmin\n    this.text = father.layout.axisX\n  }\n  /**\n   * pain axisx\n   * @memberof ClDrawAxisX\n   */\n  onPaint () {\n    this.data = this.father.data\n    if (this.axisX.display === 'none') return\n\n    let xx, value, spaceX\n    xx = this.rectMain.left + this.text.spaceX\n\n    const yy = this.rectMain.top + this.rectMain.height / 2\n    if (this.axisX.display === 'block') {\n      let count = -1\n      let days = 0\n      const daymins = this.linkInfo.maxCount / (this.axisX.lines + 1)\n      spaceX = this.rectMain.width / (this.axisX.lines + 1)\n      for (let k = this.linkInfo.minIndex; k <= this.linkInfo.maxIndex; k++) {\n        const index = getValue(this.data, 'idx', k)\n        if (index < 0) continue\n        days = Math.floor(index / daymins)\n        if (days > count) {\n          count = days\n          xx = this.rectMain.left + spaceX / 2 + spaceX * count\n          value = getDate(getValue(this.data, 'time', k))\n          _drawTxt(this.context, xx, yy, value,\n            this.text.font, this.text.pixel, this.color.axis, { y: 'middle', x: 'center' })\n        }\n      }\n    } else {\n      if (this.axisX.format === 'tradetime') {\n        this.tradeTime = this.father.father.dataLayer.tradeTime\n        value = formatShowTime(this.data.key, 0, this.tradeTime[0].begin)\n        _drawTxt(this.context, xx, yy, value,\n          this.text.font, this.text.pixel, this.color.axis, {\n            y: 'middle'\n          })\n\n        xx = this.rectMain.left + this.rectMain.width - 3\n        value = formatShowTime(this.data.key, 0, this.tradeTime[this.tradeTime.length - 1].end)\n        _drawTxt(this.context, xx, yy, value,\n          this.text.font, this.text.pixel, this.color.axis, {\n            y: 'middle',\n            x: 'end'\n          })\n      } else {\n        // _drawLineAlone(this.context, this.rectMain.left, this.rectMain.top,\n        //   this.rectMain.left + this.rectMain.width, this.rectMain.top, this.color.red)\n        value = getValue(this.data, 'time', this.linkInfo.minIndex)\n        value = formatShowTime(this.data.key, value, this.maxmin.min)\n        _drawTxt(this.context, xx, yy, value,\n          this.text.font, this.text.pixel, this.color.axis, {\n            y: 'middle'\n          })\n\n        xx = this.rectMain.left + this.rectMain.width - 3\n        value = getValue(this.data, 'time', this.linkInfo.maxIndex)\n        value = formatShowTime(this.data.key, value, this.maxmin.max)\n        _drawTxt(this.context, xx, yy, value,\n          this.text.font, this.text.pixel, this.color.axis, {\n            y: 'middle',\n            x: 'end'\n          })\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 以下是 ClLineAxisY 的实体定义\n\nimport {\n  _drawTxt\n} from '../util/cl.draw'\nimport {\n  initCommonInfo\n} from '../chart/cl.chart.init'\nimport {\n  formatInfo\n} from '../util/cl.tool'\n\n// 创建时必须带入父类，后面的运算定位都会基于父节点进行；\n// 这个类仅仅是画图, 因此需要把可以控制的rect传入进来\n/**\n * Class representing ClDrawAxisY\n * @export\n * @class ClDrawAxisY\n */\nexport default class ClDrawAxisY {\n  /**\n\n   * Creates an instance of ClDrawAxisY.\n   * @param {Object} father\n   * @param {Object} rectMain\n   * @param {Object} align\n   */\n  constructor (father, rectMain, align) {\n    initCommonInfo(this, father)\n    this.rectMain = rectMain\n    this.linkInfo = father.father.linkInfo\n\n    this.static = father.static\n\n    this.align = align\n    this.axisY = father.config.axisY\n\n    this.maxmin = father.maxmin\n    this.text = father.layout.title\n  }\n  /**\n   * paint\n   * @memberof ClDrawAxisY\n   */\n  onPaint () {\n    if (this.axisY[this.align].display === 'none') return\n    if (this.linkInfo.hideInfo) return\n\n    let xx, yy\n    let value, clr\n\n    let posX\n    const offX = this.axisPlatform === 'phone' ? 2 * this.scale : -2 * this.scale\n\n    if (this.align === 'left') {\n      if (this.axisPlatform === 'phone') {\n        posX = 'start'\n        xx = this.rectMain.left + offX\n      } else {\n        posX = 'end'\n        xx = this.rectMain.left + this.rectMain.width + offX\n      }\n    } else {\n      if (this.axisPlatform === 'phone') {\n        posX = 'end'\n        xx = this.rectMain.left + this.rectMain.width - offX\n      } else {\n        posX = 'start'\n        xx = this.rectMain.left - offX\n      }\n    }\n    yy = this.rectMain.top + this.scale // 画最上面的\n\n    // 画不画最上面的坐标\n    if (this.axisY[this.align].display !== 'noupper') {\n      yy = this.rectMain.top + this.scale // 画最上面的\n      clr = this.axisY[this.align].middle !== 'before' ? this.color.axis : this.color.red\n      value = formatInfo(\n        this.maxmin.max,\n        this.axisY[this.align].format,\n        this.static.coinunit,\n        this.static.volzoom,\n        this.static.before)\n      _drawTxt(this.context, xx, yy, value,\n        this.text.font, this.text.pixel, clr,\n        { x: posX, y: 'top' })\n    }\n    // 画不画最下面的坐标\n    if (this.axisY[this.align].display !== 'nofoot') {\n      clr = this.axisY[this.align].middle !== 'before' ? this.color.axis : this.color.green\n      yy = this.rectMain.top + this.rectMain.height - this.scale\n      value = formatInfo(\n        this.maxmin.min,\n        this.axisY[this.align].format,\n        this.static.coinunit,\n        this.static.volzoom,\n        this.static.before)\n      _drawTxt(this.context, xx, yy, value,\n        this.text.font, this.text.pixel, clr,\n        { x: posX, y: 'bottom' })\n    }\n    // 画其他的坐标线\n    const offy = this.rectMain.height / (this.axisY.lines + 1)\n\n    for (let i = 0; i < this.axisY.lines; i++) {\n      value = this.maxmin.max - offy * (i + 1) / this.maxmin.unitY\n      yy = this.rectMain.top + Math.round((i + 1) * offy)\n      clr = this.color.axis\n      if (this.axisY[this.align].middle !== 'none') {\n        if ((i + 1) < Math.round(this.axisY.lines / 2)) clr = this.color.red\n        if ((i + 1) > Math.round(this.axisY.lines / 2)) clr = this.color.green\n        if ((i + 1) === Math.round(this.axisY.lines / 2)) {\n          value = this.axisY[this.align].middle === 'zero' ? 0 : this.static.before\n        }\n      }\n\n      value = formatInfo(\n        value,\n        this.axisY[this.align].format,\n        this.static.coinunit,\n        this.static.volzoom,\n        this.static.before)\n\n      _drawTxt(this.context, xx, yy, value,\n        this.text.font, this.text.pixel, clr,\n        { x: posX, y: 'middle' })\n    }\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 以下是 ClDrawCursor 的实体定义\n\nimport {\n  _getTxtWidth,\n  _drawTxtRect,\n  _clearRect,\n  _drawLineAlone\n} from '../util/cl.draw'\nimport {\n  initCommonInfo\n} from '../chart/cl.chart.init'\nimport {\n  inRangeX,\n  inRangeY,\n  formatShowTime,\n  formatInfo\n} from '../util/cl.tool'\n// 创建时必须带入父类，后面的运算定位都会基于父节点进行；\n// 这个类仅仅是画图, 因此需要把可以控制的rect传入进来\n/**\n * Class representing ClDrawCursor\n * @export\n * @class ClDrawCursor\n */\nexport default class ClDrawCursor {\n  /**\n\n   * Creates an instance of ClDrawCursor.\n   * @param {Object} father\n   * @param {Object} rectMain\n   * @param {Object} rectChart\n   */\n  constructor (father, rectMain, rectChart) {\n    initCommonInfo(this, father)\n    this.rectFather = father.rectMain\n    this.rectMain = rectMain // 画十字线和边界标签\n    this.rectChart = rectChart // 鼠标有效区域\n\n    this.linkInfo = father.father.linkInfo\n    this.static = father.static\n\n    this.axisXInfo = father.config.axisX\n    this.axisYInfo = father.config.axisY\n\n    this.maxmin = father.maxmin\n    this.axisX = father.layout.axisX\n\n    this.context = father.father.cursorCanvas.context\n  }\n  /**\n   * handle clear\n   * @memberof ClDrawCursor\n   */\n  onClear () {\n    _clearRect(this.context, this.rectFather.left, this.rectFather.top,\n      this.rectFather.left + this.rectFather.width,\n      this.rectFather.top + this.rectFather.height)\n  }\n  /**\n   * paint\n   * @param {Object} mousePos\n   * @param {Number} valueX\n   * @param {Number} valueY\n   * @memberof ClDrawCursor\n   */\n  onPaint (mousePos, valueX, valueY) {\n    if (typeof this.context._beforePaint === 'function') {\n      this.context._beforePaint()\n    }\n    if (inRangeX(this.rectChart, mousePos.x) === false) return\n    this.onClear()\n\n    let txt\n    let xx = mousePos.x\n    let yy = mousePos.y\n    const offX = this.axisPlatform === 'phone' ? 2 * this.scale : -2 * this.scale\n\n    // 如果鼠标在本图区域，就画横线信息\n    if (inRangeY(this.rectChart, mousePos.y)) {\n      if (valueY === undefined) {\n        valueY = this.maxmin.max - (mousePos.y - this.rectChart.top) / this.maxmin.unitY\n      } else {\n        yy = (this.maxmin.max - valueY) * this.maxmin.unitY + this.rectChart.top\n      }\n\n      _drawLineAlone(this.context, this.rectMain.left, yy, this.rectMain.left + this.rectMain.width, yy, this.color.grid)\n      let posX = this.axisPlatform === 'phone' ? 'start' : 'end'\n\n      if (this.axisYInfo.left.display !== 'none') {\n        txt = formatInfo(\n          valueY,\n          this.axisYInfo.left.format,\n          this.static.coinunit,\n          this.static.volzoom,\n          this.static.before)\n        xx = this.rectMain.left + offX\n        _drawTxtRect(this.context, xx, yy, txt, {\n          font: this.axisX.font,\n          pixel: this.axisX.pixel,\n          spaceX: this.axisX.spaceX,\n          clr: this.color.txt,\n          bakclr: this.color.grid,\n          x: posX,\n          y: 'middle'\n        })\n      }\n      if (this.axisYInfo.right.display !== 'none') {\n        txt = formatInfo(\n          valueY,\n          this.axisYInfo.right.format,\n          this.static.coinunit,\n          this.static.volzoom,\n          this.static.before)\n        posX = this.axisPlatform === 'phone' ? 'end' : 'start'\n        xx = this.rectMain.left + this.rectMain.width - offX\n        _drawTxtRect(this.context, xx, yy, txt, {\n          font: this.axisX.font,\n          pixel: this.axisX.pixel,\n          spaceX: this.axisX.spaceX,\n          clr: this.color.txt,\n          bakclr: this.color.grid,\n          x: posX,\n          y: 'middle'\n        })\n      }\n    }\n\n    _drawLineAlone(this.context, mousePos.x, this.rectMain.top, mousePos.x, this.rectMain.top + this.rectMain.height - 1, this.color.grid)\n    if (this.axisXInfo.display !== 'none') {\n      xx = mousePos.x\n      const th = Math.floor((this.axisX.height - this.axisX.pixel - this.scale) / 2)\n      yy = this.rectMain.top + this.rectMain.height + th\n      txt = formatShowTime(this.father.data.key, valueX)\n      const len = Math.round(_getTxtWidth(this.context, txt, this.axisX.font, this.axisX.pixel) / 2)\n      let posX = 'center'\n      if (xx - len < this.rectMain.left + offX) { xx = this.rectMain.left + offX; posX = 'start' }\n      if (xx + len > this.rectMain.left + this.rectMain.width - offX) {\n        xx = this.rectMain.left + this.rectMain.width - offX\n        posX = 'end'\n      }\n      _drawTxtRect(this.context, xx, yy, txt, {\n        font: this.axisX.font,\n        pixel: this.axisX.pixel,\n        spaceX: this.axisX.spaceX,\n        clr: this.color.txt,\n        bakclr: this.color.grid,\n        x: posX,\n        y: 'top'\n      })\n    }\n    if (typeof this.context._afterPaint === 'function') {\n      this.context._afterPaint()\n    }\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 以下是 ClLineKBar 的实体定义\n\nimport {\n  _drawBegin,\n  _drawEnd,\n  _drawHline,\n  _drawVline\n} from '../util/cl.draw'\nimport {\n  initCommonInfo\n} from '../chart/cl.chart.init'\n\n// 创建时必须带入父类，后面的运算定位都会基于父节点进行；\n// 这个类仅仅是画图, 因此需要把可以控制的rect传入进来\n/**\n * Class representing ClDrawGrid\n * @export\n * @class ClDrawGrid\n */\nexport default class ClDrawGrid {\n  /**\n\n   * Creates an instance of ClDrawGrid.\n   * @param {Object} father\n   * @param {Object} rectMain\n   */\n  constructor (father, rectMain) {\n    initCommonInfo(this, father)\n    this.rectMain = rectMain\n\n    this.axisX = father.config.axisX\n    this.axisY = father.config.axisY\n  }\n  /**\n   * paint\n   * @memberof ClDrawGrid\n   */\n  onPaint () {\n    _drawBegin(this.context, this.color.grid)\n    _drawHline(this.context, this.rectMain.left, this.rectMain.left + this.rectMain.width, this.rectMain.top)\n    if (this.axisY.lines > 0) {\n      const offy = this.rectMain.height / (this.axisY.lines + 1)\n      for (let i = 0; i < this.axisY.lines; i++) {\n        _drawHline(this.context, this.rectMain.left, this.rectMain.left + this.rectMain.width, this.rectMain.top + Math.round((i + 1) * offy))\n      }\n    }\n    if (this.axisX.display !== 'none') {\n      _drawHline(this.context, this.rectMain.left, this.rectMain.left + this.rectMain.width, this.rectMain.top + this.rectMain.height)\n    }\n    // 画纵坐标\n    if (this.axisX.lines > 0) {\n      const offx = this.rectMain.width / (this.axisX.lines + 1)\n      for (let i = 0; i < this.axisX.lines; i++) {\n        _drawVline(this.context, this.rectMain.left + Math.round((i + 1) * offx), this.rectMain.top, this.rectMain.top + this.rectMain.height)\n      }\n    }\n    if (this.axisPlatform !== 'phone') {\n      _drawVline(this.context, this.rectMain.left, this.rectMain.top, this.rectMain.top + this.rectMain.height)\n      _drawVline(this.context, this.rectMain.left + this.rectMain.width, this.rectMain.top, this.rectMain.top + this.rectMain.height)\n    }\n    _drawEnd(this.context)\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 以下是 ClLineKBar 的实体定义\n\nimport {\n  _fillRect,\n  _getTxtWidth,\n  _drawTxt\n} from '../util/cl.draw'\nimport {\n  initCommonInfo\n} from '../chart/cl.chart.init'\n\n// 创建时必须带入父类，后面的运算定位都会基于父节点进行；\n// 这个类仅仅是画图, 因此需要把可以控制的rect传入进来\n/**\n * Class representing ClDrawInfo\n * @export\n * @class ClDrawInfo\n */\nexport default class ClDrawInfo {\n  /**\n\n   * Creates an instance of ClDrawInfo.\n   * @param {Object} father\n   * @param {Object} rectMain\n   * @param {Object} rectMess\n   */\n  constructor (father, rectMain, rectMess) {\n    initCommonInfo(this, father)\n    this.rectMain = rectMain\n    this.rectMess = rectMess\n\n    this.linkInfo = father.father.linkInfo\n\n    this.title = father.layout.title\n    this.titleInfo = father.config.title\n  }\n  /**\n   * paint\n   * @param {Object} message\n   * @memberof ClDrawInfo\n   */\n  onPaint (message) {\n    if (this.titleInfo.display === 'none' || this.linkInfo.hideInfo) return\n\n    _fillRect(this.context, this.rectMain.left + this.scale, this.rectMain.top + this.scale,\n      this.rectMess.left + this.rectMess.width - 2 * this.scale,\n      this.rectMain.height - 2 * this.scale, this.color.back)\n\n    let clr = this.color.txt\n    const spaceY = Math.round((this.title.height - this.title.pixel) / 2) - this.scale\n    const yy = this.rectMess.top + spaceY\n\n    if (this.titleInfo.label !== undefined) {\n      _drawTxt(this.context, this.rectMain.left + this.scale, yy, this.titleInfo.label,\n        this.title.font, this.title.pixel, clr)\n    }\n    let xx = this.rectMess.left + this.scale\n    for (let i = 0; i < message.length; i++) {\n      clr = this.color.line[i]\n      if (message[i].txt !== undefined) {\n        _drawTxt(this.context, xx, yy, message[i].txt, this.title.font, this.title.pixel, clr)\n        xx += _getTxtWidth(this.context, message[i].txt, this.title.font, this.title.pixel) + this.title.spaceX\n      }\n      if (message[i].value === undefined) continue\n      _drawTxt(this.context, xx, yy, ' ' + message[i].value, this.title.font, this.title.pixel, clr)\n      xx += _getTxtWidth(this.context, ' ' + message[i].value, this.title.font, this.title.pixel) + this.title.spaceX\n    }\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 以下是ClChartLine的实体定义  --- 画线类\n\n// 实际上就是获取某种类型数据，然后横坐标 0 开始排序，永远是数值型，但显示出什么要到对应的数组中找\n// 纵坐标根据数据类型，计算最大最小值，然后根据画线类型画出数据线，所有的不同全部在ClChart中处理\n\nimport {\n  _fillRect,\n  _drawRect,\n  // _getImageData,\n  // _putImageData,\n  _setLineWidth,\n  _getTxtWidth,\n  _drawBegin,\n  _drawEnd\n} from '../util/cl.draw'\nimport {\n  findLabelToIndex,\n  setFixedLineFlags,\n  setMoveLineFlags\n} from './cl.chart.tools'\nimport {\n  initCommonInfo,\n  checkLayout\n} from '../chart/cl.chart.init'\nimport { CHART_LAYOUT } from '../cl.chart.def'\nimport {\n  updateJsonOfDeep,\n  copyJsonOfDeep,\n  offsetRect,\n  inArray,\n  isEmptyArray,\n  formatShowTime,\n  formatInfo,\n  inRangeX\n} from '../util/cl.tool'\n\nimport {\n  STOCK_TYPE_INDEX\n} from '../data/../cl.data.def'\nimport getValue, {\n  getSize,\n  fromIndexToTradeTime,\n  getMinuteCount\n} from '../data/cl.data.tools'\n\nimport ClChartButton from './cl.chart.button'\nimport ClChartScroll from './cl.chart.scroll'\nimport ClDrawAxisX from './cl.draw.axisX'\nimport ClDrawAxisY from './cl.draw.axisY'\nimport ClDrawCursor from './cl.draw.cursor'\nimport ClDrawGrid from './cl.draw.grid'\nimport ClDrawInfo from './cl.draw.info'\nimport ClDrawLine from './cl.draw.line'\nimport ClDrawVLine from './cl.draw.vline'\n\n/**\n * Class representing ClChartLine\n * @export\n * @class ClChartLine\n */\nexport default class ClChartLine {\n  /**\n\n   * Creates an instance of ClChartLine.\n   * @param {Object} father line chart's parent context\n   */\n  constructor (father) {\n    initCommonInfo(this, father)\n    this.linkInfo = father.linkInfo\n    this.static = this.father.dataLayer.static\n    this.data = {}\n    this.maxmin = {}\n  }\n  /**\n   * init line\n   * @param {Object} cfg line's config\n   * @param {any} callback initialized callback\n   * @memberof ClChartLine\n   */\n  init (cfg, callback) {\n    this.callback = callback\n    this.rectMain = cfg.rectMain || {\n      left: 0,\n      top: 0,\n      width: 400,\n      height: 200\n    }\n\n    this.layout = updateJsonOfDeep(cfg.layout, CHART_LAYOUT)\n    this.config = copyJsonOfDeep(cfg.config)\n    // 这里直接赋值是因为外部已经设置好了配置才会开始初始化\n    this.buttons = cfg.buttons || []\n    this.scroll = cfg.config.scroll || {\n      display: 'none'\n    }\n    this.childCharts = {}\n\n    // 下面对配置做一定的校验\n    this.checkConfig()\n    // 再做一些初始化运算，下面的运算范围是初始化设置后基本不变的数据\n    this.setPublicRect()\n    // 初始化子窗口\n    this.childDraws = {}\n    this.setChildDraw()\n    this.childLines = {}\n    this.setChildLines()\n    // 初始化按钮\n    this.setButtons()\n    // 初始化滚动条\n    this.setScroll()\n  }\n  /**\n   * check config\n   * @memberof ClChartLine\n   */\n  checkConfig () { // 检查配置有冲突的修正过来\n    checkLayout(this.layout)\n    if (this.config.zoomInfo !== undefined) {\n      this.setZoomInfo()\n    }\n  }\n  /**\n   * set public rect\n   * @memberof ClChartLine\n   */\n  setPublicRect () { // 计算所有矩形区域\n    // rectChart 画图区\n    // rectTitle rectMess\n    // rectAxisX\n    // rectScroll\n    // rectAxisYLeft rectAxisYRight\n    // rectGridLine 坐标线区域\n\n    this.rectChart = offsetRect(this.rectMain, this.layout.margin)\n    const axisInfo = {\n      width: this.layout.axisX.width\n    } //\n\n    // 计算title和mess矩形位置\n    this.rectTitle = {\n      left: this.rectMain.left,\n      top: this.rectMain.top,\n      width: 0,\n      height: 0\n    }\n    this.rectMess = {\n      left: this.rectMain.left,\n      top: this.rectMain.top,\n      width: 0,\n      height: 0\n    }\n    if (this.config.title.display !== 'none') {\n      this.rectTitle = {\n        left: this.rectChart.left,\n        top: this.rectChart.top,\n        width: axisInfo.width,\n        height: this.layout.title.height\n      }\n      this.rectMess = {\n        left: this.rectChart.left + axisInfo.width + this.scale,\n        top: this.rectChart.top,\n        width: this.rectChart.width - axisInfo.width * 2,\n        height: this.layout.title.height\n      }\n    }\n\n    // 计算rectAxisX和rectScroll矩形位置\n    axisInfo.left = this.rectChart.left\n    axisInfo.right = this.rectChart.left + this.rectChart.width\n    axisInfo.top = this.rectTitle.top + this.rectTitle.height\n    axisInfo.bottom = this.rectChart.top + this.rectChart.height\n\n    if (this.axisPlatform !== 'phone') {\n      if (this.config.axisY.left.display !== 'none') axisInfo.left += this.layout.axisX.width\n      if (this.config.axisY.right.display !== 'none') axisInfo.right -= this.layout.axisX.width\n    }\n    if (this.config.axisX.display !== 'none') {\n      axisInfo.bottom -= this.layout.axisX.height\n    }\n    if (this.scroll.display !== 'none') {\n      axisInfo.bottom -= this.layout.scroll.size\n    }\n    // 此时已经可以得出画坐标线的区域了\n    this.rectGridLine = {\n      left: axisInfo.left,\n      top: axisInfo.top,\n      width: axisInfo.right - axisInfo.left,\n      height: axisInfo.bottom - axisInfo.top\n    }\n    this.rectAxisYLeft = {\n      left: this.rectChart.left,\n      top: axisInfo.top,\n      width: axisInfo.width,\n      height: axisInfo.bottom - axisInfo.top\n    }\n    this.rectAxisYRight = {\n      left: this.rectChart.left + this.rectChart.width - axisInfo.width,\n      top: axisInfo.top,\n      width: axisInfo.width,\n      height: axisInfo.bottom - axisInfo.top\n    }\n\n    this.rectChart = offsetRect(this.rectGridLine, this.layout.offset)\n\n    this.rectAxisX = {\n      left: 0,\n      top: axisInfo.bottom,\n      width: 0,\n      height: 0\n    }\n    if (this.config.axisX.display !== 'none') {\n      this.rectAxisX = {\n        left: axisInfo.left,\n        top: axisInfo.bottom + this.scale,\n        width: axisInfo.right - axisInfo.left,\n        height: this.layout.axisX.height\n      }\n    }\n    if (this.scroll.display !== 'none') {\n      this.rectScroll = {\n        left: axisInfo.left,\n        top: this.rectAxisX.top + this.rectAxisX.height + this.scale,\n        width: axisInfo.right - axisInfo.left,\n        height: this.layout.scroll.size\n      }\n    }\n  }\n  /**\n   * get line by data key\n   * @param {String} line\n   * @return {Object} line instance\n   * @memberof ClChartLine\n   */\n  getLineDataKey (line) {\n    if (line.formula === undefined) return this.hotKey\n    return line.formula.key\n  }\n  /**\n   * set child line instance\n   * @memberof ClChartLine\n   */\n  setChildLines () {\n    // l_kbar，l_line，l_nowvol，l_vbar l_nowline\n    let line\n    let clr = 0\n    for (let i = 0; i < this.config.lines.length; i++) {\n      const ClassName = this.config.lines[i].className\n      line = new ClassName(this, this.rectChart)\n\n      this.childLines['NAME' + i] = line\n      line.name = 'NAME' + i\n      line.hotKey = this.getLineDataKey(this.config.lines[i])\n      if (inArray(ClassName, [ClDrawLine, ClDrawVLine])) {\n        line.info = {\n          labelX: 'idx',\n          labelY: 'value'\n        }\n        if (this.config.lines[i].info !== undefined) line.info = this.config.lines[i].info\n        if (this.config.axisX.type === 'day5') {\n          // 专用于5日线跨天的连线问题\n          line.info.skips = getMinuteCount(this.father.dataLayer.tradeTime)\n        }\n        line.info.colorIndex = clr\n        clr++\n      }\n    }\n  }\n  /**\n   * set child draw instance\n   * @memberof ClChartLine\n   */\n  setChildDraw () {\n    let draw\n    draw = new ClDrawCursor(this, this.rectGridLine, this.rectChart)\n    this.childDraws['CURSOR'] = draw\n\n    if (this.config.title.display !== 'none') {\n      draw = new ClDrawInfo(this, this.rectTitle, this.rectMess)\n      this.childDraws['TITLE'] = draw\n    }\n    if (this.config.axisY.left.display !== 'none') {\n      draw = new ClDrawAxisY(this, this.rectAxisYLeft, 'left')\n      this.childDraws['AXISY_LEFT'] = draw\n    }\n    if (this.config.axisY.right.display !== 'none') {\n      draw = new ClDrawAxisY(this, this.rectAxisYRight, 'right')\n      this.childDraws['AXISY_RIGHT'] = draw\n    }\n    if (this.config.axisX.display !== 'none') {\n      draw = new ClDrawAxisX(this, this.rectAxisX)\n      this.childDraws['AXISX'] = draw\n    }\n    draw = new ClDrawGrid(this, this.rectGridLine)\n    this.childDraws['GRID'] = draw\n    // 下面是line的定义\n  }\n  /**\n   * set scroll instance\n   * @memberof ClChartLine\n   */\n  setScroll () {\n    if (this.scroll.display === 'none') return\n    const chart = new ClChartScroll(this)\n    chart.name = 'HSCROLL'\n    // this.father.bindEvent(chart);\n    this.childCharts[chart.name] = chart\n\n    chart.init({\n      rectMain: this.rectScroll,\n      config: {\n        width: 8\n      }\n    },\n    result => {\n      const self = result.self.father\n      if (self.father.linkInfo.minIndex !== result.minIndex) {\n        self.father.linkInfo.minIndex = result.minIndex\n        self.father.onPaint()\n      }\n    })\n  }\n  /**\n   * create button\n   * @param {String} name button name\n   * @return {Object} button instacne\n   * @memberof ClChartLine\n   */\n  createButton (name) {\n    if (this.childCharts[name] !== undefined) return this.childCharts[name]\n    const chart = new ClChartButton(this)\n    chart.name = name\n    // this.father.bindEvent(chart);\n    this.childCharts[name] = chart\n    return chart\n  }\n  /**\n   * check has button by key\n   * @param {String} key button key\n   * @param {Array} buttons buttons array\n   * @return {Boolean}\n   * @memberof ClChartLine\n   */\n  hasButton (key, buttons) {\n    for (let k = 0; k < buttons.length; k++) {\n      if (key === buttons[k].key) return true\n    }\n    return false\n  }\n  /**\n   * set buttons\n   * @memberof ClChartLine\n   */\n  setButtons () {\n    let chart\n    let xx, yy\n    let ww = 25 * this.scale\n    if (this.hasButton('zoomin', this.buttons) || this.hasButton('zoomout', this.buttons)) {\n      chart = this.createButton('zoomin')\n      xx = Math.floor((this.rectChart.width - (ww + ww) * 2) / 4)\n      yy = this.rectChart.top + this.rectChart.height * 0.95 - ww\n      chart.init({\n        rectMain: {\n          left: xx,\n          top: yy,\n          width: ww,\n          height: ww\n        },\n        info: [{\n          map: '-'\n        }]\n      },\n      (/* result */) => {\n        // const self = result.self.father;\n        if (this.config.zoomInfo.index > 0) {\n          this.config.zoomInfo.index--\n          this.setZoomInfo()\n          this.father.onPaint()\n        }\n      })\n      chart = this.createButton('zoomout')\n      xx += 2 * ww\n      chart.init({\n        rectMain: {\n          left: xx,\n          top: yy,\n          width: ww,\n          height: ww\n        },\n        info: [{\n          map: '+'\n        }]\n      },\n      (/* result */) => {\n        // const self = result.self.father;\n        if (this.config.zoomInfo.index < this.config.zoomInfo.list.length - 1) {\n          this.config.zoomInfo.index++\n          this.setZoomInfo()\n          this.father.onPaint()\n        }\n      })\n    }\n    if (this.hasButton('exright', this.buttons)) {\n      chart = this.createButton('exright')\n      ww = _getTxtWidth(this.context, '前复权', this.layout.title.font, this.layout.title.pixel)\n      xx = this.rectMain.left + this.rectMain.width - ww - this.layout.title.spaceX\n      if (this.config.title.display !== 'none') {\n        yy = (this.rectMess.height - this.layout.title.pixel - 2 * this.layout.title.spaceY) / 2\n      } else {\n        yy = this.rectMain.top + this.layout.title.spaceY\n      }\n      chart.init({\n        rectMain: {\n          left: xx,\n          top: this.rectMess.top + yy,\n          width: ww + this.layout.title.spaceX,\n          height: this.layout.title.pixel + 2 * this.layout.title.spaceY\n        },\n        config: {\n          shape: 'box'\n        },\n        info: [{\n          map: '不除权',\n          value: 'no'\n        },\n        {\n          map: '前复权',\n          value: 'forword'\n        }\n          // , {\n          //   map: '后复权',\n          //   value: 'back'\n          // }\n        ]\n      },\n      result => {\n        // const self = result.self.father;\n        this.father.linkInfo.rightMode = result.info.value\n        this.father.fastDrawEnd()\n        this.father.onPaint()\n      })\n      chart.hotIdx = 0\n    }\n  }\n\n  // 下面开始是功能性函数 主要用于简化主函数的结构\n\n  addLine (line) {\n    // this.removeLine(line.name);\n    this.config.lines.push(line)\n  }\n  /**\n   * remove line by name\n   * @param {String} name line name\n   * @memberof ClChartLine\n   */\n  removeLine (name) {\n    for (let i = 0; i < this.config.lines.length; i++) {\n      if (this.config.lines[i].name === undefined) continue\n      if (this.config.lines[i].name === name) {\n        this.config.lines.splice(i, 1)\n      }\n    }\n  }\n  /**\n   * set zoom info\n   * @memberof ClChartLine\n   */\n  setZoomInfo () {\n    const info = this.config.zoomInfo\n    info.index = info.index > info.list.length - 1 ? info.list.length - 1 : info.index\n    info.index = info.index < 0 ? 0 : info.index\n    const value = info.list[info.index]\n\n    this.linkInfo.unitX = value * this.scale\n    if (this.linkInfo.unitX < this.scale) this.linkInfo.unitX = this.scale\n    this.linkInfo.spaceX = this.linkInfo.unitX / 4\n    if (this.linkInfo.spaceX < this.scale) this.linkInfo.spaceX = this.scale\n\n    if (this.childCharts['zoomin']) {\n      if (info.index === 0) this.childCharts['zoomin'].setStatus('disabled')\n      else this.childCharts['zoomin'].setStatus('enabled')\n    }\n    if (this.childCharts['zoomout']) {\n      if (info.index === info.list.length - 1) this.childCharts['zoomout'].setStatus('disabled')\n      else this.childCharts['zoomout'].setStatus('enabled')\n    }\n    this.father.fastDrawEnd()\n  }\n  /**\n   * set hot button\n   * @param {Object} chart chart instance\n   * @memberof ClChartLine\n   */\n  setHotButton (chart) {\n    for (const name in this.childCharts) {\n      if (this.childCharts[name] === chart) {\n        this.childCharts[name].focused = true\n      } else {\n        this.childCharts[name].focused = false\n      }\n    }\n  }\n  /**\n   * clear chart\n   * @memberof ClChartLine\n   */\n  drawClear () {\n    _fillRect(this.context, this.rectMain.left, this.rectMain.top, this.rectMain.width, this.rectMain.height, this.color.back)\n    _drawBegin(this.context, this.color.grid)\n    _drawRect(this.context, this.rectMain.left, this.rectMain.top, this.rectMain.width, this.rectMain.height)\n    _drawEnd(this.context)\n  }\n  /**\n   * draw child charts\n   * @memberof ClChartLine\n   */\n  drawChildCharts () {\n    let top\n    for (const name in this.childCharts) {\n      if (!this.childCharts[name].focused) {\n        this.childCharts[name].onPaint()\n      } else {\n        top = this.childCharts[name]\n      }\n    }\n    if (top) top.onPaint()\n  }\n  /**\n   * before location\n   * @memberof ClChartLine\n   */\n  beforeLocation () {\n    for (const name in this.childLines) {\n      if (this.childLines[name].beforeLocation) {\n        this.childLines[name].beforeLocation()\n      }\n    }\n  }\n  /**\n   * draw child lines\n   * @memberof ClChartLine\n   */\n  drawChildLines () {\n    for (const name in this.childLines) {\n      if (this.childLines[name].hotKey !== undefined) {\n        this.childLines[name].onPaint(this.childLines[name].hotKey)\n      } else {\n        this.childLines[name].onPaint(this.hotKey)\n      }\n    }\n  }\n  /**\n   * According to the record index to obtain a set of data according to the keys, the data is {MA:[]...} is mainly provided for mouse movement\n   * @param {Number} index\n   * @return {Array}\n   * @memberof ClChartLine\n   */\n  getMoveData (index) {\n    let lines = this.config.lines\n    const out = []\n    if (!Array.isArray(lines)) return out\n\n    let value, info\n    for (let k = 0; k < lines.length; k++) {\n      if (lines[k].info === undefined) continue\n      if (lines[k].info.labelY !== undefined) {\n        if (lines[k].formula === undefined) {\n          value = getValue(this.data, lines[k].info.labelY, index)\n        } else {\n          value = getValue(this.father.getData(lines[k].formula.key), lines[k].info.labelY,\n            index - this.linkInfo.minIndex)\n        }\n        info = formatInfo(value, lines[k].info.format, this.static.coinunit, this.static.volzoom)\n        out.push({\n          index: k,\n          txt: lines[k].info.txt,\n          value: info\n        })\n      } else {\n        out.push({\n          index: k,\n          txt: lines[k].info.txt\n        })\n      }\n    }\n    return out\n  }\n  /**\n   * draw title info\n   * @param {Number} index title index\n   * @memberof ClChartLine\n   */\n  drawTitleInfo (index) {\n    if (this.config.title.display === 'none') return\n    if (index === undefined || index < 0 || index > this.linkInfo.maxIndex) index = this.linkInfo.maxIndex\n    this.childDraws['TITLE'].onPaint(this.getMoveData(index))\n  }\n  /**\n   * draw child\n   * @param {String} name child draw's name\n   * @memberof ClChartLine\n   */\n  drawChildDraw (name) {\n    if (this.childDraws[name] !== undefined) {\n      if (name === 'TITLE') {\n        this.drawTitleInfo(this.linkInfo.moveIndex)\n      } else {\n        this.childDraws[name].onPaint()\n      }\n    }\n  }\n  /**\n   * draw all the layers contained in this area\n   * @memberof ClChartLine\n   */\n  onPaint () {\n    this.beforeLocation() // 数据定位前需要做的事情\n\n    this.data = this.father.getData(this.hotKey)\n    this.locationData()\n    this.father.readyData(this.data, this.config.lines)\n\n    _setLineWidth(this.context, this.scale)\n    this.drawClear() // 清理画图区\n\n    this.drawChildDraw('GRID') // 先画线格\n\n    // 为画图做准备工作\n    this.readyDraw()\n    this.drawChildDraw('AXISX')\n    this.drawChildDraw('AXISY_LEFT')\n    this.drawChildDraw('AXISY_RIGHT')\n\n    this.drawChildLines() // 画出所有的线\n\n    this.drawChildDraw('TITLE')\n    this.drawChildCharts()\n\n    // this.img = _getImageData(this.context, this.rectMain.left, this.rectMain.top, this.rectMain.width, this.rectMain.height)\n  }\n\n  // 画图前的准备工作\n\n  /**\n   * get middle\n   * @param {String} method\n   * @return {Number}\n   * @memberof ClChartLine\n   */\n  getMiddle (method) {\n    let middle = this.config.axisY.left.middle\n    if (method === 'fixedRight') middle = this.config.axisY.right.middle\n    if (middle === 'before') return this.static.before\n    if (middle === 'zero') return 0\n    return 0\n  }\n  /**\n   * calc max and min data\n   * @param {Array} data\n   * @param {Object} extremum\n   * @param {Number} start\n   * @param {Number} stop\n   * @return {Object}\n   * @memberof ClChartLine\n   */\n  calcMaxMin (data, extremum, start, stop) {\n    const mm = {\n      max: 0.0,\n      min: 0.0\n    }\n    if (extremum.method === 'fixedLeft' || extremum.method === 'fixedRight') {\n      const middle = this.getMiddle(extremum.method)\n      mm.min = middle * (1 - 0.01)\n      mm.max = middle * (1 + 0.01)\n    }\n    if (data === undefined || isEmptyArray(data.value)) return mm\n\n    let value\n    if (start === undefined) start = 0\n    if (stop === undefined) stop = data.value.length - 1\n\n    for (let k = start; k <= stop; k++) {\n      if (!isEmptyArray(extremum.maxvalue)) {\n        for (let m = 0; m < extremum.maxvalue.length; m++) {\n          if (typeof (extremum.maxvalue[m]) !== 'string') continue\n          value = getValue(data, extremum.maxvalue[m], k)\n          if (value > 0 && value > mm.max) {\n            mm.max = value\n          }\n        }\n      }\n      if (!isEmptyArray(extremum.minvalue)) {\n        for (let m = 0; m < extremum.minvalue.length; m++) {\n          if (typeof (extremum.minvalue[m]) !== 'string') continue\n          value = getValue(data, extremum.minvalue[m], k)\n          if (mm.min === 0.0) mm.min = value\n          if (value > 0 && value < mm.min) {\n            mm.min = value\n          }\n        }\n      }\n    }\n\n    if (!isEmptyArray(extremum.maxvalue)) {\n      for (let m = 0; m < extremum.maxvalue.length; m++) {\n        if (typeof (extremum.maxvalue[m]) === 'number') {\n          mm.max = extremum.maxvalue[m]\n          break\n        }\n      }\n    }\n    if (!isEmptyArray(extremum.minvalue)) {\n      for (let m = 0; m < extremum.minvalue.length; m++) {\n        if (typeof (extremum.minvalue[m]) === 'number') {\n          mm.min = extremum.minvalue[m]\n          break\n        }\n      }\n    }\n\n    if (extremum.method === 'fixedLeft' || extremum.method === 'fixedRight') {\n      const middle = this.getMiddle(extremum.method)\n      if (mm.max === mm.min) {\n        if (mm.max > middle) mm.min = middle\n        if (mm.min < middle) mm.max = middle\n      }\n      const maxrate = Math.abs(mm.max - middle) / middle\n      const minrate = Math.abs(middle - mm.min) / middle\n      if (maxrate < 0.01 && minrate < 0.01 &&\n        this.static.stktype !== STOCK_TYPE_INDEX) {\n        mm.min = middle * (1 - 0.01)\n        mm.max = middle * (1 + 0.01)\n      } else {\n        if (maxrate > minrate) {\n          // mm.min = middle / (1 + maxrate)\n          mm.min = middle * (1 - maxrate)\n        } else {\n          mm.max = middle * (1 + minrate)\n        }\n      }\n      if (mm.min < 0) mm.min = 0\n    }\n\n    return mm\n  }\n  /**\n   * ready for draw scroll\n   * @memberof ClChartLine\n   */\n  readyScroll () {\n    if (this.scroll.display === 'none') return\n    if (this.childCharts['HSCROLL'] !== undefined) {\n      let left = getValue(this.data, 'time', this.linkInfo.minIndex)\n      left = formatShowTime(this.data.key, left, this.father.dataLayer.tradeTime[0].begin)\n      let right = getValue(this.data, 'time', this.linkInfo.maxIndex)\n      right = formatShowTime(this.data.key, right,\n        this.father.dataLayer.tradeTime[this.father.dataLayer.tradeTime.length - 1].end)\n      let head = getValue(this.data, 'time', 0)\n      head = formatShowTime(this.data.key, head, this.father.dataLayer.tradeTime[0].begin)\n      let tail = getValue(this.data, 'time', this.data.value.length - 1)\n      tail = formatShowTime(this.data.key, tail,\n        this.father.dataLayer.tradeTime[this.father.dataLayer.tradeTime.length - 1].end)\n\n      this.childCharts['HSCROLL'].onChange({\n        head,\n        tail,\n        left,\n        right,\n        min: this.linkInfo.minIndex,\n        max: this.linkInfo.maxIndex,\n        range: this.data.value.length\n      })\n    }\n  }\n  /**\n   * get data range\n   * @param {Array} data\n   * @return {Object}\n   * @memberof ClChartLine\n   */\n  getDataRange (data) {\n    const out = {\n      minIndex: -1,\n      maxIndex: -1\n    }\n    if (isEmptyArray(data.value) || isEmptyArray(this.data.value)) return out\n    const start = getValue(this.data, 'time', this.linkInfo.minIndex)\n    const stop = getValue(this.data, 'time', this.linkInfo.maxIndex)\n    for (let k = 0; k <= data.value.length - 1; k++) {\n      const tt = getValue(data, 'time', k)\n      if (tt >= start) {\n        out.minIndex = k\n        break\n      }\n    }\n    for (let k = data.value.length - 1; k >= 0; k--) {\n      const tt = getValue(data, 'time', k)\n      if (tt <= stop) {\n        out.maxIndex = k\n        break\n      }\n    }\n    return out\n  }\n  /**\n   * location data\n   * @memberof ClChartLine\n   */\n  locationData () {\n    if (this.data === undefined) return\n    const size = getSize(this.data)\n    if (this.config.axisX.type === 'day1') {\n      setFixedLineFlags(\n        this.linkInfo, {\n          width: this.rectChart.width,\n          size,\n          scale: this.scale,\n          maxCount: getMinuteCount(this.father.dataLayer.tradeTime)\n        }\n      )\n    } else if (this.config.axisX.type === 'day5') {\n      setFixedLineFlags(\n        this.linkInfo, {\n          width: this.rectChart.width,\n          size,\n          scale: this.scale,\n          maxCount: 5 * getMinuteCount(this.father.dataLayer.tradeTime)\n        }\n      )\n    } else {\n      setMoveLineFlags(\n        this.linkInfo, {\n          width: this.rectChart.width,\n          scale: this.scale,\n          size\n        }\n      )\n    }\n  }\n  /**\n   * set ready for draw\n   * @memberof ClChartLine\n   */\n  readyDraw () { // 计算最大最小值等\n    // 画滚动块\n    this.readyScroll()\n\n    // 求最大最小值\n    let mm, maxmin\n    // const force = true;   // 由于定义了没有在后面使用，因此注释掉\n    for (let i = 0; i < this.config.lines.length; i++) {\n      if (this.config.lines[i].extremum === undefined) continue\n      if (isEmptyArray(this.config.lines[i].extremum.maxvalue) &&\n        isEmptyArray(this.config.lines[i].extremum.minvalue)) continue\n      // 只对第一个线和有需要的线计算最大最小值\n      // const ds = this.getLineDS(this.config.lines[i]);\n      const formula = this.config.lines[i].formula\n      if (formula !== undefined) {\n        const newdata = this.father.getData(formula.key)\n        const range = this.getDataRange(newdata)\n        mm = this.calcMaxMin(newdata, this.config.lines[i].extremum,\n          range.minIndex, range.maxIndex)\n      } else {\n        mm = this.calcMaxMin(this.data, this.config.lines[i].extremum,\n          this.linkInfo.minIndex, this.linkInfo.maxIndex)\n      }\n      if (maxmin === undefined) maxmin = mm\n      else {\n        maxmin.max = maxmin.max > mm.max ? maxmin.max : mm.max\n        maxmin.min = maxmin.min < mm.min ? maxmin.min : mm.min\n      }\n    } // for\n    this.maxmin.max = maxmin.max\n    this.maxmin.min = maxmin.min\n    this.maxmin.unitY = (this.rectChart.height - 2) / (this.maxmin.max - this.maxmin.min) // 一个单位价位多少像素\n  }\n\n  /**\n   * handle click event\n   * @param {Object} event\n   * @memberof ClChartLine\n   */\n  onClick (event) {\n    if (this.axisPlatform !== 'phone1') {\n      this.linkInfo.showCursorLine = !this.linkInfo.showCursorLine\n      if (this.linkInfo.showCursorLine) {\n        this.father.eventLayer.boardEvent(this.father, 'onMouseMove', event)\n      } else {\n        event.reDraw = true // 需要重画\n        this.father.eventLayer.boardEvent(this.father, 'onMouseOut', event)\n      }\n    }\n  }\n  /**\n   * handle long press\n   * @param {Object} event\n   * @memberof ClChartLine\n   */\n  onLongPress (event) {\n    this.linkInfo.showCursorLine = true\n    this.father.eventLayer.boardEvent(this.father, 'onMouseMove', event)\n  }\n  /**\n   * handle pinch\n   * @param {Object} event\n   * @memberof ClChartLine\n   */\n  onPinch (event) {\n    if (!this.config.zoomInfo) {\n      return\n    }\n    if (event.scale > 0) {\n      this.config.zoomInfo.index++\n    } else {\n      this.config.zoomInfo.index--\n    }\n    if (this.config.zoomInfo.index < 0) {\n      this.config.zoomInfo.index = 0\n      return\n    }\n    // this.setZoomInfo(Math.pow(2, this.config.zoomInfo.index) + 1)\n    this.setZoomInfo(this.config.zoomInfo.index * 2 + 1)\n    this.father.onPaint()\n  }\n  /**\n   * handle mouse out\n   * @param {Object} event\n   * @memberof ClChartLine\n   */\n  onMouseOut (event) {\n    if (this.linkInfo.showCursorLine || event.reDraw) {\n      this.linkInfo.moveIndex = this.linkInfo.maxIndex\n      this.drawTitleInfo(this.linkInfo.moveIndex)\n      // this.father.onPaint(this)\n    }\n    this.childDraws['CURSOR'].onClear()\n  }\n  /**\n   * handle mouse wheel\n   * @param {Object} event\n   * @memberof ClChartLine\n   */\n  onMouseWheel (event) {\n    if (this.config.zoomInfo === undefined) return\n\n    let step = Math.floor(event.deltaY / 10)\n    if (step === 0) step = event.deltaY > 0 ? 1 : -1\n    let newIndex\n    if (step > 0) newIndex = this.config.zoomInfo.index - 1\n    else newIndex = this.config.zoomInfo.index + 1\n    if (newIndex >= 0 && newIndex <= this.config.zoomInfo.list.length - 1) {\n      this.config.zoomInfo.index = newIndex\n      this.setZoomInfo()\n      this.father.onPaint()\n    }\n  }\n  /**\n   * handle key down\n   * @param {Object} event\n   * @memberof ClChartLine\n   */\n  onKeyDown (event) {\n    switch (event.keyCode) {\n      case 38: // up\n        break\n      case 40: // down\n        break\n      case 37: // left\n        break\n      case 39: // right\n        break\n    }\n  }\n  /**\n   * handle mouse move\n   * @param {Object} event\n   * @memberof ClChartLine\n   */\n  onMouseMove (event) {\n    if (this.linkInfo.hideInfo) return\n    if (!this.linkInfo.showCursorLine) return\n    // this.draw_clear();\n    // 找到X坐标对应的数据索引\n    const mousePos = event.mousePos\n    // if (this.img !== undefined) {\n    //   _putImageData(this.context, this.img, this.rectMain.left, this.rectMain.top)\n    // }\n\n    const mouseIndex = this.getMouseMoveData(mousePos.x)\n    let idx, valueY\n    let valueX = mouseIndex\n    if (mouseIndex > 0) {\n      if (this.config.axisX.type === 'day1' || this.config.axisX.type === 'day5') {\n        valueX = valueX % 240\n        valueX = fromIndexToTradeTime(valueX, this.father.dataLayer.tradeTime, this.father.dataLayer.tradeDate)\n        idx = findLabelToIndex(this.data, mouseIndex, 'idx')\n      } else {\n        valueX = getValue(this.data, 'time', mouseIndex)\n        idx = mouseIndex\n      }\n      if (inRangeX(this.rectChart, mousePos.x)) {\n        this.drawTitleInfo(idx)\n      }\n      if (this.linkInfo.moveIndex !== mouseIndex) {\n        this.linkInfo.moveIndex = mouseIndex\n        this.callback({\n          event: 'mousemove',\n          before: mouseIndex > 0 ? getValue(this.data, 'close', mouseIndex - 1) : getValue(this.data, 'open', 0),\n          data: this.data.value[mouseIndex]\n        })\n      }\n    }\n    this.childDraws['CURSOR'].onPaint(mousePos, valueX, valueY)\n  }\n  /**\n   * get mouse move data\n   * @param {Number} xpos\n   * @return {Number}\n   * @memberof ClChartLine\n   */\n  getMouseMoveData (xpos) {\n    const idx = Math.round((xpos - this.rectChart.left) / (this.linkInfo.unitX + this.linkInfo.spaceX) - 0.5)\n    if (this.config.axisX.type === 'day1') {\n      return idx\n    } else if (this.config.axisX.type === 'day5') {\n      return idx\n    } else {\n      return this.linkInfo.minIndex + idx\n    }\n  }\n\n  // /// ClChart end.\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n//   画买卖盘\n\n// 画买卖盘和Tick\n\nimport {\n  _fillRect,\n  _drawRect,\n  _drawHline,\n  _setLineWidth,\n  _drawTxt,\n  _getTxtWidth,\n  _drawBegin,\n  _drawEnd\n} from '../util/cl.draw'\nimport {\n  fromTTimeToStr,\n  formatVolume,\n  formatPrice,\n  updateJsonOfDeep,\n  offsetRect\n} from '../util/cl.tool'\nimport {\n  initCommonInfo,\n  checkLayout\n} from '../chart/cl.chart.init'\nimport {\n  CHART_LAYOUT,\n  CHART_ORDER\n} from '../cl.chart.def'\nimport getValue from '../data/cl.data.tools'\nimport {\n  FIELD_NOW,\n  FIELD_NOW_IDX,\n  FIELD_TICK\n} from '../data/../cl.data.def'\n\n/**\n * Class representing ClChartOrder\n * @export\n * @class ClChartOrder\n */\nexport default class ClChartOrder {\n  /**\n\n   * Creates an instance of ClChartOrder.\n   * @param {Object} father order chart's parent context\n   */\n  constructor (father) {\n    initCommonInfo(this, father)\n    this.linkInfo = father.linkInfo\n    this.static = this.father.dataLayer.static\n  }\n  /**\n   * init order chart\n   * @param {Object} cfg\n   * @memberof ClChartOrder\n   */\n  init (cfg) {\n    this.rectMain = cfg.rectMain || { left: 0, top: 0, width: 200, height: 300 }\n    this.layout = updateJsonOfDeep(cfg.layout, CHART_LAYOUT)\n\n    this.config = updateJsonOfDeep(cfg.config, CHART_ORDER)\n\n    this.style = cfg.config.style || 'normal'\n    // 下面对配置做一定的校验\n    this.checkConfig()\n    // 再做一些初始化运算，下面的运算范围是初始化设置后基本不变的数据\n    this.setPublicRect()\n  }\n  /**\n   * check config\n   * @memberof ClChartOrder\n   */\n  checkConfig () { // 检查配置有冲突的修正过来\n    checkLayout(this.layout)\n    this.txtLen = _getTxtWidth(this.context, '涨', this.layout.digit.font, this.layout.digit.pixel)\n    this.timeLen = _getTxtWidth(this.context, '15:30', this.layout.digit.font, this.layout.digit.pixel)\n    this.volLen = _getTxtWidth(this.context, '888888', this.layout.digit.font, this.layout.digit.pixel)\n    this.closeLen = _getTxtWidth(this.context, '888.88', this.layout.digit.font, this.layout.digit.pixel)\n  }\n  /**\n   * Calculate all rectangular areas\n   * @memberof ClChartOrder\n   */\n  setPublicRect () {\n    this.rectChart = offsetRect(this.rectMain, this.layout.margin)\n  }\n  /**\n   * handle click event\n   * @memberof ClChartOrder\n   */\n  onClick (/* e */) {\n    if (this.isIndex) return // 如果是指数就啥也不干\n    if (this.style === 'normal') {\n      this.style = 'tiny'\n    } else {\n      this.style = 'normal'\n    }\n    this.father.onPaint(this)\n  }\n  /**\n   * paint order chart\n   * @memberof ClChartOrder\n   */\n  onPaint () {\n    this.codeInfo = this.father.getData('INFO')\n    this.orderData = this.father.getData('NOW')\n    this.tickData = this.father.getData('TICK')\n    if (this.orderData === undefined || this.tickData === undefined) return\n    this.orderData.coinunit = this.static.coinunit\n    this.tickData.coinunit = this.static.coinunit\n    this.isIndex = getValue(this.codeInfo, 'type') === 0\n\n    _setLineWidth(this.context, this.scale)\n    this.drawClear() // 清理画图区\n    this.drawReady() // 数据准备\n\n    if (this.isIndex) {\n      this.drawIndex()\n    } else {\n      this.drawOrder()\n    }\n    this.drawTick()\n  }\n  /**\n   * clear chart\n   * @memberof ClChartOrder\n   */\n  drawClear () {\n    _fillRect(this.context, this.rectMain.left, this.rectMain.top, this.rectMain.width, this.rectMain.height, this.color.back)\n  }\n  /**\n   * set ready for draw\n   * @memberof ClChartOrder\n   */\n  drawReady () {\n    if (this.tickData === undefined) {\n      this.tickData = {\n        key: 'TICK',\n        fields: FIELD_TICK,\n        value: []\n      }\n    }\n    if (this.orderData === undefined) {\n      this.orderData = {\n        key: 'NOW',\n        fields: FIELD_NOW,\n        value: []\n      }\n    }\n    let yy\n    if (this.style === 'normal') {\n      yy = this.rectChart.top + (this.layout.digit.height + this.layout.digit.spaceX) * 10\n    } else {\n      yy = this.rectChart.top + (this.layout.digit.height + this.layout.digit.spaceX) * 2\n    }\n    if (this.isIndex) {\n      yy = this.rectChart.top + (this.layout.digit.height + this.layout.digit.spaceX) * 4\n      this.rectOrder = {\n        left: this.rectChart.left,\n        top: this.rectChart.top,\n        width: this.rectChart.width,\n        height: yy\n      }\n    } else {\n      this.rectOrder = {\n        left: this.rectChart.left,\n        top: this.rectChart.top,\n        width: this.rectChart.width,\n        height: yy\n      }\n    }\n    if (this.config.title.display !== 'none') {\n      this.rectTitle = {\n        left: this.rectChart.left,\n        top: yy,\n        width: this.rectChart.width,\n        height: this.layout.title.height\n      }\n    } else {\n      this.rectTitle = {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      }\n    }\n    yy += this.rectTitle.height\n    this.rectTick = {\n      left: this.rectChart.left,\n      top: yy,\n      width: this.rectChart.width,\n      height: this.rectChart.height - yy - this.layout.digit.height / 2\n    }\n  }\n  /**\n   * get color by close and before data\n   * @param {Number} close\n   * @param {Number} before\n   * @return {String} color\n   * @memberof ClChartOrder\n   */\n  getColor (close, before) {\n    if (close > before) {\n      return this.color.red\n    } else if (close < before) {\n      return this.color.green\n    } else {\n      return this.color.white\n    }\n  }\n  /**\n   * draw index\n   * @memberof ClChartOrder\n   */\n  drawIndex () {\n    _drawBegin(this.context, this.color.grid)\n    _drawRect(this.context, this.rectMain.left, this.rectMain.top, this.rectMain.width, this.rectMain.height)\n\n    const offy = this.rectOrder.height / 3\n    const offx = this.rectOrder.width / 3\n    let xx, yy, len\n    let value\n\n    yy = this.rectOrder.top + Math.floor((offy - this.layout.digit.height) / 2) // 画最上面的\n\n    xx = this.rectOrder.left + (offx - this.txtLen) / 2\n    _drawTxt(this.context, xx, yy, '涨', this.layout.digit.font, this.layout.digit.pixel, this.color.txt)\n    xx = this.rectOrder.left + offx + (offx - this.txtLen) / 2\n    _drawTxt(this.context, xx, yy, '跌', this.layout.digit.font, this.layout.digit.pixel, this.color.txt)\n    xx = this.rectOrder.left + 2 * offx + (offx - this.txtLen) / 2\n    _drawTxt(this.context, xx, yy, '平', this.layout.digit.font, this.layout.digit.pixel, this.color.txt)\n\n    const inow = {\n      key: 'NOW',\n      fields: FIELD_NOW_IDX,\n      value: this.orderData.value\n    }\n    yy = this.rectOrder.top + offy + Math.floor((offy - this.layout.digit.height) / 2) // 画最上面的\n    value = formatVolume(getValue(inow, 'ups'), 1)\n    len = _getTxtWidth(this.context, value, this.layout.digit.font, this.layout.digit.pixel)\n    xx = this.rectOrder.left + (offx - len) / 2\n    _drawTxt(this.context, xx, yy, value, this.layout.digit.font, this.layout.digit.pixel, this.color.txt)\n\n    value = formatVolume(getValue(inow, 'downs'), 1)\n    len = _getTxtWidth(this.context, value, this.layout.digit.font, this.layout.digit.pixel)\n    xx = this.rectOrder.left + offx + (offx - len) / 2\n    _drawTxt(this.context, xx, yy, value, this.layout.digit.font, this.layout.digit.pixel, this.color.txt)\n\n    value = formatVolume(getValue(inow, 'mids'), 1)\n    len = _getTxtWidth(this.context, value, this.layout.digit.font, this.layout.digit.pixel)\n    xx = this.rectOrder.left + 2 * offx + (offx - len) / 2\n    _drawTxt(this.context, xx, yy, value, this.layout.digit.font, this.layout.digit.pixel, this.color.txt)\n\n    yy = this.rectOrder.top + 2 * offy + Math.floor((offy - this.layout.digit.height) / 2)\n\n    value = formatVolume(getValue(inow, 'upvol'), 1)\n    len = _getTxtWidth(this.context, value, this.layout.digit.font, this.layout.digit.pixel)\n    xx = this.rectOrder.left + (offx - len) / 2\n    _drawTxt(this.context, xx, yy, value, this.layout.digit.font, this.layout.digit.pixel, this.color.txt)\n\n    value = formatVolume(getValue(inow, 'downvol'), 1)\n    len = _getTxtWidth(this.context, value, this.layout.digit.font, this.layout.digit.pixel)\n    xx = this.rectOrder.left + offx + (offx - len) / 2\n    _drawTxt(this.context, xx, yy, value, this.layout.digit.font, this.layout.digit.pixel, this.color.txt)\n\n    if (this.config.title.display !== 'none') {\n      _drawHline(this.context, this.rectTitle.left, this.rectTitle.left + this.rectTitle.width, this.rectTitle.top)\n      _drawHline(this.context, this.rectTitle.left, this.rectTitle.left + this.rectTitle.width, this.rectTitle.top + this.rectTitle.height)\n      const ticklen = _getTxtWidth(this.context, '分时成交', this.layout.title.font, this.layout.digit.pixel)\n      xx = this.rectTitle.left + (this.rectTitle.width - ticklen) / 2\n      yy = this.rectTitle.top + 3 * this.scale\n      _drawTxt(this.context, xx, yy, '分时成交',\n        this.layout.digit.font, this.layout.digit.pixel, this.color.txt)\n    }\n    _drawEnd(this.context)\n  }\n  /**\n   * draw order\n   * @memberof ClChartOrder\n   */\n  drawOrder () {\n    const xpos = this.drawGridLine() // 先画线格\n    if (this.orderData === undefined || this.orderData.value.length < 1) {\n      return\n    }\n    const offx = (this.rectOrder.width - xpos - 2 * this.layout.digit.spaceX - this.closeLen - this.volLen) / 2\n\n    let mmpCount = 1\n    if (this.style === 'normal') {\n      mmpCount = 5\n    }\n    const offy = this.rectOrder.height / (mmpCount * 2)\n\n    let xx, yy\n    let value, clr\n\n    yy = this.rectOrder.top + Math.floor((offy - this.layout.digit.height) / 2) // 画最上面的\n    for (let idx = mmpCount; idx >= 1; idx--) {\n      xx = this.rectOrder.left + xpos + offx + this.closeLen\n      if (!this.linkInfo.hideInfo) {\n        value = getValue(this.orderData, 'sell' + idx)\n        clr = this.getColor(value, this.static.before)\n        _drawTxt(this.context, xx, yy, formatPrice(value, this.static.coinunit),\n          this.layout.digit.font, this.layout.digit.pixel, clr, {\n            x: 'end'\n          })\n      }\n\n      xx += offx + this.volLen + this.layout.digit.spaceX\n      value = getValue(this.orderData, 'sellvol' + idx)\n      clr = this.color.vol\n      _drawTxt(this.context, xx, yy, formatVolume(value, this.static.volzoom),\n        this.layout.digit.font, this.layout.digit.pixel, clr, {\n          x: 'end'\n        })\n\n      yy += offy\n    }\n    for (let idx = 1; idx <= mmpCount; idx++) {\n      xx = this.rectOrder.left + xpos + offx + this.closeLen\n      if (!this.linkInfo.hideInfo) {\n        value = getValue(this.orderData, 'buy' + idx)\n        clr = this.getColor(value, this.static.before)\n        _drawTxt(this.context, xx, yy, formatPrice(value, this.static.coinunit),\n          this.layout.digit.font, this.layout.digit.pixel, clr, {\n            x: 'end'\n          })\n      }\n      xx += offx + this.volLen + this.layout.digit.spaceX\n      value = getValue(this.orderData, 'buyvol' + idx)\n      clr = this.color.vol\n      _drawTxt(this.context, xx, yy, formatVolume(value, this.static.volzoom),\n        this.layout.digit.font, this.layout.digit.pixel, clr, {\n          x: 'end'\n        })\n\n      yy += offy\n    }\n  }\n  /**\n   * draw tick\n   * @memberof ClChartOrder\n   */\n  drawTick () {\n    if (this.tickData === undefined || this.tickData.value.length < 1) return\n    const maxlines = Math.floor(this.rectTick.height / this.layout.digit.height) - 1 // 屏幕最大能显示多少条记录\n    const recs = this.tickData.value.length\n    const beginIndex = recs > maxlines ? recs - maxlines : 0\n    const offy = this.rectTick.height / maxlines\n\n    let xx, yy\n    let value, clr\n    let offx = (this.rectTick.width - 4 * this.layout.digit.spaceX - this.timeLen - this.closeLen - this.volLen) / 2\n    if (this.isIndex) offx = (this.rectTick.width - 3 * this.layout.digit.spaceX - this.timeLen - this.closeLen) / 2\n\n    yy = this.rectTick.top + 2 + Math.floor((offy - this.layout.digit.pixel) / 2) // 画最上面的\n    for (let idx = recs - 1; idx >= beginIndex; idx--) {\n      // for (let idx = beginIndex; idx < recs; idx++) {\n      xx = this.rectTick.left + this.layout.digit.spaceX + this.timeLen\n      value = getValue(this.tickData, 'time', idx)\n      clr = this.color.txt\n      let str\n      if (idx === 0) {\n        str = fromTTimeToStr(value, 'minute')\n      } else {\n        str = fromTTimeToStr(value, 'minute', getValue(this.tickData, 'time', idx - 1))\n      }\n      _drawTxt(this.context, xx, yy, str,\n        this.layout.digit.font, this.layout.digit.pixel, clr, {\n          x: 'end'\n        })\n\n      if (this.isIndex) {\n        xx = this.rectTick.left + this.rectTick.width - this.layout.digit.spaceX\n\n        value = getValue(this.tickData, 'close', idx)\n        clr = this.getColor(value, this.static.before)\n        _drawTxt(this.context, xx, yy, formatPrice(value, this.static.coinunit),\n          this.layout.digit.font, this.layout.digit.pixel, clr, {\n            x: 'end'\n          })\n        yy += offy\n        continue\n      }\n      xx += offx + this.closeLen + this.layout.digit.spaceX\n\n      if (!this.linkInfo.hideInfo) {\n        value = getValue(this.tickData, 'close', idx)\n        clr = this.getColor(value, this.static.before)\n        _drawTxt(this.context, xx, yy, formatPrice(value, this.static.coinunit),\n          this.layout.digit.font, this.layout.digit.pixel, clr, {\n            x: 'end'\n          })\n      }\n      xx += offx + this.volLen + this.layout.digit.spaceX\n\n      value = getValue(this.tickData, 'decvol', idx)\n      clr = this.color.vol\n      _drawTxt(this.context, xx, yy, formatVolume(value, this.static.volzoom),\n        this.layout.digit.font, this.layout.digit.pixel, clr, {\n          x: 'end'\n        })\n\n      yy += offy\n    }\n  }\n  /**\n   * draw grid line\n   * @return {Number}\n   * @memberof ClChartOrder\n   */\n  drawGridLine () {\n    _drawBegin(this.context, this.color.grid)\n    _drawRect(this.context, this.rectMain.left, this.rectMain.top, this.rectMain.width, this.rectMain.height)\n\n    let mmpCount = 1\n    if (this.style === 'normal') {\n      mmpCount = 5\n    }\n    let len = 0\n    _drawHline(this.context, this.rectOrder.left, this.rectOrder.left + this.rectOrder.width, this.rectOrder.top + Math.floor(this.rectOrder.height / 2))\n\n    let xx, yy, value\n    const strint = ['①', '②', '③', '④', '⑤']\n    const offy = this.rectOrder.height / (mmpCount * 2)\n\n    len = _getTxtWidth(this.context, '卖①', this.layout.title.font, this.layout.digit.height)\n    yy = this.rectOrder.top + Math.floor((offy - this.layout.digit.pixel) / 2) // 画最上面的\n    for (let idx = mmpCount - 1; idx >= 0; idx--) {\n      xx = this.rectOrder.left + this.layout.digit.spaceX\n      value = '卖' + strint[idx]\n      _drawTxt(this.context, xx, yy, value,\n        this.layout.digit.font, this.layout.digit.pixel, this.color.txt)\n      yy += offy\n    }\n    for (let idx = 0; idx < mmpCount; idx++) {\n      xx = this.rectOrder.left + this.layout.digit.spaceX\n      value = '买' + strint[idx]\n      _drawTxt(this.context, xx, yy, value,\n        this.layout.digit.font, this.layout.digit.pixel, this.color.txt)\n      yy += offy\n    }\n    if (this.config.title.display !== 'none') {\n      _drawHline(this.context, this.rectTitle.left, this.rectTitle.left + this.rectTitle.width, this.rectTitle.top)\n      _drawHline(this.context, this.rectTitle.left, this.rectTitle.left + this.rectTitle.width, this.rectTitle.top + this.rectTitle.height)\n      if (this.style === 'normal') {\n        value = '分时成交 △'\n      } else {\n        value = '分时成交 ▽'\n      }\n      const ticklen = _getTxtWidth(this.context, value, this.layout.title.font, this.layout.digit.pixel)\n      xx = this.rectTitle.left + (this.rectTitle.width - ticklen) / 2\n      yy = this.rectTitle.top + 3 * this.scale\n      _drawTxt(this.context, xx, yy, value,\n        this.layout.digit.font, this.layout.digit.pixel, this.color.txt)\n    }\n    _drawEnd(this.context)\n    return len\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Following is the entity definition of ClChart\n// generally only use this class to implement the function\n// A ClChart class is just a drawing of the chart belonging to the dispatch framework, mouse and keyboard events, and does not store data\n// When multiple maps are linked, the subgraphs are all here to get relevant information.\n\nimport {\n  copyJsonOfDeep\n} from '../util/cl.tool'\nimport ClChartLine from './cl.chart.line'\nimport ClChartOrder from './cl.chart.order'\nimport { setColor, setStandard } from '../chart/cl.chart.init'\n\nconst DEFAULT_LINKINFO = {\n  showMode: 'last',\n  // 'last' Targeted by the latest data, maxIndex=-1 shows the latest data\n  // 'move' Set this parameter when the move occurs, -- may not be required\n  // 'fixed' Fixed display of a certain range of time-shared charts and 5-day lines.\n  // 'locked' Specify a record in the middle\n  fixed: { // 对应fixed模式\n    min: -1, // 最小记录, 为-1表示最小记录加上left\n    max: -1, // 最大记录, 为-1表式最大记录减去right\n    left: 20,\n    right: 20\n  },\n  locked: { // 只有当showMode==‘locked’模式才有作用\n    index: -1, // 当前锁定的记录号，\n    set: 0.5 // 表示锁定在中间，1表示锁定在最后一条记录，当前记录的百分比\n  },\n  minIndex: -1, // 当前画面的起始记录号 -1 表示第一次\n  maxIndex: -1, // 当前画面的最大记录号 -1 表示第一次\n  hotIndex: -1, // 循环时需要定位当前数据的指针定位\n  showCursorLine: false, // 是否显示光标信息\n  moveIndex: -1, // 当前鼠标所在位置的记录号 -1 表示没有鼠标事件或第一次\n  spaceX: 2, // 每个数据的间隔像素，可以根据实际情况变化，但不能系统参数里设定的spaceX小\n  unitX: 5, // 每天数据的宽度 默认为5， 可以在1..50之间切换\n  rightMode: 'no', // 除权模式\n  hideInfo: false // 是否显示价格\n}\n/**\n * Class representing ClChart\n * @export\n * @class ClChart\n */\nexport default class ClChart {\n  /**\n\n   * Creates an instance of ClChart.\n   * @param {Object} syscfg\n   */\n  constructor (syscfg) {\n    this.context = syscfg.mainCanvas.context\n    this.cursorCanvas = syscfg.cursorCanvas\n    this.sysColor = syscfg.sysColor\n    // Use this to determine if it is the root element\n    this.father = undefined\n  }\n  /**\n   * Re-initialize Chart to clean up all charts and data\n   * @param {any} dataLayer data layer\n   * @param {any} eventLayer event layer\n   * @memberof ClChart\n   */\n  initChart (dataLayer, eventLayer) {\n    // linkInfo 是所有子chart公用的参数集合，也是dataLayer应用的集合\n    this.linkInfo = copyJsonOfDeep(DEFAULT_LINKINFO)\n    // this.checkConfig();\n    // 初始化子chart为空\n    this.childCharts = {}\n    // 设置数据层，同时对外提供设置接口\n    this.setDataLayer(dataLayer)\n    // 设置事件层，同时对外提供设置接口\n    this.setEventLayer(eventLayer)\n  }\n  /**\n   * clear current data and recharge linkinfo\n   *\n   * @memberof ClChart\n   */\n  clear () {\n    this.childCharts = {}\n    this.fastDraw = false\n    this.dataLayer.clearData()\n    // this.eventLayer.clear();\n    this.linkInfo = copyJsonOfDeep(DEFAULT_LINKINFO)\n  }\n  /**\n   * get child chart by key\n   * @param {String} key child chart key\n   * @return {Object} child chart\n   * @memberof ClChart\n   */\n  getChart (key) {\n    return this.childCharts[key]\n  }\n\n  // 以下是设置chart的事件关联接口，element表示映射的chart类\n  // 所有事件由外部获取事件后传递到eventLayer后，再统一分发给相应的图表\n  // eventLayer中有针对html5的鼠标键盘事件处理接口，其他事件处理接口另外再做\n\n  /**\n   * get event layer\n   * @return {Object} event layer\n   * @memberof ClChart\n   */\n  getEventLayer () {\n    return this.eventLayer\n  }\n  setEventLayer (layer) {\n    if (layer === undefined) return\n    this.eventLayer = layer\n    this.eventLayer.bindChart && this.eventLayer.bindChart(this) // 把chart绑定到事件处理层\n  }\n  // bindEvent (chart) {\n  //   this.eventLayer.bindEvent(chart);\n  // }\n\n  /**\n   * get data layer\n   * @return {Object} data layer\n   * @memberof ClChart\n   */\n  getDataLayer () {\n    return this.dataLayer\n  }\n  /**\n   * set data layer\n   * @param {Object} layer\n   * @memberof ClChart\n   */\n  setDataLayer (layer) {\n    if (layer === undefined) return\n    this.dataLayer = layer\n    layer.father = this\n    this.static = this.dataLayer.static\n  }\n  /**\n   * Set the corresponding basic data key of the chart\n   * @param {Object} chart\n   * @param {String} key\n   * @memberof ClChart\n   */\n  bindData (chart, key) {\n    if (chart.hotKey !== key) {\n      this.linkInfo.showMode = 'last' // 切换数据后需要重新画图\n      this.linkInfo.minIndex = -1\n      chart.hotKey = key // hotKey 针对chart的数据都调用该数据源\n      this.fastDrawEnd() // 热点数据改变，就重新计算\n    }\n  }\n  /**\n   * init data\n   * @param {Number} tradeDate trade date\n   * @param {Number} tradetime  trade time\n   * @memberof ClChart\n   */\n  initData (tradeDate, tradetime) {\n    this.dataLayer.initData(tradeDate, tradetime)\n  }\n  /**\n   * set data\n   * @param {String} key data key\n   * @param {Object} fields data field definition\n   * @param {any} value\n   * @memberof ClChart\n   */\n  setData (key, fields, value) {\n    let info = value\n    if (typeof value === 'string') info = JSON.parse(value)\n    this.dataLayer.setData(key, fields, info)\n    this.fastDrawEnd() // 新的数据被设置，就重新计算\n  }\n  /**\n   * get data from datalayer by key\n   * @param {String} key\n   * @return {Array}\n   * @memberof ClChart\n   */\n  getData (key) {\n    if (this.fastDraw) {\n      if (this.fastBuffer[key] !== undefined) {\n        return this.fastBuffer[key]\n      }\n    }\n    const out = this.dataLayer.getData(key, this.linkInfo.rightMode)\n    if (this.fastDraw) {\n      this.fastBuffer[key] = out\n    }\n    return out\n  }\n  /**\n   * init line data\n   * @param {Array} data\n   * @param {Array} lines\n   * @memberof ClChart\n   */\n  readyData (data, lines) {\n    for (let k = 0; k < lines.length; k++) {\n      if (lines[k].formula === undefined) continue\n      if (!this.fastDraw || (this.fastDraw && this.fastBuffer[lines[k].formula.key] === undefined)) {\n        this.dataLayer.makeLineData(\n          { data, minIndex: this.linkInfo.minIndex, maxIndex: this.linkInfo.maxIndex },\n          lines[k].formula.key,\n          lines[k].formula.command\n        )\n      }\n    }\n  }\n  /**\n   * create chart\n   * @param {String} name name is a unique name, the same name will override the previous class with the same name\n   * @param {String} className class name\n   * @param {Object} usercfg user custom config\n   * @param {Function} callback callback\n   * @return {Object} chart instance\n   * @memberof ClChart\n   */\n  createChart (name, className, usercfg, callback) {\n    let chart\n    switch (className) {\n      case 'CHART.ORDER': chart = new ClChartOrder(this); break\n      case 'CHART.LINE': chart = new ClChartLine(this); break\n      default : chart = new ClChartLine(this); break\n    }\n\n    chart.name = name\n    this.childCharts[name] = chart\n\n    // this.bindEvent(chart);\n    chart.init(usercfg, callback) // 根据用户配置初始化信息框\n\n    return chart\n  }\n\n  /**\n   * draw all the layers contained in this area\n   * @param {Object} chart\n   * @memberof ClChart\n   */\n  onPaint (chart) {\n    if (typeof this.context._beforePaint === 'function') {\n      this.context._beforePaint()\n    }\n    this.fastDrawBegin()\n\n    for (const key in this.childCharts) {\n      if (chart !== undefined) {\n        if (this.childCharts[key] === chart) {\n          this.childCharts[key].onPaint()\n        }\n      } else {\n        this.childCharts[key].onPaint()\n      }\n    }\n    // this.fastDrawEnd();\n    if (typeof this.context._afterPaint === 'function') {\n      this.context._afterPaint()\n    }\n  }\n  /**\n   * Used for the same group of multi-graph only take data once, this can speed up the display, the program structure will not be chaotic\n   * @memberof ClChart\n   */\n  fastDrawBegin () {\n    if (!this.fastDraw) {\n      this.fastBuffer = []\n      this.fastDraw = true\n    }\n  }\n  /**\n   * set whether to turn on quick drawing\n   * @memberof ClChart\n   */\n  fastDrawEnd () {\n    this.fastDraw = false\n  }\n\n  /**\n   * Set whether to hide the information bar\n   * @param {String} isHideInfo\n   * @memberof ClChart\n   */\n  setHideInfo (isHideInfo) {\n    if (isHideInfo === undefined) return\n    if (isHideInfo !== this.linkInfo.hideInfo) {\n      this.linkInfo.hideInfo = isHideInfo\n      this.onPaint()\n    }\n  }\n  /**\n   * Set the background color\n   * @param {String} sysColor\n   * @param {Object | null} chart\n   * @memberof ClChart\n   */\n  setColor (sysColor, chart) {\n    this.color = setColor(sysColor)\n    if (chart === undefined) chart = this\n    for (const key in chart.childCharts) {\n      chart.childCharts[key].color = this.color\n      this.setColor(sysColor, chart.childCharts[key])\n    }\n    // 需要将其子配置的颜色也一起改掉\n    for (const key in chart.childDraws) {\n      chart.childDraws[key].color = this.color\n      this.setColor(sysColor, chart.childDraws[key])\n    }\n    for (const key in chart.childLines) {\n      chart.childLines[key].color = this.color\n      this.setColor(sysColor, chart.childLines[key])\n    }\n    this.sysColor = sysColor\n  }\n  /**\n   * setting drafting standards\n   * @param {String} standard\n   * @memberof ClChart\n   */\n  setStandard (standard) {\n    setStandard(standard)\n    this.setColor(this.sysColor)\n    this.onPaint()\n  }\n  // this.makeLineData = function(data, key, formula, punit) {\n  //   return this.dataLayer.makeLineData(data, key, this.linkInfo.minIndex, this.linkInfo.maxIndex, formula);\n  // }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/*\n  The canvas needs to have two methods\n  eventCanvas: {\n    addEventListener: () => {},\n    removeEventListener: () => {}\n  }\n*/\n\n/*\n  // Event object required attributes\n  event: {\n    touches: [\n      pageX: 0,\n      pageY: 0,\n      offsetX: 0,\n      offsetY: 0,\n    ],\n    changedTouches: [],\n    target: {\n      getBoundingClientRect: () => {}\n    },\n    preventDefault: () => {}\n  }\n*/\n\n/**\n * Get distance\n * @param {Number} xLen\n * @param {Number} yLen\n * @return {Number}\n */\nfunction _getDistance (xLen, yLen) {\n  return Math.sqrt(xLen * xLen + yLen * yLen)\n}\n/**\n * Get the rotation direction of the vector\n */\nfunction _getRotateDirection (vector1, vector2) {\n  return vector1.x * vector2.y - vector2.x * vector1.y\n}\n\nfunction _getRotateAngle (vector1, vector2) {\n  let direction = _getRotateDirection(vector1, vector2)\n  direction = direction > 0 ? -1 : 1\n  const len1 = _getDistance(vector1.x, vector1.y)\n  const len2 = _getDistance(vector2.x, vector2.y)\n  const mr = len1 * len2\n  if (mr === 0) return 0\n  const dot = vector1.x * vector2.x + vector1.y * vector2.y\n  let r = dot / mr\n  if (r > 1) r = 1\n  if (r < -1) r = -1\n  return Math.acos(r) * direction * 180 / Math.PI\n}\n\nfunction _getTouchInfo (point, element) {\n  const mouseInfo = {\n    name: 'touch'\n  }\n  if (point.offsetX && point.offsetX === 0) {\n    mouseInfo.offsetX = point.offsetX\n    mouseInfo.offsetY = point.offsetY\n  } else {\n    let srcRect = {\n      left: 0,\n      top: 0\n    }\n    if (element && typeof element.getBoundingClientRect === 'function') srcRect = element.getBoundingClientRect()\n    mouseInfo.offsetX = point.pageX - srcRect.left\n    mouseInfo.offsetY = point.pageY - srcRect.top\n  }\n  return mouseInfo\n}\n\nfunction _getEventInfo (event) {\n  return {\n    offsetX: event.offsetX,\n    offsetY: event.offsetY\n  }\n}\n\n/**\n * Class representing ClEventHandler\n * @export\n * @class ClEventHandler\n */\nexport default class ClEventHandler {\n  /**\n   * Creates an instance of ClEventHandler.\n   * @param {Object} {\n   * father,\n   * eventBuild,\n   * isTouch\n   * }\n   * @constructor\n   */\n  constructor ({father, eventBuild, isTouch}) {\n    this.father = father\n    this.eventCanvas = father.eventCanvas\n    if (typeof eventBuild === 'function') {\n      this.eventBuild = eventBuild\n    } else {\n      this.eventBuild = (e) => e\n    }\n    // Determine whether touch event is supported\n    this.isTouch = !!isTouch\n\n    // Remove long press popup button\n    this.eventCanvas.addEventListener && this.eventCanvas.addEventListener('contextmenu', e => {\n      e.preventDefault()\n    })\n  }\n  /**\n   * bind evnet\n   * @memberof ClEventHandler\n   */\n  bindEvent () {\n    if (this.isTouch) {\n      this.addHandler('touchstart', this.touchstart.bind(this))\n      this.addHandler('touchend', this.touchend.bind(this))\n      this.addHandler('touchmove', this.touchmove.bind(this))\n    } else {\n      this.addHandler('mousemove', this.mousemove.bind(this))\n      // this.addHandler('mousein', this.mousein.bind(this));\n      this.addHandler('mouseout', this.mouseout.bind(this))\n      this.addHandler('mousewheel', this.mousewheel.bind(this))\n      this.addHandler('mouseup', this.mouseup.bind(this))\n      this.addHandler('mousedown', this.mousedown.bind(this))\n      this.addHandler('keyup', this.keyup.bind(this))\n      this.addHandler('keydown', this.keydown.bind(this))\n\n      this.addHandler('click', this.click.bind(this))\n    }\n  }\n  /**\n   * clear event listener\n   * @memberof ClEventHandler\n   */\n  clearEvent () {\n    if (this.isTouch) {\n      this.clearHandler('touchstart', this.touchstart.bind(this))\n      this.clearHandler('touchend', this.touchend.bind(this))\n      this.clearHandler('touchmove', this.touchmove.bind(this))\n    } else {\n      this.clearHandler('mousemove', this.mousemove.bind(this))\n      // this.clearHandler('mousein', this.mousein.bind(this));\n      this.clearHandler('mouseout', this.mouseout.bind(this))\n      this.clearHandler('mousewheel', this.mousewheel.bind(this))\n      this.clearHandler('mouseup', this.mouseup.bind(this))\n      this.clearHandler('mousedown', this.mousedown.bind(this))\n      this.clearHandler('keyup', this.keyup.bind(this))\n      this.clearHandler('keydown', this.keydown.bind(this))\n\n      this.clearHandler('click', this.click.bind(this))\n    }\n  }\n  /**\n   * add handle for events\n   * @param {String} eventName\n   * @param {Function} handler\n   * @memberof ClEventHandler\n   */\n  addHandler (eventName, handler) {\n    if (this.eventCanvas.addEventListener) {\n      this.eventCanvas.addEventListener(eventName, handler, false)\n    } else if (this.eventCanvas.attachEvent) {\n      this.eventCanvas.attachEvent('on' + eventName, handler)\n    } else {\n      this.eventCanvas['on' + eventName] = handler\n    }\n  }\n  /**\n   * Clean up all binding events\n   * @param {String} eventName\n   * @param {Function} handler\n   * @memberof ClEventHandler\n   */\n  clearHandler (eventName, handler) {\n    if (this.eventCanvas.removeEventListener) {\n      this.eventCanvas.removeEventListener(eventName, handler, false)\n    } else if (this.eventCanvas.deattachEvent) {\n      this.eventCanvas.deattachEvent('on' + eventName, handler)\n    } else {\n      this.eventCanvas['on' + eventName] = null\n    }\n  }\n  // The following is an event handler\n  /**\n   * mouse move\n   * @param {Object} event\n   * @memberof ClEventHandler\n   */\n  mousemove (event) {\n    this.father.emitEvent('onMouseMove', _getEventInfo(event))\n  }\n  /**\n   * mouse in\n   * @param {Object} event\n   * @memberof ClEventHandler\n   */\n  mousein (event) {\n    this.father.emitEvent('onMouseIn', _getEventInfo(event))\n  }\n  /**\n   * mouse out\n   * @param {Object} event\n   * @memberof ClEventHandler\n   */\n  mouseout (event) {\n    this.father.emitEvent('onMouseOut', _getEventInfo(event))\n  }\n  /**\n   * mouse whell\n   * @param {Object} event\n   * @memberof ClEventHandler\n   */\n  mousewheel (event) {\n    const info = _getEventInfo(event)\n    info.deltaY = event.deltaY\n    this.father.emitEvent('onMouseWheel', info)\n  }\n  /**\n   * mouse up\n   * @param {Object} event\n   * @memberof ClEventHandler\n   */\n  mouseup (event) {\n    this.father.emitEvent('onMouseUp', _getEventInfo(event))\n  }\n  /**\n   * mouse down\n   * @param {Object} event\n   * @memberof ClEventHandler\n   */\n  mousedown (event) {\n    this.father.emitEvent('onMouseDown', _getEventInfo(event))\n  }\n  // keyboard event\n  /**\n   * key up\n   * @param {Object} event\n   * @memberof ClEventHandler\n   */\n  keyup (event) {\n    const info = _getEventInfo(event)\n    info.keyCode = event.keyCode\n    this.father.emitEvent('onKeyUp', info)\n  }\n  /**\n   * key down\n   * @param {Object} event\n   * @memberof ClEventHandler\n   */\n  keydown (event) {\n    const info = _getEventInfo(event)\n    info.keyCode = event.keyCode\n    this.father.emitEvent('onKeyDown', info)\n  }\n  /**\n   * click event\n   * @param {Object} event\n   * @memberof ClEventHandler\n   */\n  click (event) {\n    this.father.emitEvent('onClick', _getEventInfo(event))\n  }\n  /**\n   * touchstart\n   * @param {Object} e\n   * @memberof ClEventHandler\n   */\n  touchstart (e) {\n    const event = this.eventBuild(e)\n    this.__timestamp = new Date()\n    const point = event.touches ? event.touches[0] : event\n    this.startX = point.pageX\n    this.startY = point.pageY\n    clearTimeout(this.longTapTimeout)\n    this.startTime = Date.now()\n    // Two-point touch\n    if (event.touches.length > 1) {\n      const point2 = event.touches[1]\n      const xLen = Math.abs(point2.pageX - this.startX)\n      const yLen = Math.abs(point2.pageY - this.startY)\n      this.touchDistance = _getDistance(xLen, yLen)\n      this.touchVector = {\n        x: point2.pageX - this.startX,\n        y: point2.pageY - this.startY\n      }\n    } else {\n      this.longTapTimeout = setTimeout(() => {\n        this.father.emitEvent('onLongPress', _getTouchInfo(point, event.target))\n      }, 600)\n      if (this.previousTouchPoint) {\n        if (Math.abs(this.startX - this.previousTouchPoint.startX) < 10 &&\n          Math.abs(this.startY - this.previousTouchPoint.startY) < 10 &&\n          Math.abs(this.startTime - this.previousTouchTime) < 300) {\n          this.father.emitEvent('onDoubleClick', _getTouchInfo(point, event.target))\n        }\n      }\n      this.previousTouchTime = this.startTime\n      this.previousTouchPoint = {\n        startX: this.startX,\n        startY: this.startY\n      }\n    }\n  }\n  /**\n   * touchend\n   * @param {Object} e\n   * @memberof ClEventHandler\n   */\n  touchend (e) {\n    const event = this.eventBuild(e)\n    clearTimeout(this.longTapTimeout)\n    const point = event.changedTouches ? event.changedTouches[0] : event\n    const timestamp = Date.now()\n    if ((this.moveX !== null && Math.abs(this.moveX - this.startX) > 10) ||\n      (this.moveY !== null && Math.abs(this.moveY - this.startY) > 10)) {\n      if (timestamp - this.startTime < 500) {\n        this.father.emitEvent('onSwipe', _getTouchInfo(point, event.target))\n      }\n    } else if (timestamp - this.startTime < 2000) {\n      if (timestamp - this.startTime < 500) {\n        this.father.emitEvent('onClick', _getTouchInfo(point, event.target))\n      }\n      if (timestamp - this.startTime > 500) {\n        this.father.emitEvent('onLongPress', _getTouchInfo(point, event.target))\n      }\n    }\n    this.startX = this.startY = this.moveX = this.moveY = null\n    this.previousPinchScale = 1\n    this.father.emitEvent('onMouseOut', _getTouchInfo(point, event.target))\n  }\n  /**\n   * touchmove\n   * @param {Object} e\n   * @memberof ClEventHandler\n   */\n  touchmove (e) {\n    const event = this.eventBuild(e)\n    if (new Date() - this.__timestamp < 150) {\n      return event\n    }\n    const timestamp = Date.now()\n    if (event.touches.length > 1) {\n      const xLen = Math.abs(event.touches[0].pageX - event.touches[1].pageX)\n      const yLen = Math.abs(event.touches[0].pageY - event.touches[1].pageY)\n      const touchDistance = _getDistance(xLen, yLen)\n      // Calculate scaling events\n      if (this.touchDistance) {\n        const pinchScale = touchDistance / this.touchDistance\n        const point = event.touches ? event.touches[0] : event\n        // this._emitEvent('onPinch', { scale: pinchScale - this.previousPinchScale }); // 缩放\n        const mouseinfo = _getTouchInfo(point, event.target)\n        if ((timestamp - this.startTime) > 90 && this.previousPinchScale) {\n          mouseinfo.scale = pinchScale - this.previousPinchScale\n          if (Math.abs(mouseinfo.scale) > 0.01) {\n            this.father.emitEvent('onPinch', mouseinfo)\n          }\n          this.startTime = Date.now()\n        }\n        this.previousPinchScale = pinchScale\n      }\n      // Calculating rotation events\n      if (this.touchVector) {\n        const vector = {\n          x: event.touches[1].pageX - event.touches[0].pageX,\n          y: event.touches[1].pageY - event.touches[0].pageY\n        }\n        const angle = _getRotateAngle(vector, this.touchVector)\n        // this._emitEvent('onRotate', {\n        //   angle\n        // })\n        this.father.emitEvent('onRotate', {\n          angle\n        })\n        this.touchVector.x = vector.x\n        this.touchVector.y = vector.y\n      }\n    } else {\n      clearTimeout(this.longTapTimeout)\n      const point = event.touches ? event.touches[0] : event\n      const deltaX = this.moveX === null ? 0 : point.pageX - this.moveX\n      const deltaY = this.moveY === null ? 0 : point.pageY - this.moveY\n      // this._emitEvent('onMove', { deltaX, deltaY });\n      const config = _getTouchInfo(point, event.target)\n      config.deltaX = deltaX\n      config.deltaY = deltaY\n      this.father.emitEvent('onMouseMove', config)\n      this.moveX = point.pageX\n      this.moveY = point.pageY\n    }\n    if (typeof event.preventDefault === 'function') event.preventDefault()\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 定义事件监听接口\n\n// 鼠标事件\n//  onMouseMove // 移动\n//  onMouseIn  // 进入\n//  monMouseOut // 离开\n//  onMousewheel // 滚动\n//  onMouseUp  //\n//  onMouseDown //\n// 键盘事件\n//  onKeyUp\n//  onKeyDown\n// 触摸事件\n//  onTouchStart // 触摸开始\n//  onTouchEnd   // 触摸结束\n//  onTouchMove  // 触摸移动\n// 其他事件\n//  onClick // 点击\n//  onLongPress // 长按\n//  onPinch // 两指放大或缩小\n//  onRotate // 旋转\n//  onSwipe //左滑或右滑\nimport {\n  copyJsonOfDeep,\n  inRect\n} from '../util/cl.tool'\nimport ClEventHandler from './cl.event.handler'\n\nexport const EVENT_DEFINE = [\n  'onMouseMove',\n  // 'onMouseIn',\n  'onMouseOut',\n  'onMousewheel',\n  'onMouseUp',\n  'onMouseDown',\n  'onKeyUp',\n  'onKeyDown',\n  'onClick',\n  'onDoubleClick',\n  'onLongPress',\n  'onPinch',\n  'onRotate',\n  'onSwipe'\n]\n\nexport function buildMinaTouchEvent (e) {\n  const eventObj = {}\n  if (e && Array.isArray(e.touches)) {\n    eventObj.touches = []\n    for (let i = 0; i < e.touches.length; i++) {\n      const point = e.touches[i]\n      eventObj.touches.push({\n        pageX: point.x,\n        pageY: point.y,\n        offsetX: point.x,\n        offsetY: point.y\n      })\n    }\n  }\n  if (e && Array.isArray(e.changedTouches)) {\n    eventObj.changedTouches = []\n    for (let i = 0; i < e.changedTouches.length; i++) {\n      const point = e.changedTouches[i]\n      eventObj.changedTouches.push({\n        pageX: point.x,\n        pageY: point.y,\n        offsetX: point.x,\n        offsetY: point.y\n      })\n    }\n  }\n  return eventObj\n}\n\n/**\n * Class representing ClEvent\n * @export\n * @class ClEvent\n */\nexport default class ClEvent {\n  /**\n   * Creates an instance of ClEvent.\n   * @param {Object} syscfg\n   * @constructor\n   */\n  constructor (syscfg) {\n    // this.eventCanvas = syscfg.mainCanvas.canvas // 对web来说就是虚拟接收事件的canvas\n    this.eventCanvas = syscfg.cursorCanvas.canvas\n    this.eventPlatform = syscfg.eventPlatform || 'web'\n    this.scale = syscfg.scale\n\n    const eventCfg = {\n      father: this\n    }\n    if (this.eventPlatform === 'react-native') {\n      eventCfg.isTouch = true\n    } else if (this.eventPlatform === 'web') {\n      eventCfg.isTouch = 'ontouchend' in document\n    } else if (this.eventPlatform === 'mina') {\n      eventCfg.isTouch = true\n      eventCfg.eventBuild = buildMinaTouchEvent\n    }\n    this.eventSource = new ClEventHandler(eventCfg)\n    this.eventSource.bindEvent()\n  }\n  // 只需要绑定一个原始ClChart就可以了，子图的事件通过childCharts来判断获取\n  // 每个chart如果自己定义了对应事件就会分发，未定义不分发，分发后以返回值判断是否继续传递到下一个符合条件的chart\n  /**\n   * bind event\n   * @param {Object} source\n   * @memberof ClEvent\n   */\n  bindChart (source) {\n    this.firstChart = source\n    this.HotWin = undefined\n  }\n  /**\n   * clear event\n   * @memberof ClEvent\n   */\n  clearEvent () {\n    this.eventSource.clearEvent()\n  }\n  // 下面是接收事件后,根据热点位置来判断归属于哪一个chart,并分发事件;\n  // config 必须包含鼠标位置 {offsetX:offsetY:}\n  /**\n   * emit event\n   * @param {String} eventName\n   * @param {Object} config\n   * @memberof ClEvent\n   */\n  emitEvent (eventName, config) {\n    // .....这里需要特殊分解处理Out的事件\n    if (eventName === 'onMouseOut' || eventName === 'onMouseMove') {\n      this.boardEvent(this.firstChart, eventName, config)\n      this.HotWin = undefined\n      return\n    }\n    const mousePos = this.getMousePos(config)\n    const chartPath = []\n    for (const name in this.firstChart.childCharts) {\n      // 判断鼠标在哪个区域\n      if (inRect(this.firstChart.childCharts[name].rectMain, mousePos)) {\n        // 取得事件冒泡顺序\n        this.findEventPath(chartPath, this.firstChart.childCharts[name], mousePos)\n        // 只处理符合条件的一个区域，重叠区域不考虑\n        break\n      }\n    }\n    if (chartPath.length < 1) return\n    // 继承最初始的传入参数,从最顶层开始处理\n    const event = copyJsonOfDeep(config)\n    for (let k = chartPath.length - 1; k >= 0; k--) {\n      if (chartPath[k][eventName] !== undefined) {\n        // 这里生成一个相对鼠标位置\n        event.mousePos = {\n          // x: mousePos.x - chartPath[k].rectMain.left,\n          // y: mousePos.y - chartPath[k].rectMain.top\n          x: mousePos.x,\n          y: mousePos.y\n        }\n        // 执行事件函数\n        chartPath[k][eventName](event)\n        if (event.break) break // 跳出循环\n      }\n    }\n  }\n  // 用于鼠标联动时，向childCharts同一级别画图区域广播事件\n  //\n  /**\n   * board event\n   * @param {Object} chart\n   * @param {String} eventName\n   * @param {Object} config\n   * @param {Object} ignore\n   * @memberof ClEvent\n   */\n  boardEvent (chart, eventName, config, ignore) {\n    const event = copyJsonOfDeep(config)\n    const mousePos = this.getMousePos(config)\n\n    for (const name in chart.childCharts) {\n      if (chart.childCharts[name] === ignore) continue\n      if (chart.childCharts[name][eventName] === undefined) continue\n\n      event.mousePos = {\n        // x: mousePos.x - chart.childCharts[name].rectMain.left,\n        // y: mousePos.y - chart.childCharts[name].rectMain.top\n        x: mousePos.x,\n        y: mousePos.y\n      }\n      chart.childCharts[name][eventName](event)\n      if (event.break) break\n    }\n  }\n  /**\n   * find event path\n   * @param {Array} path\n   * @param {Object} chart\n   * @param {Object} mousePos\n   * @memberof ClEvent\n   */\n  findEventPath (path, chart, mousePos) {\n    path.push(chart)\n    if (chart.childCharts === undefined) return\n\n    for (const name in chart.childCharts) {\n      if (inRect(chart.childCharts[name].rectMain, mousePos)) {\n        this.findEventPath(path, chart.childCharts[name], mousePos)\n      }\n    }\n  }\n  /**\n   * get mouse position info\n   * @param {Object} event\n   * @return {Object} mouse position info\n   * @memberof ClEvent\n   */\n  getMousePos (event) {\n    const mouseX = event.offsetX * this.scale\n    const mouseY = event.offsetY * this.scale\n    return {\n      x: mouseX,\n      y: mouseY\n    }\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 以下是ClData的实体定义\n// 一般只用操作这个类就可以获取单个股票的所有数据\n// 不支持多个股票的数据，对于列表来说，这里只保存ID列表，其他的数据由实际画图自行获取，\n\nimport {\n  fromTradeTimeToIndex,\n  fromIndexToTradeTime,\n  checkZero,\n  getSize,\n  checkDayZero,\n  checkDay5,\n  updateStatic,\n  findDateInDay,\n  findIndexInMin,\n  matchDayToWeek,\n  matchDayToMon,\n  getMinuteCount,\n  transExrightMin,\n  transExrightDay\n} from './cl.data.tools'\nimport {\n  FIELD_INFO,\n  FIELD_DAY,\n  FIELD_MIN,\n  FIELD_TICK,\n  FIELD_DAY5,\n  FIELD_NOW,\n  FIELD_ILINE,\n  FIELD_ENOW\n} from '../cl.data.def'\nimport {\n  getDate,\n  isEmptyArray,\n  copyArrayOfDeep\n} from '../util/cl.tool'\nimport {\n  ClFormula\n} from '../formula/cl.formula'\n// 只保存一只股票的信息，当前日期，开收市时间\n\n/**\n * Class representing ClData\n * data layer\n * @export\n * @class ClData\n */\nexport default class ClData {\n  /**\n   * Creates an instance of ClData.\n\n   */\n  constructor () {\n    // this.formula = new ClFormula();\n    this.static = {\n      stktype: 1,\n      volunit: 100,\n      coinunit: 100,\n      decimal: 2,\n      before: 1000,\n      stophigh: 1100,\n      stoplow: 900\n    }\n  }\n\n  // 只保存一只股票的信息，当前日期，开收市时间\n  /**\n   * init data\n   * @param {Number} tradeDate\n   * @param {Number} tradetime\n   * @memberof ClData\n   */\n  initData (tradeDate, tradetime) {\n    this.formula = new ClFormula()\n    this.clearData()\n    if (tradetime === undefined) {\n      this.tradeTime = [{\n        begin: 930,\n        end: 1130\n      },\n      {\n        begin: 1300,\n        end: 1500\n      }\n      ]\n    } else {\n      this.tradeTime = tradetime\n    }\n\n    if (tradeDate === undefined) {\n      this.tradeDate = getDate() // 得到当天的日期\n    } else {\n      this.tradeDate = tradeDate // 最近一个交易日期，并不一定等于今天的日期，比如节假日期间\n    }\n  }\n  // 包含一个股票所有的数据,以便于以后做公式系统也使用这个数据定义\n  /**\n   * clear data\n   * @memberof ClData\n   */\n  clearData () {\n    this.InData = [] // 数据 json格式数据 {key:..,fields:.., value:[[],[]...]}\n    this.OutData = [] // 专门用于获取数据时临时产生的数据\n  }\n  // 下面是设置数据的方法\n  /**\n   * set data\n   * @param {String} key\n   * @param {Object} fields\n   * @param {Array} value\n   * @memberof ClData\n   */\n  setData (key, fields, value) {\n    if (value === undefined) value = []\n    if (this.InData[key] === undefined) this.InData[key] = {}\n    switch (key) {\n      case 'DAY5':\n        value = checkDay5(value, this.static.coinzoom, this.tradeDate, this.tradeTime)\n        break\n      case 'NOW':\n      case 'ENOW':\n        this.flushNowData(key, value)\n        break\n      case 'MIN':\n      case 'DAY':\n        value = checkDayZero(value, this.tradeDate)\n        break\n      case 'INFO':\n        this.static = updateStatic(FIELD_INFO, value)\n        break\n    }\n    // // 设置了CODE或者INFO后，把一些常用的数取出来放到static中\n    // 仅仅接收以上和 MIN5 RIGHT 等原始数据，周月年和其他周期分钟线，全部通过计算获取\n    this.InData[key] = {\n      key,\n      fields\n    }\n    this.InData[key].value = copyArrayOfDeep(value)\n  }\n  /**\n   * flush tick\n   * @param {Array} nowdata\n   * @param {Array} fields\n   * @memberof ClData\n   */\n  flushTick (nowdata, fields) {\n    // if (this.static.stktype == 0) return ;\n    if (getSize(this.InData['TICK']) < 1) {\n      if (nowdata[fields.vol] > 0) {\n        this.InData['TICK'] = {\n          key: 'TICK',\n          fields: FIELD_TICK,\n          value: [nowdata[fields.time], nowdata[fields.close], nowdata[fields.vol]]\n        }\n      }\n    } else {\n      if (this.InData['TICK'].value[this.InData['TICK'].value.length - 1][FIELD_TICK.vol] < nowdata[fields.vol] ||\n        this.InData['TICK'].value[this.InData['TICK'].value.length - 1][FIELD_TICK.close] !== nowdata[fields.close]) {\n        // 成交量变化才生成tick,或收盘价不一样\n        this.InData['TICK'].value.push([nowdata[fields.time], nowdata[fields.close], nowdata[fields.vol]])\n      }\n    }\n  }\n  /**\n   * flush min data\n   * @param {Array} nowdata\n   * @param {Array} fields\n   * @memberof ClData\n   */\n  flushMin (nowdata, fields) {\n    if (this.InData['MIN'] === undefined) {\n      this.InData['MIN'] = {\n        key: 'MIN',\n        fields: FIELD_MIN,\n        value: [\n          fromTradeTimeToIndex(nowdata[fields.time], this.tradeTime),\n          nowdata[fields.open],\n          nowdata[fields.high],\n          nowdata[fields.low],\n          nowdata[fields.close],\n          nowdata[fields.vol],\n          nowdata[fields.money]\n        ]\n      }\n    } else {\n      const index = fromTradeTimeToIndex(nowdata[fields.time], this.tradeTime)\n      const checked = findIndexInMin(this.InData['MIN'], index)\n      if (checked.status === 'old') {\n        if (this.InData['MIN'].value[checked.index][fields.high] < nowdata[fields.close]) {\n          this.InData['MIN'].value[checked.index][fields.high] = nowdata[fields.close]\n        }\n        if (this.InData['MIN'].value[checked.index][fields.low] > nowdata[fields.close]) {\n          this.InData['MIN'].value[checked.index][fields.low] = nowdata[fields.close]\n        }\n        this.InData['MIN'].value[checked.index][fields.close] = nowdata[fields.close]\n        this.InData['MIN'].value[checked.index][fields.vol] = nowdata[fields.vol]\n        this.InData['MIN'].value[checked.index][fields.money] = nowdata[fields.money]\n      } else if (checked.status === 'new') {\n        this.InData['MIN'].value.push([index, nowdata[fields.close], nowdata[fields.close],\n          nowdata[fields.close], nowdata[fields.close], nowdata[fields.vol], nowdata[fields.money]\n        ])\n      }\n    }\n  }\n  // 当有新的NOW进来时，需要对TICK和当日MIN线进行更新，\n  /**\n   * flush now data\n   * @param {String} key\n   * @param {Array} nowdata\n   * @memberof ClData\n   */\n  flushNowData (key, nowdata) {\n    if (nowdata.length < 1) return\n    let fields = FIELD_NOW\n    if (key === 'ENOW') fields = FIELD_ENOW\n    if (checkZero(nowdata, fields)) return\n\n    // 先处理TICK\n    this.flushTick(nowdata, fields)\n\n    // 再处理Min\n    this.flushMin(nowdata, fields)\n  }\n\n  // 下面是获取数据的方法,先从OutData获取，没有数据就从InData数据中获取\n\n  /**\n   * get data\n   * @param {String} key\n   * @param {String} rightMode\n   * @return {Array}\n   * @memberof ClData\n   */\n  getData (key, rightMode) {\n    switch (key) {\n      case 'DAY':\n        this.OutData['DAY'] = {\n          key,\n          fields: FIELD_DAY\n        }\n        this.OutData['DAY'].value = this.mergeDay(this.InData['DAY'], this.InData['NOW'], rightMode)\n        // 对原始数据不做变更\n        break\n      case 'WEEK':\n        this.OutData['WEEK'] = {\n          key,\n          fields: FIELD_DAY\n        }\n        this.OutData['WEEK'].value = this.mergeWeek(this.InData['DAY'], this.InData['NOW'], rightMode)\n        // 每次都从日线计算生成 -- 避免除权数据无法正确显示的错误\n        break\n      case 'MON':\n        this.OutData['MON'] = {\n          key,\n          fields: FIELD_DAY\n        }\n        this.OutData['MON'].value = this.mergeMon(this.InData['DAY'], this.InData['NOW'], rightMode)\n        // 每次都从日线计算生成 -- 避免除权数据无法正确显示的错误\n        break\n      case 'DAY5':\n        this.OutData['DAY5'] = {\n          key,\n          fields: FIELD_DAY5\n        }\n        this.OutData['DAY5'].value = this.mergeDay5(this.InData['DAY5'], this.InData['MIN'])\n        // 每次都从日线计算生成\n        break\n      case 'M5':\n      case 'M15':\n      case 'M30':\n      case 'M60':\n        this.OutData[key] = {\n          key,\n          fields: FIELD_DAY\n        }\n        this.OutData[key].value = this.makeMinute(key, this.InData[key], this.InData['MIN'], rightMode)\n        break\n      case 'MIN':\n        this.OutData[key] = {\n          key,\n          fields: FIELD_MIN\n        }\n        this.OutData[key].value = this.updateMinute(this.InData[key])\n        break\n    }\n    // 先找Out中的数据，没有就找In的数据\n    return this.OutData[key] ? this.OutData[key] : this.InData[key]\n  }\n  /**\n   * update minute\n   * @param {Object} source\n   * @return {Array}\n   * @memberof ClData\n   */\n  updateMinute (source) {\n    let out = copyArrayOfDeep(source.value)\n\n    let allmoney\n    for (let k = 0; k < out.length; k++) {\n      if (this.static.stktype === 0) {\n        if (k === 0) {\n          allmoney = out[k][FIELD_MIN.vol] * out[k][FIELD_MIN.close]\n        } else {\n          allmoney += (out[k][FIELD_MIN.vol] - out[k - 1][FIELD_MIN.vol]) * out[k][FIELD_MIN.close]\n        }\n        out[k][FIELD_MIN.allmoney] = allmoney\n      } else {\n        // value[k][fields.allmoney] = value[k][fields.money];\n      }\n    }\n    return out\n  }\n  /**\n   * merge day\n   * @param {Object} source\n   * @param {Array} now\n   * @param {String} rightMode\n   * @return {Array}\n   * @memberof ClData\n   */\n  mergeDay (source, now, rightMode) {\n    let out = copyArrayOfDeep(source.value)\n    if (now !== undefined && !checkZero(now.value, now.fields)) {\n      const checked = findDateInDay(source, getDate(now.value[now.fields.time]))\n      if (checked.finded) {\n        out[checked.index] = [\n          getDate(now.value[now.fields.time]),\n          now.value[now.fields.open],\n          now.value[now.fields.high],\n          now.value[now.fields.low],\n          now.value[now.fields.close],\n          now.value[now.fields.vol],\n          now.value[now.fields.money]\n        ]\n      } else {\n        out.push([\n          getDate(now.value[now.fields.time]),\n          now.value[now.fields.open],\n          now.value[now.fields.high],\n          now.value[now.fields.low],\n          now.value[now.fields.close],\n          now.value[now.fields.vol],\n          now.value[now.fields.money]\n        ])\n      }\n    }\n    if (this.InData['RIGHT'] && rightMode !== 'none') {\n      out = transExrightDay(out, this.InData['RIGHT'].value, rightMode,\n        0, out.length - 1)\n    }\n    // this.config.start,this.config.stop);\n\n    return out\n  }\n  /**\n   * merge week data\n   * @param {Object} source\n   * @param {Array} now\n   * @param {String} rightmode\n   * @return {Array}\n   * @memberof ClData\n   */\n  mergeWeek (source, now, rightmode) {\n    const out = this.mergeDay(source, now, rightmode)\n    return matchDayToWeek(out)\n    // 合并周线\n  }\n  /**\n   * merge month data\n   * @param {Object} source\n   * @param {Array} now\n   * @param {String} rightmode\n   * @return {Array}\n   * @memberof ClData\n   */\n  mergeMon (source, now, rightmode) {\n    const out = this.mergeDay(source, now, rightmode)\n    return matchDayToMon(out)\n    // 合并月线\n  }\n  /**\n   * merge 5 day data\n   * @param {Object} source\n   * @param {Array} min\n   * @return {Array}\n   * @memberof ClData\n   */\n  mergeDay5 (source, min) {\n    let out = []\n\n    if (source !== undefined && !isEmptyArray(source.value)) {\n      out = copyArrayOfDeep(source.value)\n      const lastDate = getDate(source.value[source.value.length - 1][source.fields.time])\n      if (lastDate === this.tradeDate) {\n        return out\n      }\n    }\n    if (min === undefined || isEmptyArray(min.value)) {\n      return out\n    }\n    const daymins = getMinuteCount(this.tradeTime) * 4\n    let money\n    for (let k = 0; k < min.value.length; k++) {\n      if (this.static.stktype === 0) {\n        if (k === 0) {\n          money = min.value[k][min.fields.vol] * min.value[k][min.fields.close]\n        } else {\n          money += (min.value[k][min.fields.vol] - min.value[k - 1][min.fields.vol]) * min.value[k][min.fields.close]\n        }\n      } else {\n        money = min.value[k][min.fields.money]\n      }\n      out.push([\n        fromIndexToTradeTime(min.value[k][min.fields.idx], this.tradeTime, this.tradeDate),\n        min.value[k][min.fields.close],\n        k === 0 ? min.value[k][min.fields.vol] : min.value[k][min.fields.vol] - min.value[k - 1][min.fields.vol],\n        daymins + min.value[k][min.fields.idx],\n        min.value[k][min.fields.vol],\n        money\n      ])\n    }\n    return out\n  }\n  // source历史分钟线 nowmin当日分钟线\n  /**\n   * make minute data\n   * @param {String} outkey\n   * @param {Object} source\n   * @param {Array} nowmin\n   * @param {String} rightMode\n   * @return {Array}\n   * @memberof ClData\n   */\n  makeMinute (outkey, source, nowmin, rightMode) {\n    let out = []\n    if (source !== undefined && !isEmptyArray(source.value)) {\n      out = copyArrayOfDeep(source.value)\n      out = transExrightMin(out, this.static.coinzoom, this.InData['RIGHT'].value, rightMode,\n        // this.config.start,this.config.stop);\n        0, out.length - 1)\n\n      const lastDate = getDate(source.value[source.value.length - 1][source.fields.time])\n      if (lastDate === this.tradeDate) {\n        // 已经是最新的数据了\n        return out\n      }\n    }\n    // 没有原始数据或者未收市，需要把当日的nowmin合并\n    if (nowmin !== undefined && !isEmptyArray(nowmin.value)) {\n      let offset = 5\n      if (outkey === 'M15') offset = 15\n      if (outkey === 'M30') offset = 30\n      if (outkey === 'M60') offset = 60\n      out = this.mergeNowMinToMin(out, nowmin, offset) // 当日的分钟线转成分钟线，索引转时间的问题\n    }\n    // out = matchMinToMinute(out, outkey);\n    return out\n  }\n  /**\n   * merge now's min data to min data\n   * @param {Object} source\n   * @param {Array} min\n   * @param {Number} offset\n   * @return {Array}\n   * @memberof ClData\n   */\n  mergeNowMinToMin (source, min, offset) {\n    const curMin = []\n    let sumVol = 0\n    let sumMoney = 0\n\n    let hasData = false\n    let stopIdx = 4\n\n    for (let k = 0; k < min.value.length; k++) {\n      const curIndex = min.value[k][min.fields.idx]\n      if (curIndex < 0) continue\n      if (curIndex > stopIdx) {\n        if (hasData) {\n          curMin[min.fields.vol] = min.value[k][min.fields.vol] - sumVol\n          curMin[min.fields.money] = min.value[k][min.fields.money] - sumMoney\n          sumVol = min.value[k][min.fields.vol]\n          sumMoney = min.value[k][min.fields.money]\n\n          curMin[min.fields.time] = fromIndexToTradeTime(stopIdx, this.tradeTime, this.tradeDate)\n          source.push(copyArrayOfDeep(curMin))\n        }\n        stopIdx = (Math.floor(curIndex / offset) + 1) * offset - 1\n        curMin[min.fields.open] = min.value[k][min.fields.open]\n        curMin[min.fields.high] = min.value[k][min.fields.high]\n        curMin[min.fields.low] = min.value[k][min.fields.low]\n        curMin[min.fields.close] = min.value[k][min.fields.close]\n        hasData = true\n      } else { // curIndex 在0-5之间\n        if (hasData) {\n          curMin[min.fields.high] = curMin[min.fields.high] > min.value[k][min.fields.high]\n            ? curMin[min.fields.high] : min.value[k][min.fields.high]\n          curMin[min.fields.low] = curMin[min.fields.low] < min.value[k][min.fields.low] ||\n            min.value[k][min.fields.low] === 0\n            ? curMin[min.fields.low] : min.value[k][min.fields.low]\n          curMin[min.fields.close] = min.value[k][min.fields.close]\n        } else {\n          curMin[min.fields.open] = min.value[k][min.fields.open]\n          curMin[min.fields.high] = min.value[k][min.fields.high]\n          curMin[min.fields.low] = min.value[k][min.fields.low]\n          curMin[min.fields.close] = min.value[k][min.fields.close]\n          hasData = true\n        }\n      }\n    } // for i\n    if (hasData) {\n      curMin[min.fields.vol] = min.value[min.value.length - 1][min.fields.vol] - sumVol\n      curMin[min.fields.money] = min.value[min.value.length - 1][min.fields.money] - sumMoney\n      curMin[min.fields.time] = fromIndexToTradeTime(stopIdx, this.tradeTime, this.tradeDate)\n      source.push(copyArrayOfDeep(curMin))\n    }\n    return source\n  }\n\n  //  以下为公式系统，自由计算的定义\n\n  /**\n   * make lien data\n   * @param {Object} source\n   * @param {String} outkey\n   * @param {String} formula\n   * @return {Array}\n   * @memberof ClData\n   */\n  makeLineData (source, outkey, formula) {\n    const value = this.formula.runSingleStock(source, formula)\n    if (this.OutData[outkey] === undefined) {\n      this.OutData[outkey] = {\n        outkey,\n        fields: FIELD_ILINE,\n        value\n      }\n    } else {\n      this.OutData[outkey].value = value\n      // 返回的值都是真实的值，不用再除单位了，具体显示几个小数点，由坐标的类别来定，\n    }\n    return this.OutData[outkey]\n  }\n} // end.\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 以下是 ClDrawSeer 的实体定义\n\n// case 1: return '未生效';\n// case 2: return '股票停牌';\n// case 20: return '股东增持';\n// case 100: return '已生效(1 -> 100)';\n// case 101: return '已成功(100 -> 101)';\n// case 102: return '已失败(100 -> 102)';\n// case 200: return '未成功已结束(100 -> 200)';\n// case 201: return '成功已结束(101 -> 201)';\n// case 202: return '失败已结束(102 -> 202)';\n// case 300: return '未生效已结束(1/2 -> 300)';\n// case 400: return '错误';\n\nimport {\n  _drawSignCircle,\n  _setTransColor,\n  _fillRect,\n  _drawSignHLine,\n  _drawSignVLine\n} from '../util/cl.draw'\nimport {\n  findNearTimeToIndex\n} from '../chart/cl.chart.tools'\nimport getValue, {\n  // getZipDay,\n  getExrightPriceRange\n} from '../data/cl.data.tools'\nimport {\n  initCommonInfo\n} from '../chart/cl.chart.init'\nimport {\n  inArray,\n  inRangeY,\n  intersectArray,\n  // copyArrayOfDeep,\n  formatPrice,\n  copyArrayOfDeep\n} from '../util/cl.tool'\nimport {\n  FIELD_DAY\n} from '../cl.data.def'\n\n// 预测信息定义\nexport const FIELD_SEER = {\n  // code: 0,\n  start: 1, // 开始日期\n  period: 2, // 预期周期\n  buy: 3, // 买入价\n  target: 4, // 目标价\n  stoploss: 5, // 止损价\n  status: 6, // 当前状态\n  // stopdate: 7, // 停止日期 正在进行的为0\n  // highdate: 8,  // 最高价格日期\n  // lowdate: 9,    // 最低价格日期\n  // surplus: 10, // 剩余天数\n  uid: 11, // 预测的id\n  focused: 12 // 是否热点\n}\n\nexport const FIELD_SEER_HOT = {\n  uid: 0\n}\n\n// 创建时必须带入父类，后面的运算定位都会基于父节点进行；\n// 这个类仅仅是画图, 因此需要把可以控制的rect传入进来\n/**\n * Class representing ClDrawSeer\n * @export\n * @class ClDrawSeer\n */\nexport default class ClDrawSeer {\n  /**\n   * Creates an instance of ClDrawSeer.\n   * @param {Object} father\n   * @param {Object} rectMain\n   * @constructor\n   */\n  constructor (father, rectMain) {\n    initCommonInfo(this, father)\n    this.rectMain = rectMain\n\n    this.linkInfo = father.father.linkInfo\n\n    this.source = father.father\n\n    this.static = father.father.static\n\n    this.maxmin = father.maxmin\n    this.layout = father.layout\n  }\n\n  /**\n   * get seer position\n   * @param {Number} index\n   * @param {Number} nowprice\n   * @return {Object}\n   * @memberof ClDrawSeer\n   */\n  getSeerPos (index, nowprice) {\n    const offset = index - this.linkInfo.minIndex\n    if (offset < 0 || index > this.linkInfo.maxIndex) {\n      return {\n        visible: false\n      }\n    }\n    // 不在视线内就不画\n    const xx = this.rectMain.left + offset * (this.linkInfo.unitX + this.linkInfo.spaceX) + Math.floor(this.linkInfo.unitX / 2)\n    let price = nowprice\n    if (nowprice === undefined) {\n      price = getValue(this.data, 'close', index)\n    }\n    const yy = this.rectMain.top + Math.round((this.maxmin.max - price) * this.maxmin.unitY)\n    return {\n      visible: true,\n      xx,\n      yy\n    }\n  }\n  /**\n   * draw hot seer\n   * @param {Number} no\n   * @memberof ClDrawSeer\n   */\n  drawHotSeer (no) {\n    let idx = findNearTimeToIndex(this.data, getValue(this.sourceSeer, 'start', no), 'time', 'forword')\n    if (idx === -1) idx = this.linkInfo.maxIndex\n    const offset = idx - this.linkInfo.minIndex\n    if (offset < 0) return // 不在视线内就不画\n\n    const xx = this.rectMain.left + offset * (this.linkInfo.unitX + this.linkInfo.spaceX) + Math.floor(this.linkInfo.unitX / 2)\n\n    const status = getValue(this.sourceSeer, 'status', no)\n    const startPrice = getValue(this.sourceSeer, 'buy', no)\n    let price = startPrice\n\n    let yy = this.rectMain.top + Math.round((this.maxmin.max - price) * this.maxmin.unitY)\n\n    let startTxt = this.linkInfo.hideInfo ? '买点' : '买点:' + formatPrice(price, this.static.coinunit)\n    if (startPrice === 0) {\n      startTxt = '停牌中' // 停牌期间预测的股票\n      price = getValue(this.data, 'close', idx)\n      yy = this.rectMain.top + Math.round((this.maxmin.max - price) * this.maxmin.unitY)\n    }\n    let color = this.color.vol\n    if (inArray(status, [1, 20, 300])) {\n      color = this.color.txt\n    } else if (inArray(status, [2])) {\n      startTxt = '停牌中'\n    }\n    _drawSignHLine(this.context, {\n      linew: this.scale,\n      xx,\n      yy,\n      right: this.rectMain.left + this.rectMain.width + this.layout.offset.right - 2 * this.scale,\n      clr: color,\n      bakclr: this.color.back,\n      font: this.layout.title.font,\n      pixel: this.layout.title.pixel,\n      spaceX: 4 * this.scale,\n      spaceY: 3 * this.scale,\n      x: 'start',\n      y: 'middle'\n    }, [{\n      txt: startTxt,\n      set: 100,\n      display: !this.linkInfo.hideInfo\n    }])\n\n    const period = getValue(this.sourceSeer, 'period', no)\n    const surplus = period - (this.linkInfo.maxIndex - idx)\n\n    let txt = ' 周期:[' + period + '天]'\n    if (surplus > 0) txt += ' 剩余:[' + surplus + '天]'\n\n    _drawSignVLine(this.context, {\n      linew: this.scale,\n      xx,\n      yy,\n      left: this.rectMain.left,\n      bottom: this.rectMain.top + this.rectMain.height + this.layout.offset.bottom + 2 * this.scale,\n      clr: color,\n      bakclr: this.color.back,\n      font: this.layout.title.font,\n      pixel: this.layout.title.pixel,\n      spaceX: 2 * this.scale,\n      paceY: 2 * this.scale\n    }, [{\n      txt: 'arc',\n      set: 0,\n      minR: 0,\n      maxR: 3 * this.scale,\n      display: true\n    },\n    {\n      txt: getValue(this.sourceSeer, 'start', no) + txt,\n      set: 100,\n      display: true\n    }\n    ])\n    this.drawTransRect(this.rectMain.left, xx)\n    const xxRight = xx + period * (this.linkInfo.spaceX + this.linkInfo.unitX)\n    this.drawTransRect(xxRight, this.rectMain.left + this.rectMain.width)\n    if (startPrice === 0) return\n\n    let infos\n    price = getValue(this.sourceSeer, 'stoploss', no)\n    let yl = this.rectMain.top + Math.round((this.maxmin.max - price) * this.maxmin.unitY)\n    if (yl - yy > 1.5 * this.layout.title.pixel) {\n      infos = [{\n        txt: 'arc',\n        set: 0,\n        minR: 0,\n        maxR: 2 * this.scale,\n        display: true\n      },\n      {\n        txt: this.linkInfo.hideInfo ? '止损' : '止损:' + formatPrice(price, this.static.coinunit),\n        set: 100,\n        display: !this.linkInfo.hideInfo\n      }\n      ]\n    } else {\n      infos = [{\n        txt: 'arc',\n        set: 0,\n        minR: 0,\n        maxR: 2 * this.scale,\n        display: true\n      },\n      {\n        txt: 'arc',\n        set: 100,\n        minR: 0,\n        maxR: 1 * this.scale,\n        display: true\n      }\n      ]\n    }\n    if (inRangeY(this.rectMain, yy)) {\n      _drawSignHLine(this.context, {\n        linew: this.scale,\n        xx,\n        yy: yl,\n        right: this.rectMain.left + this.rectMain.width + this.layout.offset.right - 2 * this.scale,\n        clr: this.color.green,\n        bakclr: this.color.back,\n        font: this.layout.title.font,\n        pixel: this.layout.title.pixel,\n        spaceX: 4 * this.scale,\n        spaceY: 3 * this.scale,\n        x: 'start',\n        y: 'middle'\n      }, infos)\n    }\n\n    price = getValue(this.sourceSeer, 'target', no)\n    yl = this.rectMain.top + Math.round((this.maxmin.max - price) * this.maxmin.unitY)\n    if (yy - yl > 1.5 * this.layout.title.pixel) {\n      infos = [{\n        txt: 'arc',\n        set: 0,\n        minR: 0,\n        maxR: 2 * this.scale,\n        display: true\n      },\n      {\n        txt: this.linkInfo.hideInfo ? '目标' : '目标:' + formatPrice(price, this.static.coinunit),\n        set: 100,\n        display: !this.linkInfo.hideInfo\n      }\n      ]\n    } else {\n      infos = [{\n        txt: 'arc',\n        set: 0,\n        minR: 0,\n        maxR: 2 * this.scale,\n        display: true\n      },\n      {\n        txt: 'arc',\n        set: 100,\n        minR: 0,\n        maxR: 2 * this.scale,\n        display: true\n      }\n      ]\n    }\n    if (inRangeY(this.rectMain, yy)) {\n      _drawSignHLine(this.context, {\n        linew: this.scale,\n        xx,\n        yy: yl,\n        right: this.rectMain.left + this.rectMain.width + this.layout.offset.right - 2 * this.scale,\n        clr: this.color.red,\n        bakclr: this.color.back,\n        font: this.layout.title.font,\n        pixel: this.layout.title.pixel,\n        spaceX: 4 * this.scale,\n        spaceY: 3 * this.scale,\n        x: 'start',\n        y: 'middle'\n      }, infos)\n    }\n\n    const stop = getValue(this.sourceSeer, 'stop', no)\n    // 100 进行中\n    if (inArray(status, [101, 102, 200, 201, 202, 300])) {\n      const stopIdx = findNearTimeToIndex(this.data, stop, 'time', 'forword')\n      const stopOffset = stopIdx - this.linkInfo.minIndex\n      const stopX = this.rectMain.left + stopOffset * (this.linkInfo.unitX + this.linkInfo.spaceX) + Math.floor(this.linkInfo.unitX / 2)\n      if (stopX > this.rectMain.left && stopX < this.rectMain.left + this.rectMain.width - 4 * this.scale) {\n        color = this.color.vol\n        price = getValue(this.sourceSeer, 'buy', no)\n        yl = this.rectMain.top + Math.round((this.maxmin.max - price) * this.maxmin.unitY)\n        if (inArray(status, [102, 202])) {\n          color = this.color.green\n          price = getValue(this.sourceSeer, 'stoploss', no)\n          yl = this.rectMain.top + Math.round((this.maxmin.max - price) * this.maxmin.unitY)\n        } else if (inArray(status, [101, 201])) {\n          color = this.color.red\n          price = getValue(this.sourceSeer, 'target', no)\n          yl = this.rectMain.top + Math.round((this.maxmin.max - price) * this.maxmin.unitY)\n        } else if (inArray(status, [300])) {\n          color = this.color.txt\n        }\n        _drawSignCircle(this.context, stopX, yl, {\n          r: 3 * this.scale,\n          clr: color\n        }\n          // { r: 2 * this.scale, clr: this.color.back },\n        )\n      }\n    }\n  }\n  /**\n   * filter seer\n   * @return {Array}\n   * @memberof ClDrawSeer\n   */\n  filterSeer () {\n    const out = {}\n    for (let i = 0; i < this.sourceSeer.value.length; i++) {\n      const curDate = getValue(this.sourceSeer, 'start', i)\n      let index = findNearTimeToIndex(this.data, curDate, 'time', 'forword')\n      if (index === -1) index = this.linkInfo.maxIndex\n      if (out[index] === undefined) {\n        out[index] = {\n          nos: [],\n          uids: []\n        }\n      }\n      out[index].name = 'SEER' + index\n      out[index].date = getValue(this.data, 'time', index)\n      out[index].nos.push(i)\n      out[index].uids.push(getValue(this.sourceSeer, 'uid', i))\n      // 这里判断当前节点是否存在热点\n      if (inArray(getValue(this.sourceSeer, 'uid', i), this.hotSeer.value)) {\n        out[index].focused = true\n        out[index].hotIdx = i\n      }\n    }\n    return out\n  }\n  /**\n   * before location\n   * @return {Number}\n   * @memberof ClDrawSeer\n   */\n  beforeLocation () {\n    this.linkInfo.rightMode = 'forword'\n    this.data = this.source.getData(this.father.hotKey)\n    const lastDate = this.data.value[this.data.value.length - 1][this.data.fields.time]\n\n    this.sourceSeer = this.source.getData('SEER')\n    this.hotSeer = this.source.getData('SEERHOT')\n\n    if (this.sourceSeer.value.length < 1) return 0\n    if (this.hotSeer === undefined) {\n      this.hotSeer = {\n        value: [getValue(this.sourceSeer, 'uid', 0)]\n      }\n    }\n    if (this.sourceSeer.value.length < 1) return 0\n    // 求最大最小日期\n    const maxmin = {\n      max: getValue(this.sourceSeer, 'start', 0),\n      min: getValue(this.sourceSeer, 'start', this.sourceSeer.value.length - 1)\n    }\n    // 除权处理\n    const rights = this.source.getData('RIGHT')\n    if (rights !== undefined) {\n      const lastval = copyArrayOfDeep(this.sourceSeer.value)\n      for (let i = 0; i < lastval.length; i++) {\n        lastval[i][FIELD_SEER.buy] =\n          getExrightPriceRange(maxmin.min, lastDate, lastval[i][FIELD_SEER.buy], rights.value)\n        lastval[i][FIELD_SEER.target] =\n          getExrightPriceRange(maxmin.min, lastDate, lastval[i][FIELD_SEER.target], rights.value)\n        lastval[i][FIELD_SEER.stoploss] =\n          getExrightPriceRange(maxmin.min, lastDate, lastval[i][FIELD_SEER.stoploss], rights.value)\n      }\n      // 这里必须重新指向，否则会重复除权\n      this.sourceSeer = {\n        key: 'SEER',\n        fields: FIELD_SEER,\n        value: lastval\n      }\n    }\n    // 整理标记点\n    this.showSeer = this.filterSeer() // name,date,[该按钮对应的id列表],chart按钮\n    // 创建标记点\n    for (const k in this.showSeer) {\n      this.showSeer[k].chart = this.father.createButton(this.showSeer[k].name)\n      maxmin.max = maxmin.max < this.showSeer[k].date ? this.showSeer[k].date : maxmin.max\n      maxmin.min = maxmin.min > this.showSeer[k].date ? this.showSeer[k].date : maxmin.min\n    }\n    // ???\n    // 下面开始压缩数据\n    // let out = copyArrayOfDeep(this.data.value)\n\n    this.hotKey = 'SEERDAY'\n    this.data = {key: 'SEERDAY', fields: FIELD_DAY, value: this.data.value}\n\n    this.linkInfo.showMode = 'fixed'\n    // this.linkInfo.fixed.left = 20\n    // this.linkInfo.fixed.right = 20\n    this.linkInfo.fixed.min = maxmin.min\n    this.linkInfo.fixed.max = maxmin.max\n  }\n  /**\n   * draw transfer react\n   * @param {Number} left\n   * @param {Number} right\n   * @memberof ClDrawSeer\n   */\n  drawTransRect (left, right) {\n    if (right < left) return\n    const clr = _setTransColor(this.color.grid, 0.5)\n    _fillRect(this.context, left, this.rectMain.top, right - left, this.rectMain.height, clr)\n  }\n  /**\n   * paint seer chart\n   * @param {Number} key\n   * @memberof ClDrawSeer\n   */\n  onPaint (key) {\n    // if (key !== undefined) this.hotKey = key\n    // this.data = this.source.getData(this.hotKey)\n    // 设置可见\n    for (const k in this.showSeer) {\n      let showPrice\n      if (this.showSeer[k].uids.length < 1) continue\n      // 如果只有一条记录就以买入价为定位，否则以收盘价为定位\n      if (this.showSeer[k].uids.length === 1) {\n        showPrice = getValue(this.sourceSeer, 'buy', this.showSeer[k].nos[0])\n      }\n      if (this.showSeer[k].focused === true) {\n        this.father.setHotButton(this.showSeer[k].chart)\n        if (this.hotSeer.value.length === 1) {\n          showPrice = getValue(this.sourceSeer, 'buy', this.showSeer[k].hotIdx)\n        }\n      }\n      const seerPos = this.getSeerPos(k, showPrice)\n\n      let num = '*'\n      if (this.showSeer[k].uids.length < 10) {\n        num = this.showSeer[k].uids.length.toString()\n      }\n      const acrR = this.layout.symbol.size / 2\n\n      this.showSeer[k].chart.init({\n        rectMain: {\n          left: seerPos.xx - acrR,\n          top: this.showSeer[k].focused ? seerPos.yy - acrR - 2 * acrR : seerPos.yy - acrR,\n          width: 2 * acrR,\n          height: this.showSeer[k].focused ? 2 * acrR + 2 * acrR : 2 * acrR\n        },\n        config: {\n          translucent: true,\n          visible: seerPos.visible,\n          status: this.showSeer[k].focused ? 'focused' : 'enabled',\n          shape: 'set'\n        },\n        info: [{\n          map: num\n        }]\n      },\n      result => {\n        // const self = result.self.father\n        const hotInfo = intersectArray(this.showSeer[k].uids, this.hotSeer.value)\n        if (hotInfo.length > 0) {\n          this.hotSeer.value = []\n          this.father.callback({\n            event: 'seerclick',\n            data: []\n          })\n          this.source.onPaint()\n        } else {\n          this.hotSeer.value = this.showSeer[k].uids\n          this.father.callback({\n            event: 'seerclick',\n            data: this.showSeer[k].uids\n          })\n          this.source.onPaint()\n        }\n      })\n    }\n    if (this.hotSeer.value.length === 1) {\n      for (let k = 0; k < this.sourceSeer.value.length; k++) {\n        if (getValue(this.sourceSeer, 'uid', k) === this.hotSeer.value[0]) {\n          this.drawHotSeer(k)\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { CHART_SEER } from './cl.seer.def'\nimport { FIELD_SEER } from './cl.seer'\nexport default {\n  CHART_SEER,\n  FIELD_SEER\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// 以下是 ClDrawSeer 的实体定义\n\n// case 1: return '未生效';\n// case 2: return '股票停牌';\n// case 20: return '股东增持';\n// case 100: return '已生效(1 -> 100)';\n// case 101: return '已成功(100 -> 101)';\n// case 102: return '已失败(100 -> 102)';\n// case 200: return '未成功已结束(100 -> 200)';\n// case 201: return '成功已结束(101 -> 201)';\n// case 202: return '失败已结束(102 -> 202)';\n// case 300: return '未生效已结束(1/2 -> 300)';\n// case 400: return '错误';\n// 预定义参数\n\nimport ClDrawKBar from '../chart/cl.draw.kbar'\nimport ClDrawRight from '../chart/cl.draw.right'\nimport ClDrawSeer from './cl.seer'\n\n/** @module SeerConfig */\n\nexport const CHART_SEER = {\n  zoomInfo: {\n    index: 3,\n    list: [1, 2, 4, 5, 7, 9, 12, 15, 19]\n  },\n  // zoomInfo: {\n  //   min: 1,\n  //   max: 26,\n  //   index: 2, // value = index*index + 1 [1,2,5,10,17,26]\n  //   value: 7 // 实际的值，如果超过10，就会index=3，如果为4，index=1 index = sqrt（value - 1）\n  // },\n  scroll: {\n    display: 'none' // none不显示\n  },\n  title: {\n    display: 'none' // none 不显示 btn 按钮 text 文字\n  },\n  axisX: {\n    lines: 0,\n    display: 'both', // none不显示， both 两边各一个值, block ：根据lines每个块显示一个值 = 显示坐标\n    type: 'normal', // 有 day1 当日 day5 5日线 和 normal:日线 三种模式\n    format: 'date' // date time datetime normal tradetime(9:30) 根据交易时间此时 = 输出的信息格式    width: 50       // 显示宽度，web下\n  },\n  axisY: {\n    lines: 3,\n    left: {\n      display: 'both', // none不显示, both, noupper 不显示最上面, nofoot不显示最下面 = 显示坐标\n      middle: 'none', // 是否有中间值 'before'=前收盘 ‘zero’ 0为中间值\n      format: 'price' // 输出数据的格式 rate, price 保留一定小数位 vol 没有小数\n    },\n    right: {\n      display: 'both', // none不显示，noupper 不显示最上面, nofoot不显示最下面 = 显示坐标\n      middle: 'none', // 是否有中间值 'before'=前收盘 ‘zero’ 0为中间值\n      format: 'price' // rate, price vol\n    }\n  },\n  lines: [{\n    // type: 'l_kbar',\n    className: ClDrawKBar,\n    extremum: { // 如何取极值\n      method: 'normal', // fixedLeft fixedRight 上下固定,此时需要取axisY.middle的定义\n      maxvalue: ['high'], // 参与计算最大值的标签\n      minvalue: ['low'] // 参与计算最小值的标签\n    }\n    // 第一根线默认的key是跟随chart的hotKey变化而变化的，其他线要么自己有数据，要么根据hotKey加上公式计算出自己的key\n  },\n  {\n    className: ClDrawRight\n  },\n  {\n    className: ClDrawSeer\n  }]\n}\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Class representing a event\n * @export\n * @class EV\n */\nexport default class EV {\n  constructor () {\n    this.handlers = {}\n  }\n\n  /**\n   * emit an event\n   * @param {String} event event name\n   * @param {any} args event params\n   * @memberof EV\n   */\n  emit (event, ...args) {\n    if (this.handlers[event]) {\n      this\n        .handlers[event]\n        .forEach((handler) => handler.apply(this, args))\n    }\n  }\n  /**\n   * emit with special scope\n   * @param {any} event event name\n   * @param {any} scope scope\n   * @param {any} args event params\n   * @memberof EV\n   */\n  emitWithScope (event, scope, ...args) {\n    if (this.handlers[event]) {\n      this\n        .handlers[event]\n        .forEach((handler) => handler.apply(scope, args))\n    }\n  }\n\n  /**\n   * listen event\n   * @param {any} event event name\n   * @param {any} callback listen callback\n   * @memberof EV\n   */\n  addEventListener (event, callback) {\n    if (!this.handlers[event]) {\n      this.handlers[event] = []\n    }\n    this\n      .handlers[event]\n      .push(callback)\n  }\n  /**\n   * listen only once\n   * @param {any} event event name\n   * @param {any} callback event listener callback function\n   * @memberof EV\n   */\n  once (event, callback) {\n    const self = this\n    self.on(event, function onetimeCallback () {\n      callback.apply(this, arguments)\n      self.removeListener(event, onetimeCallback)\n    })\n  }\n  /**\n   * remove special event listener by callback function\n   * @param {any} event event name\n   * @param {any} callback event listener callback function\n   * @memberof EV\n   */\n  removeEventListener (event, callback) {\n    if (this.handlers[event]) {\n      const index = this\n        .handlers[event]\n        .indexOf(callback)\n      if (index > -1) {\n        this\n          .handlers[event]\n          .splice(index, 1)\n      }\n    }\n  }\n  /**\n   * remove all listeners for events\n   * @param {any} event event name\n   * @memberof EV\n   */\n  removeAllListeners (event) {\n    this.handlers[event] = undefined\n  }\n};\n","/**\n * Copyright (c) 2018-present clchart Contributors.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport ClChart from './chart/cl.chart'\nimport ClEvent from './event/cl.event'\nimport ClData from './data/cl.data'\n\nimport * as ClChartDef from './cl.chart.def'\nimport * as ClDataDef from './cl.data.def'\nimport ClPlugins from './plugins/cl.register'\n\nimport {\n  initSystem\n} from './chart/cl.chart.init'\n\nimport EV from './util/cl.ev'\n\n/** @module ClChart */\n\n/**\n * chart default defined\n * @export\n */\nexport const DEF_CHART = ClChartDef\n/**\n * data default defined\n * @export\n */\nexport const DEF_DATA = ClDataDef\n/**\n * plugins\n * @export\n */\nexport const PLUGINS = ClPlugins\n\n/**\n * utils\n * @export\n */\nexport const util = {\n  EV\n}\n\n/**\n * create single stock chart\n * @export\n * @param {Object} cfg SystemConfig\n * @returns chart instance\n */\nexport function createSingleChart (cfg) {\n  const sysInfo = initSystem(cfg)\n  const chart = new ClChart(sysInfo)\n  const event = new ClEvent(sysInfo)\n  const data = new ClData()\n\n  chart.initChart(data, event)\n  return chart\n}\n/**\n * create mulit stocks chart\n * processing\n * @export\n * @param {any} cfg SystemConfig\n * @returns charts instance\n */\nexport function createMulChart (cfg) {\n  const sysInfo = initSystem(cfg)\n  const event = new ClEvent(sysInfo)\n  const chartList = {}\n  for (const key in cfg.charts) {\n    const chart = new ClChart(sysInfo)\n    const data = new ClData()\n    chart.initChart(data, event)\n    chartList[key] = chart\n  }\n  return chartList\n}\n"],"sourceRoot":""}